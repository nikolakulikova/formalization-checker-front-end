{"version":3,"sources":["redux/fetchData.js","../../js-fol-parser/dist/index.js","redux/userSlice.js","config.js","../../js-fol-parser/dist/parser/index.js","../../js-fol-parser/dist/parser/startRules.js","redux/formula_classes.js","redux/helpers.js","redux/addExerciseSlice.js","redux/exercisesSlice.js","redux/progressPropositionsSlice.js","redux/solveExerciseSlice.js","redux/adminsSlice.js","redux/store.js","components/login/ProtectedRoute.js","components/login/LoginForm.js","components/solveExercise/ExerciseList.js","components/addExercise/SyntaxError.js","components/solveExercise/Evaluation.js","components/solveExercise/Solution.js","components/solveExercise/SolveExercise.js","components/addExercise/Constants.js","components/addExercise/Predicates.js","components/addExercise/Functions.js","components/addExercise/Clashes.js","components/addExercise/Constraint.js","components/addExercise/LanguageSection.js","components/addExercise/Formalization.js","components/addExercise/Proposition.js","components/addExercise/PropositionsSection.js","components/addExercise/ExerciseTitle.js","components/addExercise/Description.js","components/addExercise/AddExercise.js","components/login/AdminRoute.js","components/studentProgress/Exercises.js","components/studentProgress/UserSolutionsList.js","components/studentProgress/UsersToExercise.js","components/addAdmins/UserList.js","App.js","serviceWorker.js","index.js"],"names":["fetchData","route","method","a","body","undefined","config","headers","localStorage","getItem","JSON","stringify","fetch","BACKEND_URL","response","ok","json","Error","status","statusText","_interopRequireDefault","require","Object","defineProperty","exports","value","enumerable","get","_parser","parse","SyntaxError","parseTff","parseSubstitution","parseValuation","parseTuples","parseDomain","parseFunctions","parsePredicates","parseConstants","parseClause","parseFormulaWithPrecedence","parseFormulaStrict","parseTerm","_startRules","input","language","factories","startRule","default","Term","FormulaStrict","FormulaWithPrecedence","Clause","Constants","Predicates","Functions","Domain","Tuples","Valuation","Substitution","Tff","logIn","createAsyncThunk","username","password","rejectWithValue","data","console","error","message","logInByGithub","code","userSlice","createSlice","name","initialState","isLoggedIn","isAdmin","user","usernameValue","passwordValue","reducers","updateUsername","state","action","payload","updatePassword","logOut","removeItem","extraReducers","pending","fulfilled","Buffer","from","token","split","toString","rejected","actions","module","process","CLIENT_ID","REDIRECT","peg$SyntaxError","expected","found","location","this","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","options","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parseTerm","peg$parseFormulaStrict","peg$parseFormulaWithPrecedence","s0","s2","peg$currPos","peg$parseWS","s1","s3","peg$silentFails","peg$fail","peg$c190","substr","peg$c192","peg$c194","peg$c196","peg$c198","peg$c200","peg$c202","peg$c204","peg$c206","peg$c208","peg$parseIdentifierPart","peg$c210","peg$c212","peg$c188","peg$parseEmptyClause","peg$savedPos","clause","ee","peg$parseClauseLiterals","lits","peg$parseClauseCases","s4","s5","s7","peg$parseConstantIdentifier","peg$c10","peg$c214","push","concat","peg$parseConstantsNE","peg$parseEmptyList","peg$parseLanguagePredicate","peg$c217","peg$c218","peg$parsePredicatesNE","peg$parseLanguageFunction","peg$c220","peg$parseFunctionsNE","peg$parseDomainElement","peg$c235","peg$c236","peg$parseDomainNE","peg$parseTuple","peg$c241","peg$c12","peg$parseTuplesNE","peg$parseValuationPair","peg$parseValuationNE","peg$parseSubstitutionPair","peg$parseSubstitutionNE","tff","s8","s10","s12","peg$c255","peg$parseIdentifier","peg$parsename","peg$c261","peg$c264","peg$parseformulaRole","peg$parsetffAtomTyping","peg$parsetffWS","peg$parsetffLogicFormula","peg$parseuntypedAtom","peg$c374","peg$parsesubtypeSign","peg$parsedefinedConstant","peg$parseatom","peg$parsetffSubtype","peg$parsetfxSequent","peg$parsetfxTuple","peg$c102","t","f","implication","peg$c3","peg$c5","peg$parsetffFormula","peg$c257","formula","peg$startRuleFunction","peg$c1","peg$otherExpectation","peg$literalExpectation","peg$c11","t1","ti","ts","peg$c19","peg$c22","v","existentialQuant","peg$c23","universalQuant","peg$c24","negation","peg$c25","peg$c36","leftmost","right","peg$c47","peg$c49","peg$c51","peg$c53","peg$c55","peg$c57","peg$c59","peg$c60","peg$c62","peg$c64","peg$c66","peg$c68","peg$c70","peg$c72","peg$c73","peg$c75","peg$c77","peg$c79","peg$c81","peg$c83","peg$c85","peg$c86","peg$c88","peg$c90","peg$c92","peg$c94","peg$c96","peg$c98","peg$c100","peg$c104","peg$c106","peg$c108","peg$c110","peg$c112","peg$c113","peg$c115","peg$c117","peg$c119","peg$c121","peg$c123","peg$c125","peg$c127","peg$c129","peg$c131","peg$c133","peg$c135","peg$c137","peg$c139","peg$c141","peg$c142","peg$c144","peg$c146","peg$c148","peg$c150","peg$c152","peg$c153","peg$c155","peg$c157","peg$c159","peg$c161","peg$c163","peg$c164","peg$c166","peg$c168","peg$c170","peg$c172","peg$c174","peg$c176","peg$c177","peg$c179","peg$c181","peg$c183","peg$c185","peg$c187","c1","ci","p1","pi","ps","f1","fi","peg$c222","peg$c223","peg$c226","peg$c227","peg$classExpectation","peg$c229","peg$c231","peg$c232","arity","peg$c233","e1","ei","es","peg$c237","peg$c238","peg$c239","peg$c242","peg$c244","e","peg$c246","peg$c247","peg$c249","peg$c251","peg$c253","peg$c267","peg$c268","peg$c269","peg$c270","peg$c271","peg$c287","peg$c289","peg$c291","peg$c294","peg$c298","peg$c299","peg$c313","peg$c314","peg$c315","constant","peg$c317","peg$c320","peg$c322","peg$c324","peg$c326","peg$c332","peg$c335","peg$c338","peg$c341","peg$c351","peg$c353","peg$c355","peg$c360","predicateAtom","peg$c362","peg$c364","peg$c369","peg$c380","peg$c383","peg$c384","peg$c386","peg$c388","peg$c390","peg$c392","peg$c394","peg$c396","peg$c398","peg$c400","peg$c401","peg$c402","peg$c403","peg$c405","peg$c407","peg$c409","peg$c411","peg$c413","peg$c415","peg$c417","peg$c419","peg$c421","peg$c425","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$buildStructuredError","isFunction","substring","peg$parseFunctionSymbol","peg$parseTerms","functionApplication","isConstant","peg$parseConstantSymbol","c","peg$parseVariableSymbol","variable","peg$parseTermCases","peg$parsePredicateAtom","peg$parsePredicateSymbol","predicate","arguments","peg$parseQuasiAtom","pa","peg$parseEqualitySymbol","equalityAtom","peg$parseNonEqualitySymbol","t2","peg$parseEqNeqSymbol","peg$parseConjunctionSymbol","conjunction","peg$parseDisjunctionSymbol","disjunction","peg$parseImplicationSymbol","peg$parseEquivalenceSymbol","equivalence","peg$parseBinaryConnective","peg$parseExistsSymbol","peg$parseForallSymbol","peg$parseNegationSymbol","peg$parseFormulaStrictCases","peg$parseImplicativeFormula","peg$parseDisjunctiveFormula","left","rights","reduceRight","equivs","peg$parseEquivalencesRight","peg$parseImplicativeCases","peg$parseConjunctiveFormula","reduce","disj","peg$parseUnaryFormula","conj","peg$parsePrimaryFormula","peg$parseLiteral","peg$c40","peg$parsePrimaryClause","flat","isVariable","isPredicate","peg$parseNat","test","charAt","parseInt","s6","peg$parsePredicateArity","peg$parseFunctionArity","s9","peg$parseMapsTo","peg$parsetffUnitFormula","peg$parsetffAndFormula","peg$parsetffOrFormula","peg$parsetffBinaryAssoc","peg$parsenonassocConnective","peg$parsetffBinaryNonassoc","peg$parsetffBinaryFormula","peg$parsetffUnaryFormula","peg$parsetffDefinedInfix","peg$parsetffUnitaryFormula","peg$parsefofQuantifier","peg$parsetffVariableList","u","peg$parsetffQuantifiedFormula","peg$parsetffAtomicFormula","peg$parsevariable","peg$parsetfxUnitaryFormula","peg$parsetffVariable","peg$parsetffAtomicType","peg$parsetffTypedVariable","peg$parsetffPrefixUnary","peg$parsetffUnitaryTerm","peg$parseinfixInequality","peg$parsetffInfixUnary","peg$parseunaryConnective","peg$parsetffPreunitFormula","peg$parsedefinedTerm","peg$parsetffArguments","peg$parsetffTerm","peg$parsedistinctObject","peg$parsedoubleQuote","peg$parsedoChar","peg$parsefunctor","peg$parseconstant","peg$parsetffTopLevelType","kind","atom","peg$parsetypeFunctor","peg$parsetffTypeArguments","peg$parselowerWord","peg$parsedefinedType","peg$parsetffTypeList","peg$parsetfxTupleType","peg$parsetffMappingType","peg$parsetffXprodType","peg$parsetffUnitaryType","peg$parseatomicWord","peg$parsetf1QuantifiedType","peg$parsetffMonotype","peg$parsetffPlainAtomic","peg$parsedefinedFunctor","s11","s13","peg$parsetfxConditional","peg$parsetffAtomTypingList","peg$parsetfxLetTypes","peg$parsetfxLetDefn","peg$parsetfxLetDefnList","l","dl","peg$c367","peg$parsetfxLetDefns","peg$parsetfxLet","peg$parsetffDefinedPlain","peg$parsetffDefinedAtomic","peg$parsesystemConstant","peg$parsesystemFunctor","peg$parsetffSystemAtomic","peg$parsetfxLetLHS","peg$parseassignment","peg$parsetffNonAtomicType","peg$parseatomicSystemWord","peg$parseZs","peg$parseIdentifierStart","peg$parseUnicodeDigit","peg$parseLu","peg$parseLl","peg$parseLt","peg$parseLm","peg$parseLo","peg$parseNl","peg$parseUnicodeLetter","peg$parseUnicodeMathematicalAlphanumeric","peg$parseMn","peg$parseMc","peg$parseUnicodeCombiningMark","peg$parseUnicodeSubscriptDigit","peg$parseUnicodeSuperscriptDigit","peg$parseNd","peg$buildSimpleError","BinaryFormula","lhs","rhs","addAll","Set","getFreeVariables","QuantifiedFormula","originalSymbol","subf","res","delete","Variable","Constant","FunctionApplication","args","fvs","arg","PredicateAtom","EqualityAtom","Negation","Conjunction","Disjunction","Implication","Equivalence","ExistentialQuant","UniversalQuant","b","forEach","elem","add","arrayToArityMap","symbols","arityMap","Map","x","has","set","parseLanguageSubset","parser","array","checkArity","symbol","parseFormalization","constants","predicates","functions","nonLogicalSymbols","keys","_","size","getStringDomainAndPredicates","d","poc","entries","key","includes","stringForPredicateAndFunctions","addNewExercise","getState","exercise","selectExercise","addExerciseSlice","title","constraint","propositions","proposition","formalizations","constraints","updateExerciseTitle","updateDescription","updateConstants","updatePredicates","updateFunctions","updateConstraint","updateInformalValue","reducer","prepare","updateFormalization","addNewProposition","addNewFormalization","removeProposition","splice","removeFormalization","updateConstraints","checkForDuplicates","values","selectExerciseTitle","addExercise","selectConstantsParsed","createSelector","result","selectPredicatesParsed","selectFunctionsParsed","selectLanguage","constantsParsed","predicatesParsed","functionsParsed","containsErrors","containsDuplicates","map","errorMessage","checkForClashes","selectPropositions","selectFormalizations","selectInformalValue","selectFormalization","selectConstraints","selectConstraint","checkExercise","fetchAllExercises","exercisesSlice","exercises","selectExercises","selectStatus","selectError","fetchAllUsersToExercise","exercise_id","fetchUsersSolutions","user_name","progressPropositionsSlice","users","solutions","meta","selectUsers","selectProposition","proposition_id","selectUsersSolution","selectUserName","fetchExercise","evaluate","solution","solveExerciseSlice","update","id","evaluation","solveExercise","selectEvaluation","selectEvalStatus","selectEvalError","fetchAllUsers","saveAdmins","admins","adminsSlice","changed","addChanged","is_admin","selectAllUsers","allUsers","selectChangedAdmins","configureStore","addExerciseReducer","exercisesReducer","progressPropositionsReducer","adminsReducer","solveExerciseReducer","userReducer","connect","Component","component","rest","render","to","pathname","mapDispatchToProps","Spinner","animation","variant","window","href","match","Form","Group","Label","Control","placeholder","onChange","target","Text","className","Button","onClick","preventDefault","url","useEffect","content","exercises_list","ListGroup","Item","as","Link","Alert","str_1","str_2","str_3","str","ownProps","getMessage","solutionToFormalization","formalizationToSolution","pom","symbolsFormalizationToSolution","domainFormalizationToSolution","languageContants","domainFormToSol","symbolsFormToSol","domainSolToForm","symbolsSolutionToFormalization","domainSolutionToFormalization","symbolsSolToForm","iFormalizationSolution","m1","iSolutionToFormalization","m2","selectSolution","disabled","useParams","propositions_list","mapStateToProps","LanguageSection","remove","data2","value2","error2","formalizations_list","attempted","Table","striped","bordered","hover","table","first","is_correct","date","user_list","solved","attempts","changedAdmins","defaultChecked","loginInfo","Fragment","Navbar","bg","sticky","Nav","Container","exact","path","ExerciseList","UserList","Exercises","UsersToExercise","UserSolutionsList","LoginForm","SolveExercise","AddExercise","Boolean","hostname","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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AU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,YAAY,GAAO,GACvrNmE,GAAWnE,GAAqB,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,YAAY,GAAO,GACrzBoE,GAAWpE,GAAqB,CAAC,OAAQ,OAAQ,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,YAAY,GAAO,GACzlLqE,GAAWrE,GAAqB,CAAC,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,WAAW,GAAO,GACjLsE,GAAWtE,GAAqB,CAAC,CAAC,IAAK,KAAM,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,YAAY,GAAO,GAC78MuE,GAAWvE,GAAqB,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,WAAW,GAAO,GAC38DwE,GAAWxE,GAAqB,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,SAAU,CAAC,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,CAAC,SAAU,UAAW,C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","file":"static/js/main.5086deb7.chunk.js","sourcesContent":["import { BACKEND_URL } from '../config';\n\n\nexport const fetchData = async (route, method, body = undefined) => {\n  const config = {\n    method: method,\n    headers: { \"Content-Type\": \"application/json\"}\n  }\n  if(localStorage.getItem(\"token\") !== undefined){\n    config.headers[\"Authorization\"] = \"Bearer \" + localStorage.getItem(\"token\");\n  }\n  if (body) {\n    config.body = JSON.stringify(body)\n  }\n\n  let response = await fetch(BACKEND_URL + route, config);\n\n  if (response.ok) {\n    return response.json();\n  }\n  \n  throw new Error(response.status + \" \" + response.statusText);\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parser.parse;\n  }\n});\nObject.defineProperty(exports, \"SyntaxError\", {\n  enumerable: true,\n  get: function () {\n    return _parser.SyntaxError;\n  }\n});\nexports.parseTff = exports.parseSubstitution = exports.parseValuation = exports.parseTuples = exports.parseDomain = exports.parseFunctions = exports.parsePredicates = exports.parseConstants = exports.parseClause = exports.parseFormulaWithPrecedence = exports.parseFormulaStrict = exports.parseTerm = void 0;\n\nvar _parser = require(\"./parser\");\n\nvar _startRules = _interopRequireDefault(require(\"./parser/startRules\"));\n\nconst parseTerm = (input, language, factories) => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Term,\n  language,\n  factories\n});\n\nexports.parseTerm = parseTerm;\n\nconst parseFormulaStrict = (input, language, factories) => (0, _parser.parse)(input, {\n  startRule: _startRules.default.FormulaStrict,\n  language,\n  factories\n});\n\nexports.parseFormulaStrict = parseFormulaStrict;\n\nconst parseFormulaWithPrecedence = (input, language, factories) => (0, _parser.parse)(input, {\n  startRule: _startRules.default.FormulaWithPrecedence,\n  language,\n  factories\n});\n\nexports.parseFormulaWithPrecedence = parseFormulaWithPrecedence;\n\nconst parseClause = (input, language, factories) => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Clause,\n  language,\n  factories\n});\n\nexports.parseClause = parseClause;\n\nconst parseConstants = input => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Constants,\n  language: null,\n  factories: null\n});\n\nexports.parseConstants = parseConstants;\n\nconst parsePredicates = input => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Predicates,\n  language: null,\n  factories: null\n});\n\nexports.parsePredicates = parsePredicates;\n\nconst parseFunctions = input => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Functions,\n  language: null,\n  factories: null\n});\n\nexports.parseFunctions = parseFunctions;\n\nconst parseDomain = input => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Domain,\n  language: null,\n  factories: null\n});\n\nexports.parseDomain = parseDomain;\n\nconst parseTuples = input => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Tuples,\n  language: null,\n  factories: null\n});\n\nexports.parseTuples = parseTuples;\n\nconst parseValuation = (input, language) => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Valuation,\n  language,\n  factories: null\n});\n\nexports.parseValuation = parseValuation;\n\nconst parseSubstitution = (input, language, factories) => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Substitution,\n  language,\n  factories\n});\n\nexports.parseSubstitution = parseSubstitution;\n\nconst parseTff = (input, factories) => (0, _parser.parse)(input, {\n  startRule: _startRules.default.Tff,\n  factories\n});\n\nexports.parseTff = parseTff;","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {fetchData} from \"./fetchData\";\n\n\n\n\n/* async actions */\n\nexport const logIn = createAsyncThunk(\n  'user/logIn',\n  async ({ username, password }, { rejectWithValue }) => {\n    try {\n      let data = {};\n      data[\"username\"] = username;\n      data[\"password\"] = password;\n      let response = await fetchData(\n          `/api/exercises/logIn`, 'POST', data\n      );\n\n    return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\nexport const logInByGithub = createAsyncThunk(\n  'user/logInGithub',\n  async ( {code},  { rejectWithValue }) => {\n    try {\n      let data = {};\n      data[\"code\"] = code;\n      let response = await fetchData(\n          `/api/exercises/logIn/github/auth`, 'POST', data\n      );\n      return response;\n    } catch (err) {\n      console.error(err.message)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoggedIn: false,\n    isAdmin: false,\n    user: null,\n    \n    status: 'idle',\n    error: null,\n\n    usernameValue: '',\n    passwordValue: ''\n  },\n  reducers: {\n    updateUsername: (state, action) => {\n      state.usernameValue = action.payload;\n    },\n    updatePassword: (state, action) => {\n      state.passwordValue = action.payload;\n    },\n    logOut: (state) => {\n      localStorage.removeItem(\"token\");\n      state.isLoggedIn = false;\n      state.user = null;\n      state.status = 'idle';\n      state.error = '';\n    },\n  },\n  extraReducers: {\n    [logIn.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [logIn.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.usernameValue = '';\n      state.passwordValue = '';\n      if (action.payload) {\n        let data = JSON.parse(Buffer.from(action.payload.token.split(\".\")[1], \"base64\").toString());\n        state.user = {\"username\": data.username};\n        state.isLoggedIn = true;\n        state.isAdmin = data.isAdmin;\n        localStorage[\"token\"] = action.payload.token\n      } else {\n        state.error = '';\n      }\n    },\n    [logIn.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'No such combination of username and password found.';\n    } ,\n    [logInByGithub.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [logInByGithub.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.usernameValue = '';\n      state.passwordValue = '';\n      if (action.payload) {\n        let data = JSON.parse(Buffer.from(action.payload.token.split(\".\")[1], \"base64\").toString());\n        state.user = {\"username\": data.username};\n        state.isLoggedIn = true;\n        state.isAdmin = data.isAdmin;\n        localStorage[\"token\"] = action.payload.token\n      } else {\n        state.error = '';\n      }\n    },\n    [logInByGithub.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'No such combination of username and password found.';\n    } ,\n  }\n});\n\n\n/* export actions */\nexport const {\n  updateUsername,\n  updatePassword,\n  logOut\n} = userSlice.actions;\n\n\nexport default userSlice.reducer;\n","const dotenv = require('dotenv');\n\ndotenv.config();\n\nmodule.exports = {\n     BACKEND_URL: process.env.REACT_APP_BACKEND_URL,\n     CLIENT_ID: process.env.REACT_APP_CLIENT_ID,\n     REDIRECT: process.env.REACT_APP_REDIRECT,\n}\n\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() {\n    this.constructor = child;\n  }\n\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function (expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function (expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n    \"class\": function (expectation) {\n      var escapedParts = \"\",\n          i;\n\n      for (i = 0; i < expectation.parts.length; i++) {\n        escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);\n      }\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n    any: function () {\n      return \"any character\";\n    },\n    end: function () {\n      return \"end of input\";\n    },\n    other: function (expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n      return '\\\\x0' + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return '\\\\x' + hex(ch);\n    });\n  }\n\n  function classEscape(s) {\n    return s.replace(/\\\\/g, '\\\\\\\\').replace(/\\]/g, '\\\\]').replace(/\\^/g, '\\\\^').replace(/-/g, '\\\\-').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n      return '\\\\x0' + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return '\\\\x' + hex(ch);\n    });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  return \"Expected \" + function (expected) {\n    var descriptions = new Array(expected.length),\n        i,\n        j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n    }\n  }(expected) + \" but \" + function (found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n      peg$startRuleFunctions = {\n    Term: peg$parseTerm,\n    FormulaStrict: peg$parseFormulaStrict,\n    FormulaWithPrecedence: peg$parseFormulaWithPrecedence,\n    Clause: peg$parseClause,\n    Constants: peg$parseConstants,\n    Predicates: peg$parsePredicates,\n    Functions: peg$parseFunctions,\n    Domain: peg$parseDomain,\n    Tuples: peg$parseTuples,\n    Valuation: peg$parseValuation,\n    Substitution: peg$parseSubstitution,\n    tff: peg$parsetff\n  },\n      peg$startRuleFunction = peg$parseTerm,\n      peg$c0 = function (t) {\n    return t;\n  },\n      peg$c1 = peg$otherExpectation(\"term\"),\n      peg$c2 = \"(\",\n      peg$c3 = peg$literalExpectation(\"(\", false),\n      peg$c4 = \")\",\n      peg$c5 = peg$literalExpectation(\")\", false),\n      peg$c6 = function (f, ts) {\n    return factories.functionApplication(f, ts, ee);\n  },\n      peg$c7 = function (c) {\n    return factories.constant(c, ee);\n  },\n      peg$c8 = function (v) {\n    return factories.variable(v, ee);\n  },\n      peg$c9 = \",\",\n      peg$c10 = peg$literalExpectation(\",\", false),\n      peg$c11 = function (t1, ti) {\n    return ti;\n  },\n      peg$c12 = function (t1, ts) {\n    return [t1].concat(ts);\n  },\n      peg$c13 = function (p, ts) {\n    return {\n      predicate: p,\n      arguments: ts\n    };\n  },\n      peg$c14 = function (t1, eqNeq, t2) {\n    return eqNeq(t1, t2, ee);\n  },\n      peg$c15 = function (pa) {\n    return factories.predicateAtom(pa.predicate, pa.arguments, ee);\n  },\n      peg$c16 = function (p) {\n    return factories.predicateAtom(p, [], ee);\n  },\n      peg$c17 = function () {\n    return factories.equalityAtom;\n  },\n      peg$c18 = function () {\n    return (t1, t2, ee) => factories.negation(factories.equalityAtom(t1, t2, ee), ee);\n  },\n      peg$c19 = peg$otherExpectation(\"formula\"),\n      peg$c20 = function (f) {\n    return f;\n  },\n      peg$c21 = function (left, c, right) {\n    return c(left, right, ee);\n  },\n      peg$c22 = function (v, f) {\n    return factories.existentialQuant(v, f, ee);\n  },\n      peg$c23 = function (v, f) {\n    return factories.universalQuant(v, f, ee);\n  },\n      peg$c24 = function (f) {\n    return factories.negation(f, ee);\n  },\n      peg$c25 = peg$otherExpectation(\"binary connective\"),\n      peg$c26 = function () {\n    return factories.conjunction;\n  },\n      peg$c27 = function () {\n    return factories.disjunction;\n  },\n      peg$c28 = function () {\n    return factories.implication;\n  },\n      peg$c29 = function () {\n    return factories.equivalence;\n  },\n      peg$c30 = function (left, icase) {\n    return icase(left);\n  },\n      peg$c31 = function (right) {\n    return left => factories.implication(left, right, ee);\n  },\n      peg$c32 = \"\",\n      peg$c33 = function () {\n    return left => left;\n  },\n      peg$c34 = function (right) {\n    return right;\n  },\n      peg$c35 = function (rights) {\n    return left => [left, ...rights].reduceRight((equivs, left) => factories.equivalence(left, equivs, ee));\n  },\n      peg$c36 = function (leftmost, right) {\n    return right;\n  },\n      peg$c37 = function (leftmost, rights) {\n    return [leftmost, ...rights].reduce((disj, right) => factories.disjunction(disj, right, ee));\n  },\n      peg$c38 = function (leftmost, rights) {\n    return [leftmost, ...rights].reduce((conj, right) => factories.conjunction(conj, right, ee));\n  },\n      peg$c39 = function (pa) {\n    return factories.literal(true, pa.predicate, pa.arguments, ee);\n  },\n      peg$c40 = function (pa) {\n    return factories.literal(false, pa.predicate, pa.arguments, ee);\n  },\n      peg$c41 = function (c) {\n    return c;\n  },\n      peg$c42 = function () {\n    return factories.clause([], ee);\n  },\n      peg$c43 = function (lits) {\n    return factories.clause(lits, ee);\n  },\n      peg$c44 = function (leftmost, rights) {\n    return [leftmost, ...rights].flat();\n  },\n      peg$c45 = function (lit) {\n    return [lit];\n  },\n      peg$c46 = function (lits) {\n    return lits;\n  },\n      peg$c47 = peg$otherExpectation(\"variable symbol\"),\n      peg$c48 = function (i) {\n    return language.isVariable(i);\n  },\n      peg$c49 = peg$otherExpectation(\"individual constant symbol\"),\n      peg$c50 = function (i) {\n    return language.isConstant(i);\n  },\n      peg$c51 = peg$otherExpectation(\"function symbol\"),\n      peg$c52 = function (i) {\n    return language.isFunction(i);\n  },\n      peg$c53 = peg$otherExpectation(\"predicate symbol\"),\n      peg$c54 = function (i) {\n    return language.isPredicate(i);\n  },\n      peg$c55 = peg$otherExpectation(\"equality symbol\"),\n      peg$c56 = \"=\",\n      peg$c57 = peg$literalExpectation(\"=\", false),\n      peg$c59 = peg$literalExpectation(\"\\u2250\", false),\n      peg$c60 = peg$otherExpectation(\"conjunction symbol\"),\n      peg$c62 = peg$literalExpectation(\"\\u2227\", false),\n      peg$c63 = \"&&\",\n      peg$c64 = peg$literalExpectation(\"&&\", false),\n      peg$c65 = \"&\",\n      peg$c66 = peg$literalExpectation(\"&\", false),\n      peg$c67 = \"/\\\\\",\n      peg$c68 = peg$literalExpectation(\"/\\\\\", false),\n      peg$c69 = \"\\\\land\",\n      peg$c70 = peg$literalExpectation(\"\\\\land\", false),\n      peg$c71 = \"\\\\wedge\",\n      peg$c72 = peg$literalExpectation(\"\\\\wedge\", false),\n      peg$c73 = peg$otherExpectation(\"disjunction symbol\"),\n      peg$c75 = peg$literalExpectation(\"\\u2228\", false),\n      peg$c76 = \"||\",\n      peg$c77 = peg$literalExpectation(\"||\", false),\n      peg$c78 = \"|\",\n      peg$c79 = peg$literalExpectation(\"|\", false),\n      peg$c80 = \"\\\\/\",\n      peg$c81 = peg$literalExpectation(\"\\\\/\", false),\n      peg$c82 = \"\\\\lor\",\n      peg$c83 = peg$literalExpectation(\"\\\\lor\", false),\n      peg$c84 = \"\\\\vee\",\n      peg$c85 = peg$literalExpectation(\"\\\\vee\", false),\n      peg$c86 = peg$otherExpectation(\"implication symbol\"),\n      peg$c88 = peg$literalExpectation(\"\\u2192\", false),\n      peg$c90 = peg$literalExpectation(\"\\u21D2\", false),\n      peg$c92 = peg$literalExpectation(\"\\u27F6\", false),\n      peg$c94 = peg$literalExpectation(\"\\u27F9\", false),\n      peg$c96 = peg$literalExpectation(\"\\u2283\", false),\n      peg$c97 = \"->\",\n      peg$c98 = peg$literalExpectation(\"->\", false),\n      peg$c99 = \"=>\",\n      peg$c100 = peg$literalExpectation(\"=>\", false),\n      peg$c101 = \"-->\",\n      peg$c102 = peg$literalExpectation(\"-->\", false),\n      peg$c103 = \"==>\",\n      peg$c104 = peg$literalExpectation(\"==>\", false),\n      peg$c105 = \"\\\\limpl\",\n      peg$c106 = peg$literalExpectation(\"\\\\limpl\", false),\n      peg$c107 = \"\\\\implies\",\n      peg$c108 = peg$literalExpectation(\"\\\\implies\", false),\n      peg$c109 = \"\\\\rightarrow\",\n      peg$c110 = peg$literalExpectation(\"\\\\rightarrow\", false),\n      peg$c111 = \"\\\\to\",\n      peg$c112 = peg$literalExpectation(\"\\\\to\", false),\n      peg$c113 = peg$otherExpectation(\"equivalence symbol\"),\n      peg$c114 = \"\\u2194\\uFE0E\",\n      peg$c115 = peg$literalExpectation(\"\\u2194\\uFE0E\", false),\n      peg$c117 = peg$literalExpectation(\"\\u27F7\", false),\n      peg$c119 = peg$literalExpectation(\"\\u21D4\", false),\n      peg$c121 = peg$literalExpectation(\"\\u27FA\", false),\n      peg$c123 = peg$literalExpectation(\"\\u2261\", false),\n      peg$c124 = \"<->\",\n      peg$c125 = peg$literalExpectation(\"<->\", false),\n      peg$c126 = \"<-->\",\n      peg$c127 = peg$literalExpectation(\"<-->\", false),\n      peg$c128 = \"<=>\",\n      peg$c129 = peg$literalExpectation(\"<=>\", false),\n      peg$c130 = \"<==>\",\n      peg$c131 = peg$literalExpectation(\"<==>\", false),\n      peg$c132 = \"===\",\n      peg$c133 = peg$literalExpectation(\"===\", false),\n      peg$c134 = \"\\\\lequiv\",\n      peg$c135 = peg$literalExpectation(\"\\\\lequiv\", false),\n      peg$c136 = \"\\\\leftrightarrow\",\n      peg$c137 = peg$literalExpectation(\"\\\\leftrightarrow\", false),\n      peg$c138 = \"\\\\equivalent\",\n      peg$c139 = peg$literalExpectation(\"\\\\equivalent\", false),\n      peg$c140 = \"\\\\equiv\",\n      peg$c141 = peg$literalExpectation(\"\\\\equiv\", false),\n      peg$c142 = peg$otherExpectation(\"existential quantifier\"),\n      peg$c144 = peg$literalExpectation(\"\\u2203\", false),\n      peg$c145 = \"\\\\e\",\n      peg$c146 = peg$literalExpectation(\"\\\\e\", false),\n      peg$c148 = peg$literalExpectation(\"x\", false),\n      peg$c149 = \"ists\",\n      peg$c150 = peg$literalExpectation(\"ists\", false),\n      peg$c151 = \"\\\\E\",\n      peg$c152 = peg$literalExpectation(\"\\\\E\", false),\n      peg$c153 = peg$otherExpectation(\"universal quantifier\"),\n      peg$c155 = peg$literalExpectation(\"\\u2200\", false),\n      peg$c156 = \"\\\\forall\",\n      peg$c157 = peg$literalExpectation(\"\\\\forall\", false),\n      peg$c158 = \"\\\\all\",\n      peg$c159 = peg$literalExpectation(\"\\\\all\", false),\n      peg$c160 = \"\\\\a\",\n      peg$c161 = peg$literalExpectation(\"\\\\a\", false),\n      peg$c162 = \"\\\\A\",\n      peg$c163 = peg$literalExpectation(\"\\\\A\", false),\n      peg$c164 = peg$otherExpectation(\"negation symbol\"),\n      peg$c166 = peg$literalExpectation(\"\\xAC\", false),\n      peg$c168 = peg$literalExpectation(\"-\", false),\n      peg$c169 = \"!\",\n      peg$c170 = peg$literalExpectation(\"!\", false),\n      peg$c171 = \"~\",\n      peg$c172 = peg$literalExpectation(\"~\", false),\n      peg$c173 = \"\\\\neg\",\n      peg$c174 = peg$literalExpectation(\"\\\\neg\", false),\n      peg$c175 = \"\\\\lnot\",\n      peg$c176 = peg$literalExpectation(\"\\\\lnot\", false),\n      peg$c177 = peg$otherExpectation(\"non-equality symbol\"),\n      peg$c179 = peg$literalExpectation(\"\\u2260\", false),\n      peg$c180 = \"!=\",\n      peg$c181 = peg$literalExpectation(\"!=\", false),\n      peg$c182 = \"<>\",\n      peg$c183 = peg$literalExpectation(\"<>\", false),\n      peg$c184 = \"/=\",\n      peg$c185 = peg$literalExpectation(\"/=\", false),\n      peg$c186 = \"\\\\neq\",\n      peg$c187 = peg$literalExpectation(\"\\\\neq\", false),\n      peg$c188 = peg$otherExpectation(\"empty clause symbol\"),\n      peg$c190 = peg$literalExpectation(\"\\u25A1\", false),\n      peg$c191 = \"\\u25AB\\uFE0E\",\n      peg$c192 = peg$literalExpectation(\"\\u25AB\\uFE0E\", false),\n      peg$c193 = \"\\u25FD\\uFE0E\",\n      peg$c194 = peg$literalExpectation(\"\\u25FD\\uFE0E\", false),\n      peg$c195 = \"\\u25FB\\uFE0E\",\n      peg$c196 = peg$literalExpectation(\"\\u25FB\\uFE0E\", false),\n      peg$c197 = \"\\u2B1C\\uFE0E\",\n      peg$c198 = peg$literalExpectation(\"\\u2B1C\\uFE0E\", false),\n      peg$c200 = peg$literalExpectation(\"\\u25A2\", false),\n      peg$c202 = peg$literalExpectation(\"\\u22A5\", false),\n      peg$c203 = \"[]\",\n      peg$c204 = peg$literalExpectation(\"[]\", false),\n      peg$c205 = \"_|_\",\n      peg$c206 = peg$literalExpectation(\"_|_\", false),\n      peg$c207 = \"\\\\square\",\n      peg$c208 = peg$literalExpectation(\"\\\\square\", false),\n      peg$c209 = \"\\\\Box\",\n      peg$c210 = peg$literalExpectation(\"\\\\Box\", false),\n      peg$c211 = \"\\\\qed\",\n      peg$c212 = peg$literalExpectation(\"\\\\qed\", false),\n      peg$c213 = function (cs) {\n    return cs;\n  },\n      peg$c214 = function (c1, ci) {\n    return ci;\n  },\n      peg$c215 = function (c1, cs) {\n    return [c1].concat(cs);\n  },\n      peg$c216 = function (ps) {\n    return ps;\n  },\n      peg$c217 = function (p1, pi) {\n    return pi;\n  },\n      peg$c218 = function (p1, ps) {\n    return [p1].concat(ps);\n  },\n      peg$c219 = function (fs) {\n    return fs;\n  },\n      peg$c220 = function (f1, fi) {\n    return fi;\n  },\n      peg$c221 = function (f1, fs) {\n    return [f1].concat(fs);\n  },\n      peg$c222 = peg$otherExpectation(\"arity of the predicate symbol (non-negative integer)\"),\n      peg$c223 = peg$otherExpectation(\"arity of the function symbol (positive integer)\"),\n      peg$c224 = function (a) {\n    return a > 0;\n  },\n      peg$c225 = function (a) {\n    return a;\n  },\n      peg$c226 = /^[0-9]/,\n      peg$c227 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c228 = function (digits) {\n    return parseInt(digits, 10);\n  },\n      peg$c229 = peg$otherExpectation(\"predicate identifier/non-negative arity\"),\n      peg$c230 = \"/\",\n      peg$c231 = peg$literalExpectation(\"/\", false),\n      peg$c232 = function (name, arity) {\n    return {\n      name: name,\n      arity: arity\n    };\n  },\n      peg$c233 = peg$otherExpectation(\"function identifier/positive arity\"),\n      peg$c234 = function (es) {\n    return es;\n  },\n      peg$c235 = function (e1, ei) {\n    return ei;\n  },\n      peg$c236 = function (e1, es) {\n    return [e1].concat(es);\n  },\n      peg$c237 = peg$otherExpectation(\"domain element (any string not containing white space, comma, or parentheses)\"),\n      peg$c238 = /^[^,()\\t\\n\\r\\x0B\\f \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/,\n      peg$c239 = peg$classExpectation([\",\", \"(\", \")\", \"\\t\", \"\\n\", \"\\r\", \"\\x0B\", \"\\f\", \" \", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u202F\", \"\\u205F\", \"\\u3000\"], true, false),\n      peg$c240 = function (ts) {\n    return ts;\n  },\n      peg$c241 = function (t1, ti) {\n    return ti;\n  },\n      peg$c242 = peg$otherExpectation(\"domain element or n-tuple of domain elements\"),\n      peg$c243 = function (e) {\n    return [e];\n  },\n      peg$c244 = function (v, e) {\n    return [v, e];\n  },\n      peg$c245 = function (p1, ps) {\n    return [p1, ...ps];\n  },\n      peg$c246 = function (v, t) {\n    return [v, t];\n  },\n      peg$c247 = peg$otherExpectation(\"a maps-to symbol (\\\"->\\\", \\\"|->\\\", \\\"\\u21A6\\\", \\\"\\u27FC\\\", or \\\"\\\\mapsto\\\")\"),\n      peg$c248 = \"|->\",\n      peg$c249 = peg$literalExpectation(\"|->\", false),\n      peg$c251 = peg$classExpectation([\"\\u21A6\", \"\\u27FC\"], false, false),\n      peg$c252 = \"\\\\mapsto\",\n      peg$c253 = peg$literalExpectation(\"\\\\mapsto\", false),\n      peg$c254 = \"tff(\",\n      peg$c255 = peg$literalExpectation(\"tff(\", false),\n      peg$c256 = \").\",\n      peg$c257 = peg$literalExpectation(\").\", false),\n      peg$c258 = function (n, r, f) {\n    return {\n      name: n,\n      type: r,\n      formula: f\n    };\n  },\n      peg$c259 = function (i) {\n    return i;\n  },\n      peg$c260 = \"axiom\",\n      peg$c261 = peg$literalExpectation(\"axiom\", false),\n      peg$c262 = function () {\n    return \"axiom\";\n  },\n      peg$c263 = \"type\",\n      peg$c264 = peg$literalExpectation(\"type\", false),\n      peg$c265 = function () {\n    return \"type\";\n  },\n      peg$c266 = \"%\",\n      peg$c267 = peg$literalExpectation(\"%\", false),\n      peg$c268 = /^[ -~]/,\n      peg$c269 = peg$classExpectation([[\" \", \"~\"]], false, false),\n      peg$c270 = /^[\\t\\n\\r\\x0B\\f]/,\n      peg$c271 = peg$classExpectation([\"\\t\", \"\\n\", \"\\r\", \"\\x0B\", \"\\f\"], false, false),\n      peg$c272 = function () {\n    return \"comment\";\n  },\n      peg$c273 = function (a) {\n    return a;\n  },\n      peg$c274 = function (l) {\n    return l;\n  },\n      peg$c275 = function (s) {\n    return s;\n  },\n      peg$c276 = function (t) {\n    return t;\n  },\n      peg$c277 = function (t) {\n    return t;\n  },\n      peg$c278 = function (b) {\n    return b;\n  },\n      peg$c279 = function (un) {\n    return un;\n  },\n      peg$c280 = function (d) {\n    return d;\n  },\n      peg$c281 = function (u) {\n    return u;\n  },\n      peg$c282 = function (q) {\n    return q;\n  },\n      peg$c283 = function (l) {\n    return l;\n  },\n      peg$c284 = function (u) {\n    return u;\n  },\n      peg$c285 = function (v) {\n    return v;\n  },\n      peg$c286 = \"[\",\n      peg$c287 = peg$literalExpectation(\"[\", false),\n      peg$c288 = \"]\",\n      peg$c289 = peg$literalExpectation(\"]\", false),\n      peg$c290 = \":\",\n      peg$c291 = peg$literalExpectation(\":\", false),\n      peg$c292 = function (q, v, u) {\n    return q(v.variable, v.type, u, ee);\n  },\n      peg$c294 = peg$literalExpectation(\"?\", false),\n      peg$c295 = function () {\n    return (v, t, f) => factories.existentialQuant(v, t, f, ee);\n  },\n      peg$c296 = function () {\n    return (v, t, f) => factories.universalQuant(v, t, f, ee);\n  },\n      peg$c297 = function (v, l) {\n    return [v, ...l];\n  },\n      peg$c298 = /^[A-Za-z0-9_$]/,\n      peg$c299 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"], \"_\", \"$\"], false, false),\n      peg$c300 = function (a) {\n    return factories.variable(a, ee);\n  },\n      peg$c301 = function (v, t) {\n    return {\n      variable: v,\n      type: t\n    };\n  },\n      peg$c302 = function (d) {\n    return d;\n  },\n      peg$c303 = function (u) {\n    return u;\n  },\n      peg$c304 = function (p) {\n    return p;\n  },\n      peg$c305 = function (i) {\n    return i;\n  },\n      peg$c306 = function (u, p) {\n    return u(p);\n  },\n      peg$c307 = function (u, i, t) {\n    return i(u, t, ee);\n  },\n      peg$c308 = function () {\n    return t1 => factories.negation(t1, ee);\n  },\n      peg$c309 = function (l) {\n    return l;\n  },\n      peg$c310 = function (a) {\n    return a;\n  },\n      peg$c311 = function () {\n    return (t1, t2) => factories.negation(factories.equalityAtom(t1, t2, ee), ee);\n  },\n      peg$c312 = function () {\n    return [];\n  },\n      peg$c313 = /^[a-zA-Z0-9_$]/,\n      peg$c314 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\", \"$\"], false, false),\n      peg$c315 = function (a) {\n    return factories.constant(a, ee);\n  },\n      peg$c316 = \"*\",\n      peg$c317 = peg$literalExpectation(\"*\", false),\n      peg$c318 = function () {\n    return factories.constant(\"null\", ee);\n  },\n      peg$c320 = peg$classExpectation([[\" \", \"!\"], \" \", [\"#\", \"[\"], \" \", [\"]\", \"~\"]], false, false),\n      peg$c322 = peg$classExpectation([\"\\\\\"], false, false),\n      peg$c324 = peg$classExpectation([\"\\\"\", \"\\\\\"], false, false),\n      peg$c326 = peg$literalExpectation(\"\\\"\", false),\n      peg$c327 = function (n) {\n    return n;\n  },\n      peg$c328 = function (u, c, v) {\n    return c(u, v, ee);\n  },\n      peg$c329 = function () {\n    return (t1, t2) => factories.equivalence(t1, t2, ee);\n  },\n      peg$c330 = function () {\n    return (t1, t2) => factories.implication(t1, t2, ee);\n  },\n      peg$c331 = \"<=\",\n      peg$c332 = peg$literalExpectation(\"<=\", false),\n      peg$c333 = function () {\n    return (t1, t2) => factories.implication(t2, t1, ee);\n  },\n      peg$c334 = \"<~>\",\n      peg$c335 = peg$literalExpectation(\"<~>\", false),\n      peg$c336 = function () {\n    return (t1, t2) => factories.negation(factories.equivalence(t1, t2, ee), ee);\n  },\n      peg$c337 = \"~|\",\n      peg$c338 = peg$literalExpectation(\"~|\", false),\n      peg$c339 = function () {\n    return (t1, t2) => factories.negation(factories.disjunction(t1, t2, ee), ee);\n  },\n      peg$c340 = \"~&\",\n      peg$c341 = peg$literalExpectation(\"~&\", false),\n      peg$c342 = function () {\n    return (t1, t2) => factories.negation(factories.conjunction(t1, t2, ee), ee);\n  },\n      peg$c343 = function (a) {\n    return a;\n  },\n      peg$c344 = function (o) {\n    return o;\n  },\n      peg$c345 = function (f, a, c) {\n    return factories.functionApplication(f, [a, c]);\n  },\n      peg$c346 = function (u, t) {\n    return factories.equalityAtom(u, t, ee);\n  },\n      peg$c347 = function (leftmost, rights) {\n    return [leftmost, ...rights].reduce((disj, right) => factories.conjunction(disj, right, ee));\n  },\n      peg$c348 = function (leftmost, rights) {\n    return [leftmost, ...rights].reduce((disj, right) => factories.disjunction(disj, right, ee));\n  },\n      peg$c349 = function (u, t) {\n    return {\n      kind: \"atom typing\",\n      atom: u,\n      type: t\n    };\n  },\n      peg$c351 = peg$literalExpectation(\">\", false),\n      peg$c352 = \"$\",\n      peg$c353 = peg$literalExpectation(\"$\", false),\n      peg$c354 = \"!>\",\n      peg$c355 = peg$literalExpectation(\"!>\", false),\n      peg$c356 = function (s) {\n    return s;\n  },\n      peg$c357 = function (f, a) {\n    return factories.predicateAtom(f, a, ee);\n  },\n      peg$c358 = function (c) {\n    return c;\n  },\n      peg$c359 = function (a) {\n    return a;\n  },\n      peg$c360 = function (f, a) {\n    return factories.predicateAtom(f, a, ee);\n  },\n      peg$c361 = \"$ite\",\n      peg$c362 = peg$literalExpectation(\"$ite\", false),\n      peg$c363 = \"$let\",\n      peg$c364 = peg$literalExpectation(\"$let\", false),\n      peg$c365 = function (l, a, t) {\n    return a(l, t);\n  },\n      peg$c366 = function (l) {\n    return [l];\n  },\n      peg$c367 = function (l, dl) {\n    return [l, ...dl];\n  },\n      peg$c368 = \":=\",\n      peg$c369 = peg$literalExpectation(\":=\", false),\n      peg$c370 = function () {\n    return (t1, t2) => factories.equalityAtom(t1, t2, ee);\n  },\n      peg$c371 = function () {\n    return null;\n  },\n      peg$c372 = function () {\n    return null;\n  },\n      peg$c373 = \"<<\",\n      peg$c374 = peg$literalExpectation(\"<<\", false),\n      peg$c375 = function (l) {\n    return factories.constant(l, ee);\n  },\n      peg$c376 = function (l) {\n    return factories.constant(l, ee);\n  },\n      peg$c377 = function (f) {\n    return f;\n  },\n      peg$c378 = function (t, f) {\n    return factories.implication(t, f, ee);\n  },\n      peg$c379 = function (s) {\n    return [...s];\n  },\n      peg$c380 = peg$otherExpectation(\"white space\"),\n      peg$c381 = peg$otherExpectation(\"required white space\"),\n      peg$c382 = function () {\n    return [];\n  },\n      peg$c383 = peg$otherExpectation(\"identifier\"),\n      peg$c384 = peg$otherExpectation(\"constant identifier\"),\n      peg$c386 = peg$literalExpectation(\"_\", false),\n      peg$c388 = peg$literalExpectation(\"\\u200C\", false),\n      peg$c390 = peg$literalExpectation(\"\\u200D\", false),\n      peg$c392 = peg$classExpectation([\"\\uD835\"], false, false),\n      peg$c394 = peg$classExpectation([[\"\\uDC00\", \"\\uDFFF\"]], false, false),\n      peg$c396 = peg$classExpectation([\"\\u2012\", \"\\u2107\", [\"\\u210A\", \"\\u2113\"], \"\\u2115\", [\"\\u2118\", \"\\u211D\"], \"\\u2124\", \"\\u2128\", \"\\u212C\", \"\\u212D\", [\"\\u212F\", \"\\u2131\"], [\"\\u2133\", \"\\u2138\"], [\"\\u213C\", \"\\u2140\"], [\"\\u2145\", \"\\u2149\"]], false, false),\n      peg$c398 = peg$classExpectation([[\"\\u2080\", \"\\u2089\"]], false, false),\n      peg$c400 = peg$classExpectation([\"\\u2070\", \"\\xB9\", \"\\xB2\", \"\\xB3\", [\"\\u2074\", \"\\u2079\"]], false, false),\n      peg$c401 = peg$otherExpectation(\"letter\"),\n      peg$c402 = peg$otherExpectation(\"combining mark\"),\n      peg$c403 = peg$otherExpectation(\"digit\"),\n      peg$c405 = peg$classExpectation([[\"a\", \"z\"], \"\\xB5\", [\"\\xDF\", \"\\xF6\"], [\"\\xF8\", \"\\xFF\"], \"\\u0101\", \"\\u0103\", \"\\u0105\", \"\\u0107\", \"\\u0109\", \"\\u010B\", \"\\u010D\", \"\\u010F\", \"\\u0111\", \"\\u0113\", \"\\u0115\", \"\\u0117\", \"\\u0119\", \"\\u011B\", \"\\u011D\", \"\\u011F\", \"\\u0121\", \"\\u0123\", \"\\u0125\", \"\\u0127\", \"\\u0129\", \"\\u012B\", \"\\u012D\", \"\\u012F\", \"\\u0131\", \"\\u0133\", \"\\u0135\", [\"\\u0137\", \"\\u0138\"], \"\\u013A\", \"\\u013C\", \"\\u013E\", \"\\u0140\", \"\\u0142\", \"\\u0144\", \"\\u0146\", [\"\\u0148\", \"\\u0149\"], \"\\u014B\", \"\\u014D\", \"\\u014F\", \"\\u0151\", \"\\u0153\", \"\\u0155\", \"\\u0157\", \"\\u0159\", \"\\u015B\", \"\\u015D\", \"\\u015F\", \"\\u0161\", \"\\u0163\", \"\\u0165\", \"\\u0167\", \"\\u0169\", \"\\u016B\", \"\\u016D\", \"\\u016F\", \"\\u0171\", \"\\u0173\", \"\\u0175\", \"\\u0177\", \"\\u017A\", \"\\u017C\", [\"\\u017E\", \"\\u0180\"], \"\\u0183\", \"\\u0185\", \"\\u0188\", [\"\\u018C\", \"\\u018D\"], \"\\u0192\", \"\\u0195\", [\"\\u0199\", \"\\u019B\"], \"\\u019E\", \"\\u01A1\", \"\\u01A3\", \"\\u01A5\", \"\\u01A8\", [\"\\u01AA\", \"\\u01AB\"], \"\\u01AD\", \"\\u01B0\", \"\\u01B4\", \"\\u01B6\", [\"\\u01B9\", \"\\u01BA\"], [\"\\u01BD\", \"\\u01BF\"], \"\\u01C6\", \"\\u01C9\", \"\\u01CC\", \"\\u01CE\", \"\\u01D0\", \"\\u01D2\", \"\\u01D4\", \"\\u01D6\", \"\\u01D8\", \"\\u01DA\", [\"\\u01DC\", \"\\u01DD\"], \"\\u01DF\", \"\\u01E1\", \"\\u01E3\", \"\\u01E5\", \"\\u01E7\", \"\\u01E9\", \"\\u01EB\", \"\\u01ED\", [\"\\u01EF\", \"\\u01F0\"], \"\\u01F3\", \"\\u01F5\", \"\\u01F9\", \"\\u01FB\", \"\\u01FD\", \"\\u01FF\", \"\\u0201\", \"\\u0203\", \"\\u0205\", \"\\u0207\", \"\\u0209\", \"\\u020B\", \"\\u020D\", \"\\u020F\", \"\\u0211\", \"\\u0213\", \"\\u0215\", \"\\u0217\", \"\\u0219\", \"\\u021B\", \"\\u021D\", \"\\u021F\", \"\\u0221\", \"\\u0223\", \"\\u0225\", \"\\u0227\", \"\\u0229\", \"\\u022B\", \"\\u022D\", \"\\u022F\", \"\\u0231\", [\"\\u0233\", \"\\u0239\"], \"\\u023C\", [\"\\u023F\", \"\\u0240\"], \"\\u0242\", \"\\u0247\", \"\\u0249\", \"\\u024B\", \"\\u024D\", [\"\\u024F\", \"\\u0293\"], [\"\\u0295\", \"\\u02AF\"], \"\\u0371\", \"\\u0373\", \"\\u0377\", [\"\\u037B\", \"\\u037D\"], \"\\u0390\", [\"\\u03AC\", \"\\u03CE\"], [\"\\u03D0\", \"\\u03D1\"], [\"\\u03D5\", \"\\u03D7\"], \"\\u03D9\", \"\\u03DB\", \"\\u03DD\", \"\\u03DF\", \"\\u03E1\", \"\\u03E3\", \"\\u03E5\", \"\\u03E7\", \"\\u03E9\", \"\\u03EB\", \"\\u03ED\", [\"\\u03EF\", \"\\u03F3\"], \"\\u03F5\", \"\\u03F8\", [\"\\u03FB\", \"\\u03FC\"], [\"\\u0430\", \"\\u045F\"], \"\\u0461\", \"\\u0463\", \"\\u0465\", \"\\u0467\", \"\\u0469\", \"\\u046B\", \"\\u046D\", \"\\u046F\", \"\\u0471\", \"\\u0473\", \"\\u0475\", \"\\u0477\", \"\\u0479\", \"\\u047B\", \"\\u047D\", \"\\u047F\", \"\\u0481\", \"\\u048B\", \"\\u048D\", \"\\u048F\", \"\\u0491\", \"\\u0493\", \"\\u0495\", \"\\u0497\", \"\\u0499\", \"\\u049B\", \"\\u049D\", \"\\u049F\", \"\\u04A1\", \"\\u04A3\", \"\\u04A5\", \"\\u04A7\", \"\\u04A9\", \"\\u04AB\", \"\\u04AD\", \"\\u04AF\", \"\\u04B1\", \"\\u04B3\", \"\\u04B5\", \"\\u04B7\", \"\\u04B9\", \"\\u04BB\", \"\\u04BD\", \"\\u04BF\", \"\\u04C2\", \"\\u04C4\", \"\\u04C6\", \"\\u04C8\", \"\\u04CA\", \"\\u04CC\", [\"\\u04CE\", \"\\u04CF\"], \"\\u04D1\", \"\\u04D3\", \"\\u04D5\", \"\\u04D7\", \"\\u04D9\", \"\\u04DB\", \"\\u04DD\", \"\\u04DF\", \"\\u04E1\", \"\\u04E3\", \"\\u04E5\", \"\\u04E7\", \"\\u04E9\", \"\\u04EB\", \"\\u04ED\", \"\\u04EF\", \"\\u04F1\", \"\\u04F3\", \"\\u04F5\", \"\\u04F7\", \"\\u04F9\", \"\\u04FB\", \"\\u04FD\", \"\\u04FF\", \"\\u0501\", \"\\u0503\", \"\\u0505\", \"\\u0507\", \"\\u0509\", \"\\u050B\", \"\\u050D\", \"\\u050F\", \"\\u0511\", \"\\u0513\", \"\\u0515\", \"\\u0517\", \"\\u0519\", \"\\u051B\", \"\\u051D\", \"\\u051F\", \"\\u0521\", \"\\u0523\", \"\\u0525\", \"\\u0527\", \"\\u0529\", \"\\u052B\", \"\\u052D\", \"\\u052F\", [\"\\u0561\", \"\\u0587\"], [\"\\u13F8\", \"\\u13FD\"], [\"\\u1D00\", \"\\u1D2B\"], [\"\\u1D6B\", \"\\u1D77\"], [\"\\u1D79\", \"\\u1D9A\"], \"\\u1E01\", \"\\u1E03\", \"\\u1E05\", \"\\u1E07\", \"\\u1E09\", \"\\u1E0B\", \"\\u1E0D\", \"\\u1E0F\", \"\\u1E11\", \"\\u1E13\", \"\\u1E15\", \"\\u1E17\", \"\\u1E19\", \"\\u1E1B\", \"\\u1E1D\", \"\\u1E1F\", \"\\u1E21\", \"\\u1E23\", \"\\u1E25\", \"\\u1E27\", \"\\u1E29\", \"\\u1E2B\", \"\\u1E2D\", \"\\u1E2F\", \"\\u1E31\", \"\\u1E33\", \"\\u1E35\", \"\\u1E37\", \"\\u1E39\", \"\\u1E3B\", \"\\u1E3D\", \"\\u1E3F\", \"\\u1E41\", \"\\u1E43\", \"\\u1E45\", \"\\u1E47\", \"\\u1E49\", \"\\u1E4B\", \"\\u1E4D\", \"\\u1E4F\", \"\\u1E51\", \"\\u1E53\", \"\\u1E55\", \"\\u1E57\", \"\\u1E59\", \"\\u1E5B\", \"\\u1E5D\", \"\\u1E5F\", \"\\u1E61\", \"\\u1E63\", \"\\u1E65\", \"\\u1E67\", \"\\u1E69\", \"\\u1E6B\", \"\\u1E6D\", \"\\u1E6F\", \"\\u1E71\", \"\\u1E73\", \"\\u1E75\", \"\\u1E77\", \"\\u1E79\", \"\\u1E7B\", \"\\u1E7D\", \"\\u1E7F\", \"\\u1E81\", \"\\u1E83\", \"\\u1E85\", \"\\u1E87\", \"\\u1E89\", \"\\u1E8B\", \"\\u1E8D\", \"\\u1E8F\", \"\\u1E91\", \"\\u1E93\", [\"\\u1E95\", \"\\u1E9D\"], \"\\u1E9F\", \"\\u1EA1\", \"\\u1EA3\", \"\\u1EA5\", \"\\u1EA7\", \"\\u1EA9\", \"\\u1EAB\", \"\\u1EAD\", \"\\u1EAF\", \"\\u1EB1\", \"\\u1EB3\", \"\\u1EB5\", \"\\u1EB7\", \"\\u1EB9\", \"\\u1EBB\", \"\\u1EBD\", \"\\u1EBF\", \"\\u1EC1\", \"\\u1EC3\", \"\\u1EC5\", \"\\u1EC7\", \"\\u1EC9\", \"\\u1ECB\", \"\\u1ECD\", \"\\u1ECF\", \"\\u1ED1\", \"\\u1ED3\", \"\\u1ED5\", \"\\u1ED7\", \"\\u1ED9\", \"\\u1EDB\", \"\\u1EDD\", \"\\u1EDF\", \"\\u1EE1\", \"\\u1EE3\", \"\\u1EE5\", \"\\u1EE7\", \"\\u1EE9\", \"\\u1EEB\", \"\\u1EED\", \"\\u1EEF\", \"\\u1EF1\", \"\\u1EF3\", \"\\u1EF5\", \"\\u1EF7\", \"\\u1EF9\", \"\\u1EFB\", \"\\u1EFD\", [\"\\u1EFF\", \"\\u1F07\"], [\"\\u1F10\", \"\\u1F15\"], [\"\\u1F20\", \"\\u1F27\"], [\"\\u1F30\", \"\\u1F37\"], [\"\\u1F40\", \"\\u1F45\"], [\"\\u1F50\", \"\\u1F57\"], [\"\\u1F60\", \"\\u1F67\"], [\"\\u1F70\", \"\\u1F7D\"], [\"\\u1F80\", \"\\u1F87\"], [\"\\u1F90\", \"\\u1F97\"], [\"\\u1FA0\", \"\\u1FA7\"], [\"\\u1FB0\", \"\\u1FB4\"], [\"\\u1FB6\", \"\\u1FB7\"], \"\\u1FBE\", [\"\\u1FC2\", \"\\u1FC4\"], [\"\\u1FC6\", \"\\u1FC7\"], [\"\\u1FD0\", \"\\u1FD3\"], [\"\\u1FD6\", \"\\u1FD7\"], [\"\\u1FE0\", \"\\u1FE7\"], [\"\\u1FF2\", \"\\u1FF4\"], [\"\\u1FF6\", \"\\u1FF7\"], \"\\u210A\", [\"\\u210E\", \"\\u210F\"], \"\\u2113\", \"\\u212F\", \"\\u2134\", \"\\u2139\", [\"\\u213C\", \"\\u213D\"], [\"\\u2146\", \"\\u2149\"], \"\\u214E\", \"\\u2184\", [\"\\u2C30\", \"\\u2C5E\"], \"\\u2C61\", [\"\\u2C65\", \"\\u2C66\"], \"\\u2C68\", \"\\u2C6A\", \"\\u2C6C\", \"\\u2C71\", [\"\\u2C73\", \"\\u2C74\"], [\"\\u2C76\", \"\\u2C7B\"], \"\\u2C81\", \"\\u2C83\", \"\\u2C85\", \"\\u2C87\", \"\\u2C89\", \"\\u2C8B\", \"\\u2C8D\", \"\\u2C8F\", \"\\u2C91\", \"\\u2C93\", \"\\u2C95\", \"\\u2C97\", \"\\u2C99\", \"\\u2C9B\", \"\\u2C9D\", \"\\u2C9F\", \"\\u2CA1\", \"\\u2CA3\", \"\\u2CA5\", \"\\u2CA7\", \"\\u2CA9\", \"\\u2CAB\", \"\\u2CAD\", \"\\u2CAF\", \"\\u2CB1\", \"\\u2CB3\", \"\\u2CB5\", \"\\u2CB7\", \"\\u2CB9\", \"\\u2CBB\", \"\\u2CBD\", \"\\u2CBF\", \"\\u2CC1\", \"\\u2CC3\", \"\\u2CC5\", \"\\u2CC7\", \"\\u2CC9\", \"\\u2CCB\", \"\\u2CCD\", \"\\u2CCF\", \"\\u2CD1\", \"\\u2CD3\", \"\\u2CD5\", \"\\u2CD7\", \"\\u2CD9\", \"\\u2CDB\", \"\\u2CDD\", \"\\u2CDF\", \"\\u2CE1\", [\"\\u2CE3\", \"\\u2CE4\"], \"\\u2CEC\", \"\\u2CEE\", \"\\u2CF3\", [\"\\u2D00\", \"\\u2D25\"], \"\\u2D27\", \"\\u2D2D\", \"\\uA641\", \"\\uA643\", \"\\uA645\", \"\\uA647\", \"\\uA649\", \"\\uA64B\", \"\\uA64D\", \"\\uA64F\", \"\\uA651\", \"\\uA653\", \"\\uA655\", \"\\uA657\", \"\\uA659\", \"\\uA65B\", \"\\uA65D\", \"\\uA65F\", \"\\uA661\", \"\\uA663\", \"\\uA665\", \"\\uA667\", \"\\uA669\", \"\\uA66B\", \"\\uA66D\", \"\\uA681\", \"\\uA683\", \"\\uA685\", \"\\uA687\", \"\\uA689\", \"\\uA68B\", \"\\uA68D\", \"\\uA68F\", \"\\uA691\", \"\\uA693\", \"\\uA695\", \"\\uA697\", \"\\uA699\", \"\\uA69B\", \"\\uA723\", \"\\uA725\", \"\\uA727\", \"\\uA729\", \"\\uA72B\", \"\\uA72D\", [\"\\uA72F\", \"\\uA731\"], \"\\uA733\", \"\\uA735\", \"\\uA737\", \"\\uA739\", \"\\uA73B\", \"\\uA73D\", \"\\uA73F\", \"\\uA741\", \"\\uA743\", \"\\uA745\", \"\\uA747\", \"\\uA749\", \"\\uA74B\", \"\\uA74D\", \"\\uA74F\", \"\\uA751\", \"\\uA753\", \"\\uA755\", \"\\uA757\", \"\\uA759\", \"\\uA75B\", \"\\uA75D\", \"\\uA75F\", \"\\uA761\", \"\\uA763\", \"\\uA765\", \"\\uA767\", \"\\uA769\", \"\\uA76B\", \"\\uA76D\", \"\\uA76F\", [\"\\uA771\", \"\\uA778\"], \"\\uA77A\", \"\\uA77C\", \"\\uA77F\", \"\\uA781\", \"\\uA783\", \"\\uA785\", \"\\uA787\", \"\\uA78C\", \"\\uA78E\", \"\\uA791\", [\"\\uA793\", \"\\uA795\"], \"\\uA797\", \"\\uA799\", \"\\uA79B\", \"\\uA79D\", \"\\uA79F\", \"\\uA7A1\", \"\\uA7A3\", \"\\uA7A5\", \"\\uA7A7\", \"\\uA7A9\", \"\\uA7B5\", \"\\uA7B7\", \"\\uA7FA\", [\"\\uAB30\", \"\\uAB5A\"], [\"\\uAB60\", \"\\uAB65\"], [\"\\uAB70\", \"\\uABBF\"], [\"\\uFB00\", \"\\uFB06\"], [\"\\uFB13\", \"\\uFB17\"], [\"\\uFF41\", \"\\uFF5A\"]], false, false),\n      peg$c407 = peg$classExpectation([[\"\\u02B0\", \"\\u02C1\"], [\"\\u02C6\", \"\\u02D1\"], [\"\\u02E0\", \"\\u02E4\"], \"\\u02EC\", \"\\u02EE\", \"\\u0374\", \"\\u037A\", \"\\u0559\", \"\\u0640\", [\"\\u06E5\", \"\\u06E6\"], [\"\\u07F4\", \"\\u07F5\"], \"\\u07FA\", \"\\u081A\", \"\\u0824\", \"\\u0828\", \"\\u0971\", \"\\u0E46\", \"\\u0EC6\", \"\\u10FC\", \"\\u17D7\", \"\\u1843\", \"\\u1AA7\", [\"\\u1C78\", \"\\u1C7D\"], [\"\\u1D2C\", \"\\u1D6A\"], \"\\u1D78\", [\"\\u1D9B\", \"\\u1DBF\"], \"\\u2071\", \"\\u207F\", [\"\\u2090\", \"\\u209C\"], [\"\\u2C7C\", \"\\u2C7D\"], \"\\u2D6F\", \"\\u2E2F\", \"\\u3005\", [\"\\u3031\", \"\\u3035\"], \"\\u303B\", [\"\\u309D\", \"\\u309E\"], [\"\\u30FC\", \"\\u30FE\"], \"\\uA015\", [\"\\uA4F8\", \"\\uA4FD\"], \"\\uA60C\", \"\\uA67F\", [\"\\uA69C\", \"\\uA69D\"], [\"\\uA717\", \"\\uA71F\"], \"\\uA770\", \"\\uA788\", [\"\\uA7F8\", \"\\uA7F9\"], \"\\uA9CF\", \"\\uA9E6\", \"\\uAA70\", \"\\uAADD\", [\"\\uAAF3\", \"\\uAAF4\"], [\"\\uAB5C\", \"\\uAB5F\"], \"\\uFF70\", [\"\\uFF9E\", \"\\uFF9F\"]], false, false),\n      peg$c409 = peg$classExpectation([\"\\xAA\", \"\\xBA\", \"\\u01BB\", [\"\\u01C0\", \"\\u01C3\"], \"\\u0294\", [\"\\u05D0\", \"\\u05EA\"], [\"\\u05F0\", \"\\u05F2\"], [\"\\u0620\", \"\\u063F\"], [\"\\u0641\", \"\\u064A\"], [\"\\u066E\", \"\\u066F\"], [\"\\u0671\", \"\\u06D3\"], \"\\u06D5\", [\"\\u06EE\", \"\\u06EF\"], [\"\\u06FA\", \"\\u06FC\"], \"\\u06FF\", \"\\u0710\", [\"\\u0712\", \"\\u072F\"], [\"\\u074D\", \"\\u07A5\"], \"\\u07B1\", [\"\\u07CA\", \"\\u07EA\"], [\"\\u0800\", \"\\u0815\"], [\"\\u0840\", \"\\u0858\"], [\"\\u08A0\", \"\\u08B4\"], [\"\\u0904\", \"\\u0939\"], \"\\u093D\", \"\\u0950\", [\"\\u0958\", \"\\u0961\"], [\"\\u0972\", \"\\u0980\"], [\"\\u0985\", \"\\u098C\"], [\"\\u098F\", \"\\u0990\"], [\"\\u0993\", \"\\u09A8\"], [\"\\u09AA\", \"\\u09B0\"], \"\\u09B2\", [\"\\u09B6\", \"\\u09B9\"], \"\\u09BD\", \"\\u09CE\", [\"\\u09DC\", \"\\u09DD\"], [\"\\u09DF\", \"\\u09E1\"], [\"\\u09F0\", \"\\u09F1\"], [\"\\u0A05\", \"\\u0A0A\"], [\"\\u0A0F\", \"\\u0A10\"], [\"\\u0A13\", \"\\u0A28\"], [\"\\u0A2A\", \"\\u0A30\"], [\"\\u0A32\", \"\\u0A33\"], [\"\\u0A35\", \"\\u0A36\"], [\"\\u0A38\", \"\\u0A39\"], [\"\\u0A59\", \"\\u0A5C\"], \"\\u0A5E\", [\"\\u0A72\", \"\\u0A74\"], [\"\\u0A85\", \"\\u0A8D\"], [\"\\u0A8F\", \"\\u0A91\"], [\"\\u0A93\", \"\\u0AA8\"], [\"\\u0AAA\", \"\\u0AB0\"], [\"\\u0AB2\", \"\\u0AB3\"], [\"\\u0AB5\", \"\\u0AB9\"], \"\\u0ABD\", \"\\u0AD0\", [\"\\u0AE0\", \"\\u0AE1\"], \"\\u0AF9\", [\"\\u0B05\", \"\\u0B0C\"], [\"\\u0B0F\", \"\\u0B10\"], [\"\\u0B13\", \"\\u0B28\"], [\"\\u0B2A\", \"\\u0B30\"], [\"\\u0B32\", \"\\u0B33\"], [\"\\u0B35\", \"\\u0B39\"], \"\\u0B3D\", [\"\\u0B5C\", \"\\u0B5D\"], [\"\\u0B5F\", \"\\u0B61\"], \"\\u0B71\", \"\\u0B83\", [\"\\u0B85\", \"\\u0B8A\"], [\"\\u0B8E\", \"\\u0B90\"], [\"\\u0B92\", \"\\u0B95\"], [\"\\u0B99\", \"\\u0B9A\"], \"\\u0B9C\", [\"\\u0B9E\", \"\\u0B9F\"], [\"\\u0BA3\", \"\\u0BA4\"], [\"\\u0BA8\", \"\\u0BAA\"], [\"\\u0BAE\", \"\\u0BB9\"], \"\\u0BD0\", [\"\\u0C05\", \"\\u0C0C\"], [\"\\u0C0E\", \"\\u0C10\"], [\"\\u0C12\", \"\\u0C28\"], [\"\\u0C2A\", \"\\u0C39\"], \"\\u0C3D\", [\"\\u0C58\", \"\\u0C5A\"], [\"\\u0C60\", \"\\u0C61\"], [\"\\u0C85\", \"\\u0C8C\"], [\"\\u0C8E\", \"\\u0C90\"], [\"\\u0C92\", \"\\u0CA8\"], [\"\\u0CAA\", \"\\u0CB3\"], [\"\\u0CB5\", \"\\u0CB9\"], \"\\u0CBD\", \"\\u0CDE\", [\"\\u0CE0\", \"\\u0CE1\"], [\"\\u0CF1\", \"\\u0CF2\"], [\"\\u0D05\", \"\\u0D0C\"], [\"\\u0D0E\", \"\\u0D10\"], [\"\\u0D12\", \"\\u0D3A\"], \"\\u0D3D\", \"\\u0D4E\", [\"\\u0D5F\", \"\\u0D61\"], [\"\\u0D7A\", \"\\u0D7F\"], [\"\\u0D85\", \"\\u0D96\"], [\"\\u0D9A\", \"\\u0DB1\"], [\"\\u0DB3\", \"\\u0DBB\"], \"\\u0DBD\", [\"\\u0DC0\", \"\\u0DC6\"], [\"\\u0E01\", \"\\u0E30\"], [\"\\u0E32\", \"\\u0E33\"], [\"\\u0E40\", \"\\u0E45\"], [\"\\u0E81\", \"\\u0E82\"], \"\\u0E84\", [\"\\u0E87\", \"\\u0E88\"], \"\\u0E8A\", \"\\u0E8D\", [\"\\u0E94\", \"\\u0E97\"], [\"\\u0E99\", \"\\u0E9F\"], [\"\\u0EA1\", \"\\u0EA3\"], \"\\u0EA5\", \"\\u0EA7\", [\"\\u0EAA\", \"\\u0EAB\"], [\"\\u0EAD\", \"\\u0EB0\"], [\"\\u0EB2\", \"\\u0EB3\"], \"\\u0EBD\", [\"\\u0EC0\", \"\\u0EC4\"], [\"\\u0EDC\", \"\\u0EDF\"], \"\\u0F00\", [\"\\u0F40\", \"\\u0F47\"], [\"\\u0F49\", \"\\u0F6C\"], [\"\\u0F88\", \"\\u0F8C\"], [\"\\u1000\", \"\\u102A\"], \"\\u103F\", [\"\\u1050\", \"\\u1055\"], [\"\\u105A\", \"\\u105D\"], \"\\u1061\", [\"\\u1065\", \"\\u1066\"], [\"\\u106E\", \"\\u1070\"], [\"\\u1075\", \"\\u1081\"], \"\\u108E\", [\"\\u10D0\", \"\\u10FA\"], [\"\\u10FD\", \"\\u1248\"], [\"\\u124A\", \"\\u124D\"], [\"\\u1250\", \"\\u1256\"], \"\\u1258\", [\"\\u125A\", \"\\u125D\"], [\"\\u1260\", \"\\u1288\"], [\"\\u128A\", \"\\u128D\"], [\"\\u1290\", \"\\u12B0\"], [\"\\u12B2\", \"\\u12B5\"], [\"\\u12B8\", \"\\u12BE\"], \"\\u12C0\", [\"\\u12C2\", \"\\u12C5\"], [\"\\u12C8\", \"\\u12D6\"], [\"\\u12D8\", \"\\u1310\"], [\"\\u1312\", \"\\u1315\"], [\"\\u1318\", \"\\u135A\"], [\"\\u1380\", \"\\u138F\"], [\"\\u1401\", \"\\u166C\"], [\"\\u166F\", \"\\u167F\"], [\"\\u1681\", \"\\u169A\"], [\"\\u16A0\", \"\\u16EA\"], [\"\\u16F1\", \"\\u16F8\"], [\"\\u1700\", \"\\u170C\"], [\"\\u170E\", \"\\u1711\"], [\"\\u1720\", \"\\u1731\"], [\"\\u1740\", \"\\u1751\"], [\"\\u1760\", \"\\u176C\"], [\"\\u176E\", \"\\u1770\"], [\"\\u1780\", \"\\u17B3\"], \"\\u17DC\", [\"\\u1820\", \"\\u1842\"], [\"\\u1844\", \"\\u1877\"], [\"\\u1880\", \"\\u18A8\"], \"\\u18AA\", [\"\\u18B0\", \"\\u18F5\"], [\"\\u1900\", \"\\u191E\"], [\"\\u1950\", \"\\u196D\"], [\"\\u1970\", \"\\u1974\"], [\"\\u1980\", \"\\u19AB\"], [\"\\u19B0\", \"\\u19C9\"], [\"\\u1A00\", \"\\u1A16\"], [\"\\u1A20\", \"\\u1A54\"], [\"\\u1B05\", \"\\u1B33\"], [\"\\u1B45\", \"\\u1B4B\"], [\"\\u1B83\", \"\\u1BA0\"], [\"\\u1BAE\", \"\\u1BAF\"], [\"\\u1BBA\", \"\\u1BE5\"], [\"\\u1C00\", \"\\u1C23\"], [\"\\u1C4D\", \"\\u1C4F\"], [\"\\u1C5A\", \"\\u1C77\"], [\"\\u1CE9\", \"\\u1CEC\"], [\"\\u1CEE\", \"\\u1CF1\"], [\"\\u1CF5\", \"\\u1CF6\"], [\"\\u2135\", \"\\u2138\"], [\"\\u2D30\", \"\\u2D67\"], [\"\\u2D80\", \"\\u2D96\"], [\"\\u2DA0\", \"\\u2DA6\"], [\"\\u2DA8\", \"\\u2DAE\"], [\"\\u2DB0\", \"\\u2DB6\"], [\"\\u2DB8\", \"\\u2DBE\"], [\"\\u2DC0\", \"\\u2DC6\"], [\"\\u2DC8\", \"\\u2DCE\"], [\"\\u2DD0\", \"\\u2DD6\"], [\"\\u2DD8\", \"\\u2DDE\"], \"\\u3006\", \"\\u303C\", [\"\\u3041\", \"\\u3096\"], \"\\u309F\", [\"\\u30A1\", \"\\u30FA\"], \"\\u30FF\", [\"\\u3105\", \"\\u312D\"], [\"\\u3131\", \"\\u318E\"], [\"\\u31A0\", \"\\u31BA\"], [\"\\u31F0\", \"\\u31FF\"], [\"\\u3400\", \"\\u4DB5\"], [\"\\u4E00\", \"\\u9FD5\"], [\"\\uA000\", \"\\uA014\"], [\"\\uA016\", \"\\uA48C\"], [\"\\uA4D0\", \"\\uA4F7\"], [\"\\uA500\", \"\\uA60B\"], [\"\\uA610\", \"\\uA61F\"], [\"\\uA62A\", \"\\uA62B\"], \"\\uA66E\", [\"\\uA6A0\", \"\\uA6E5\"], \"\\uA78F\", \"\\uA7F7\", [\"\\uA7FB\", \"\\uA801\"], [\"\\uA803\", \"\\uA805\"], [\"\\uA807\", \"\\uA80A\"], [\"\\uA80C\", \"\\uA822\"], [\"\\uA840\", \"\\uA873\"], [\"\\uA882\", \"\\uA8B3\"], [\"\\uA8F2\", \"\\uA8F7\"], \"\\uA8FB\", \"\\uA8FD\", [\"\\uA90A\", \"\\uA925\"], [\"\\uA930\", \"\\uA946\"], [\"\\uA960\", \"\\uA97C\"], [\"\\uA984\", \"\\uA9B2\"], [\"\\uA9E0\", \"\\uA9E4\"], [\"\\uA9E7\", \"\\uA9EF\"], [\"\\uA9FA\", \"\\uA9FE\"], [\"\\uAA00\", \"\\uAA28\"], [\"\\uAA40\", \"\\uAA42\"], [\"\\uAA44\", \"\\uAA4B\"], [\"\\uAA60\", \"\\uAA6F\"], [\"\\uAA71\", \"\\uAA76\"], \"\\uAA7A\", [\"\\uAA7E\", \"\\uAAAF\"], \"\\uAAB1\", [\"\\uAAB5\", \"\\uAAB6\"], [\"\\uAAB9\", \"\\uAABD\"], \"\\uAAC0\", \"\\uAAC2\", [\"\\uAADB\", \"\\uAADC\"], [\"\\uAAE0\", \"\\uAAEA\"], \"\\uAAF2\", [\"\\uAB01\", \"\\uAB06\"], [\"\\uAB09\", \"\\uAB0E\"], [\"\\uAB11\", \"\\uAB16\"], [\"\\uAB20\", \"\\uAB26\"], [\"\\uAB28\", \"\\uAB2E\"], [\"\\uABC0\", \"\\uABE2\"], [\"\\uAC00\", \"\\uD7A3\"], [\"\\uD7B0\", \"\\uD7C6\"], [\"\\uD7CB\", \"\\uD7FB\"], [\"\\uF900\", \"\\uFA6D\"], [\"\\uFA70\", \"\\uFAD9\"], \"\\uFB1D\", [\"\\uFB1F\", \"\\uFB28\"], [\"\\uFB2A\", \"\\uFB36\"], [\"\\uFB38\", \"\\uFB3C\"], \"\\uFB3E\", [\"\\uFB40\", \"\\uFB41\"], [\"\\uFB43\", \"\\uFB44\"], [\"\\uFB46\", \"\\uFBB1\"], [\"\\uFBD3\", \"\\uFD3D\"], [\"\\uFD50\", \"\\uFD8F\"], [\"\\uFD92\", \"\\uFDC7\"], [\"\\uFDF0\", \"\\uFDFB\"], [\"\\uFE70\", \"\\uFE74\"], [\"\\uFE76\", \"\\uFEFC\"], [\"\\uFF66\", \"\\uFF6F\"], [\"\\uFF71\", \"\\uFF9D\"], [\"\\uFFA0\", \"\\uFFBE\"], [\"\\uFFC2\", \"\\uFFC7\"], [\"\\uFFCA\", \"\\uFFCF\"], [\"\\uFFD2\", \"\\uFFD7\"], [\"\\uFFDA\", \"\\uFFDC\"]], false, false),\n      peg$c411 = peg$classExpectation([\"\\u01C5\", \"\\u01C8\", \"\\u01CB\", \"\\u01F2\", [\"\\u1F88\", \"\\u1F8F\"], [\"\\u1F98\", \"\\u1F9F\"], [\"\\u1FA8\", \"\\u1FAF\"], \"\\u1FBC\", \"\\u1FCC\", \"\\u1FFC\"], false, false),\n      peg$c413 = peg$classExpectation([[\"A\", \"Z\"], [\"\\xC0\", \"\\xD6\"], [\"\\xD8\", \"\\xDE\"], \"\\u0100\", \"\\u0102\", \"\\u0104\", \"\\u0106\", \"\\u0108\", \"\\u010A\", \"\\u010C\", \"\\u010E\", \"\\u0110\", \"\\u0112\", \"\\u0114\", \"\\u0116\", \"\\u0118\", \"\\u011A\", \"\\u011C\", \"\\u011E\", \"\\u0120\", \"\\u0122\", \"\\u0124\", \"\\u0126\", \"\\u0128\", \"\\u012A\", \"\\u012C\", \"\\u012E\", \"\\u0130\", \"\\u0132\", \"\\u0134\", \"\\u0136\", \"\\u0139\", \"\\u013B\", \"\\u013D\", \"\\u013F\", \"\\u0141\", \"\\u0143\", \"\\u0145\", \"\\u0147\", \"\\u014A\", \"\\u014C\", \"\\u014E\", \"\\u0150\", \"\\u0152\", \"\\u0154\", \"\\u0156\", \"\\u0158\", \"\\u015A\", \"\\u015C\", \"\\u015E\", \"\\u0160\", \"\\u0162\", \"\\u0164\", \"\\u0166\", \"\\u0168\", \"\\u016A\", \"\\u016C\", \"\\u016E\", \"\\u0170\", \"\\u0172\", \"\\u0174\", \"\\u0176\", [\"\\u0178\", \"\\u0179\"], \"\\u017B\", \"\\u017D\", [\"\\u0181\", \"\\u0182\"], \"\\u0184\", [\"\\u0186\", \"\\u0187\"], [\"\\u0189\", \"\\u018B\"], [\"\\u018E\", \"\\u0191\"], [\"\\u0193\", \"\\u0194\"], [\"\\u0196\", \"\\u0198\"], [\"\\u019C\", \"\\u019D\"], [\"\\u019F\", \"\\u01A0\"], \"\\u01A2\", \"\\u01A4\", [\"\\u01A6\", \"\\u01A7\"], \"\\u01A9\", \"\\u01AC\", [\"\\u01AE\", \"\\u01AF\"], [\"\\u01B1\", \"\\u01B3\"], \"\\u01B5\", [\"\\u01B7\", \"\\u01B8\"], \"\\u01BC\", \"\\u01C4\", \"\\u01C7\", \"\\u01CA\", \"\\u01CD\", \"\\u01CF\", \"\\u01D1\", \"\\u01D3\", \"\\u01D5\", \"\\u01D7\", \"\\u01D9\", \"\\u01DB\", \"\\u01DE\", \"\\u01E0\", \"\\u01E2\", \"\\u01E4\", \"\\u01E6\", \"\\u01E8\", \"\\u01EA\", \"\\u01EC\", \"\\u01EE\", \"\\u01F1\", \"\\u01F4\", [\"\\u01F6\", \"\\u01F8\"], \"\\u01FA\", \"\\u01FC\", \"\\u01FE\", \"\\u0200\", \"\\u0202\", \"\\u0204\", \"\\u0206\", \"\\u0208\", \"\\u020A\", \"\\u020C\", \"\\u020E\", \"\\u0210\", \"\\u0212\", \"\\u0214\", \"\\u0216\", \"\\u0218\", \"\\u021A\", \"\\u021C\", \"\\u021E\", \"\\u0220\", \"\\u0222\", \"\\u0224\", \"\\u0226\", \"\\u0228\", \"\\u022A\", \"\\u022C\", \"\\u022E\", \"\\u0230\", \"\\u0232\", [\"\\u023A\", \"\\u023B\"], [\"\\u023D\", \"\\u023E\"], \"\\u0241\", [\"\\u0243\", \"\\u0246\"], \"\\u0248\", \"\\u024A\", \"\\u024C\", \"\\u024E\", \"\\u0370\", \"\\u0372\", \"\\u0376\", \"\\u037F\", \"\\u0386\", [\"\\u0388\", \"\\u038A\"], \"\\u038C\", [\"\\u038E\", \"\\u038F\"], [\"\\u0391\", \"\\u03A1\"], [\"\\u03A3\", \"\\u03AB\"], \"\\u03CF\", [\"\\u03D2\", \"\\u03D4\"], \"\\u03D8\", \"\\u03DA\", \"\\u03DC\", \"\\u03DE\", \"\\u03E0\", \"\\u03E2\", \"\\u03E4\", \"\\u03E6\", \"\\u03E8\", \"\\u03EA\", \"\\u03EC\", \"\\u03EE\", \"\\u03F4\", \"\\u03F7\", [\"\\u03F9\", \"\\u03FA\"], [\"\\u03FD\", \"\\u042F\"], \"\\u0460\", \"\\u0462\", \"\\u0464\", \"\\u0466\", \"\\u0468\", \"\\u046A\", \"\\u046C\", \"\\u046E\", \"\\u0470\", \"\\u0472\", \"\\u0474\", \"\\u0476\", \"\\u0478\", \"\\u047A\", \"\\u047C\", \"\\u047E\", \"\\u0480\", \"\\u048A\", \"\\u048C\", \"\\u048E\", \"\\u0490\", \"\\u0492\", \"\\u0494\", \"\\u0496\", \"\\u0498\", \"\\u049A\", \"\\u049C\", \"\\u049E\", \"\\u04A0\", \"\\u04A2\", \"\\u04A4\", \"\\u04A6\", \"\\u04A8\", \"\\u04AA\", \"\\u04AC\", \"\\u04AE\", \"\\u04B0\", \"\\u04B2\", \"\\u04B4\", \"\\u04B6\", \"\\u04B8\", \"\\u04BA\", \"\\u04BC\", \"\\u04BE\", [\"\\u04C0\", \"\\u04C1\"], \"\\u04C3\", \"\\u04C5\", \"\\u04C7\", \"\\u04C9\", \"\\u04CB\", \"\\u04CD\", \"\\u04D0\", \"\\u04D2\", \"\\u04D4\", \"\\u04D6\", \"\\u04D8\", \"\\u04DA\", \"\\u04DC\", \"\\u04DE\", \"\\u04E0\", \"\\u04E2\", \"\\u04E4\", \"\\u04E6\", \"\\u04E8\", \"\\u04EA\", \"\\u04EC\", \"\\u04EE\", \"\\u04F0\", \"\\u04F2\", \"\\u04F4\", \"\\u04F6\", \"\\u04F8\", \"\\u04FA\", \"\\u04FC\", \"\\u04FE\", \"\\u0500\", \"\\u0502\", \"\\u0504\", \"\\u0506\", \"\\u0508\", \"\\u050A\", \"\\u050C\", \"\\u050E\", \"\\u0510\", \"\\u0512\", \"\\u0514\", \"\\u0516\", \"\\u0518\", \"\\u051A\", \"\\u051C\", \"\\u051E\", \"\\u0520\", \"\\u0522\", \"\\u0524\", \"\\u0526\", \"\\u0528\", \"\\u052A\", \"\\u052C\", \"\\u052E\", [\"\\u0531\", \"\\u0556\"], [\"\\u10A0\", \"\\u10C5\"], \"\\u10C7\", \"\\u10CD\", [\"\\u13A0\", \"\\u13F5\"], \"\\u1E00\", \"\\u1E02\", \"\\u1E04\", \"\\u1E06\", \"\\u1E08\", \"\\u1E0A\", \"\\u1E0C\", \"\\u1E0E\", \"\\u1E10\", \"\\u1E12\", \"\\u1E14\", \"\\u1E16\", \"\\u1E18\", \"\\u1E1A\", \"\\u1E1C\", \"\\u1E1E\", \"\\u1E20\", \"\\u1E22\", \"\\u1E24\", \"\\u1E26\", \"\\u1E28\", \"\\u1E2A\", \"\\u1E2C\", \"\\u1E2E\", \"\\u1E30\", \"\\u1E32\", \"\\u1E34\", \"\\u1E36\", \"\\u1E38\", \"\\u1E3A\", \"\\u1E3C\", \"\\u1E3E\", \"\\u1E40\", \"\\u1E42\", \"\\u1E44\", \"\\u1E46\", \"\\u1E48\", \"\\u1E4A\", \"\\u1E4C\", \"\\u1E4E\", \"\\u1E50\", \"\\u1E52\", \"\\u1E54\", \"\\u1E56\", \"\\u1E58\", \"\\u1E5A\", \"\\u1E5C\", \"\\u1E5E\", \"\\u1E60\", \"\\u1E62\", \"\\u1E64\", \"\\u1E66\", \"\\u1E68\", \"\\u1E6A\", \"\\u1E6C\", \"\\u1E6E\", \"\\u1E70\", \"\\u1E72\", \"\\u1E74\", \"\\u1E76\", \"\\u1E78\", \"\\u1E7A\", \"\\u1E7C\", \"\\u1E7E\", \"\\u1E80\", \"\\u1E82\", \"\\u1E84\", \"\\u1E86\", \"\\u1E88\", \"\\u1E8A\", \"\\u1E8C\", \"\\u1E8E\", \"\\u1E90\", \"\\u1E92\", \"\\u1E94\", \"\\u1E9E\", \"\\u1EA0\", \"\\u1EA2\", \"\\u1EA4\", \"\\u1EA6\", \"\\u1EA8\", \"\\u1EAA\", \"\\u1EAC\", \"\\u1EAE\", \"\\u1EB0\", \"\\u1EB2\", \"\\u1EB4\", \"\\u1EB6\", \"\\u1EB8\", \"\\u1EBA\", \"\\u1EBC\", \"\\u1EBE\", \"\\u1EC0\", \"\\u1EC2\", \"\\u1EC4\", \"\\u1EC6\", \"\\u1EC8\", \"\\u1ECA\", \"\\u1ECC\", \"\\u1ECE\", \"\\u1ED0\", \"\\u1ED2\", \"\\u1ED4\", \"\\u1ED6\", \"\\u1ED8\", \"\\u1EDA\", \"\\u1EDC\", \"\\u1EDE\", \"\\u1EE0\", \"\\u1EE2\", \"\\u1EE4\", \"\\u1EE6\", \"\\u1EE8\", \"\\u1EEA\", \"\\u1EEC\", \"\\u1EEE\", \"\\u1EF0\", \"\\u1EF2\", \"\\u1EF4\", \"\\u1EF6\", \"\\u1EF8\", \"\\u1EFA\", \"\\u1EFC\", \"\\u1EFE\", [\"\\u1F08\", \"\\u1F0F\"], [\"\\u1F18\", \"\\u1F1D\"], [\"\\u1F28\", \"\\u1F2F\"], [\"\\u1F38\", \"\\u1F3F\"], [\"\\u1F48\", \"\\u1F4D\"], \"\\u1F59\", \"\\u1F5B\", \"\\u1F5D\", \"\\u1F5F\", [\"\\u1F68\", \"\\u1F6F\"], [\"\\u1FB8\", \"\\u1FBB\"], [\"\\u1FC8\", \"\\u1FCB\"], [\"\\u1FD8\", \"\\u1FDB\"], [\"\\u1FE8\", \"\\u1FEC\"], [\"\\u1FF8\", \"\\u1FFB\"], \"\\u2102\", \"\\u2107\", [\"\\u210B\", \"\\u210D\"], [\"\\u2110\", \"\\u2112\"], \"\\u2115\", [\"\\u2119\", \"\\u211D\"], \"\\u2124\", \"\\u2126\", \"\\u2128\", [\"\\u212A\", \"\\u212D\"], [\"\\u2130\", \"\\u2133\"], [\"\\u213E\", \"\\u213F\"], \"\\u2145\", \"\\u2183\", [\"\\u2C00\", \"\\u2C2E\"], \"\\u2C60\", [\"\\u2C62\", \"\\u2C64\"], \"\\u2C67\", \"\\u2C69\", \"\\u2C6B\", [\"\\u2C6D\", \"\\u2C70\"], \"\\u2C72\", \"\\u2C75\", [\"\\u2C7E\", \"\\u2C80\"], \"\\u2C82\", \"\\u2C84\", \"\\u2C86\", \"\\u2C88\", \"\\u2C8A\", \"\\u2C8C\", \"\\u2C8E\", \"\\u2C90\", \"\\u2C92\", \"\\u2C94\", \"\\u2C96\", \"\\u2C98\", \"\\u2C9A\", \"\\u2C9C\", \"\\u2C9E\", \"\\u2CA0\", \"\\u2CA2\", \"\\u2CA4\", \"\\u2CA6\", \"\\u2CA8\", \"\\u2CAA\", \"\\u2CAC\", \"\\u2CAE\", \"\\u2CB0\", \"\\u2CB2\", \"\\u2CB4\", \"\\u2CB6\", \"\\u2CB8\", \"\\u2CBA\", \"\\u2CBC\", \"\\u2CBE\", \"\\u2CC0\", \"\\u2CC2\", \"\\u2CC4\", \"\\u2CC6\", \"\\u2CC8\", \"\\u2CCA\", \"\\u2CCC\", \"\\u2CCE\", \"\\u2CD0\", \"\\u2CD2\", \"\\u2CD4\", \"\\u2CD6\", \"\\u2CD8\", \"\\u2CDA\", \"\\u2CDC\", \"\\u2CDE\", \"\\u2CE0\", \"\\u2CE2\", \"\\u2CEB\", \"\\u2CED\", \"\\u2CF2\", \"\\uA640\", \"\\uA642\", \"\\uA644\", \"\\uA646\", \"\\uA648\", \"\\uA64A\", \"\\uA64C\", \"\\uA64E\", \"\\uA650\", \"\\uA652\", \"\\uA654\", \"\\uA656\", \"\\uA658\", \"\\uA65A\", \"\\uA65C\", \"\\uA65E\", \"\\uA660\", \"\\uA662\", \"\\uA664\", \"\\uA666\", \"\\uA668\", \"\\uA66A\", \"\\uA66C\", \"\\uA680\", \"\\uA682\", \"\\uA684\", \"\\uA686\", \"\\uA688\", \"\\uA68A\", \"\\uA68C\", \"\\uA68E\", \"\\uA690\", \"\\uA692\", \"\\uA694\", \"\\uA696\", \"\\uA698\", \"\\uA69A\", \"\\uA722\", \"\\uA724\", \"\\uA726\", \"\\uA728\", \"\\uA72A\", \"\\uA72C\", \"\\uA72E\", \"\\uA732\", \"\\uA734\", \"\\uA736\", \"\\uA738\", \"\\uA73A\", \"\\uA73C\", \"\\uA73E\", \"\\uA740\", \"\\uA742\", \"\\uA744\", \"\\uA746\", \"\\uA748\", \"\\uA74A\", \"\\uA74C\", \"\\uA74E\", \"\\uA750\", \"\\uA752\", \"\\uA754\", \"\\uA756\", \"\\uA758\", \"\\uA75A\", \"\\uA75C\", \"\\uA75E\", \"\\uA760\", \"\\uA762\", \"\\uA764\", \"\\uA766\", \"\\uA768\", \"\\uA76A\", \"\\uA76C\", \"\\uA76E\", \"\\uA779\", \"\\uA77B\", [\"\\uA77D\", \"\\uA77E\"], \"\\uA780\", \"\\uA782\", \"\\uA784\", \"\\uA786\", \"\\uA78B\", \"\\uA78D\", \"\\uA790\", \"\\uA792\", \"\\uA796\", \"\\uA798\", \"\\uA79A\", \"\\uA79C\", \"\\uA79E\", \"\\uA7A0\", \"\\uA7A2\", \"\\uA7A4\", \"\\uA7A6\", \"\\uA7A8\", [\"\\uA7AA\", \"\\uA7AD\"], [\"\\uA7B0\", \"\\uA7B4\"], \"\\uA7B6\", [\"\\uFF21\", \"\\uFF3A\"]], false, false),\n      peg$c415 = peg$classExpectation([\"\\u0903\", \"\\u093B\", [\"\\u093E\", \"\\u0940\"], [\"\\u0949\", \"\\u094C\"], [\"\\u094E\", \"\\u094F\"], [\"\\u0982\", \"\\u0983\"], [\"\\u09BE\", \"\\u09C0\"], [\"\\u09C7\", \"\\u09C8\"], [\"\\u09CB\", \"\\u09CC\"], \"\\u09D7\", \"\\u0A03\", [\"\\u0A3E\", \"\\u0A40\"], \"\\u0A83\", [\"\\u0ABE\", \"\\u0AC0\"], \"\\u0AC9\", [\"\\u0ACB\", \"\\u0ACC\"], [\"\\u0B02\", \"\\u0B03\"], \"\\u0B3E\", \"\\u0B40\", [\"\\u0B47\", \"\\u0B48\"], [\"\\u0B4B\", \"\\u0B4C\"], \"\\u0B57\", [\"\\u0BBE\", \"\\u0BBF\"], [\"\\u0BC1\", \"\\u0BC2\"], [\"\\u0BC6\", \"\\u0BC8\"], [\"\\u0BCA\", \"\\u0BCC\"], \"\\u0BD7\", [\"\\u0C01\", \"\\u0C03\"], [\"\\u0C41\", \"\\u0C44\"], [\"\\u0C82\", \"\\u0C83\"], \"\\u0CBE\", [\"\\u0CC0\", \"\\u0CC4\"], [\"\\u0CC7\", \"\\u0CC8\"], [\"\\u0CCA\", \"\\u0CCB\"], [\"\\u0CD5\", \"\\u0CD6\"], [\"\\u0D02\", \"\\u0D03\"], [\"\\u0D3E\", \"\\u0D40\"], [\"\\u0D46\", \"\\u0D48\"], [\"\\u0D4A\", \"\\u0D4C\"], \"\\u0D57\", [\"\\u0D82\", \"\\u0D83\"], [\"\\u0DCF\", \"\\u0DD1\"], [\"\\u0DD8\", \"\\u0DDF\"], [\"\\u0DF2\", \"\\u0DF3\"], [\"\\u0F3E\", \"\\u0F3F\"], \"\\u0F7F\", [\"\\u102B\", \"\\u102C\"], \"\\u1031\", \"\\u1038\", [\"\\u103B\", \"\\u103C\"], [\"\\u1056\", \"\\u1057\"], [\"\\u1062\", \"\\u1064\"], [\"\\u1067\", \"\\u106D\"], [\"\\u1083\", \"\\u1084\"], [\"\\u1087\", \"\\u108C\"], \"\\u108F\", [\"\\u109A\", \"\\u109C\"], \"\\u17B6\", [\"\\u17BE\", \"\\u17C5\"], [\"\\u17C7\", \"\\u17C8\"], [\"\\u1923\", \"\\u1926\"], [\"\\u1929\", \"\\u192B\"], [\"\\u1930\", \"\\u1931\"], [\"\\u1933\", \"\\u1938\"], [\"\\u1A19\", \"\\u1A1A\"], \"\\u1A55\", \"\\u1A57\", \"\\u1A61\", [\"\\u1A63\", \"\\u1A64\"], [\"\\u1A6D\", \"\\u1A72\"], \"\\u1B04\", \"\\u1B35\", \"\\u1B3B\", [\"\\u1B3D\", \"\\u1B41\"], [\"\\u1B43\", \"\\u1B44\"], \"\\u1B82\", \"\\u1BA1\", [\"\\u1BA6\", \"\\u1BA7\"], \"\\u1BAA\", \"\\u1BE7\", [\"\\u1BEA\", \"\\u1BEC\"], \"\\u1BEE\", [\"\\u1BF2\", \"\\u1BF3\"], [\"\\u1C24\", \"\\u1C2B\"], [\"\\u1C34\", \"\\u1C35\"], \"\\u1CE1\", [\"\\u1CF2\", \"\\u1CF3\"], [\"\\u302E\", \"\\u302F\"], [\"\\uA823\", \"\\uA824\"], \"\\uA827\", [\"\\uA880\", \"\\uA881\"], [\"\\uA8B4\", \"\\uA8C3\"], [\"\\uA952\", \"\\uA953\"], \"\\uA983\", [\"\\uA9B4\", \"\\uA9B5\"], [\"\\uA9BA\", \"\\uA9BB\"], [\"\\uA9BD\", \"\\uA9C0\"], [\"\\uAA2F\", \"\\uAA30\"], [\"\\uAA33\", \"\\uAA34\"], \"\\uAA4D\", \"\\uAA7B\", \"\\uAA7D\", \"\\uAAEB\", [\"\\uAAEE\", \"\\uAAEF\"], \"\\uAAF5\", [\"\\uABE3\", \"\\uABE4\"], [\"\\uABE6\", \"\\uABE7\"], [\"\\uABE9\", \"\\uABEA\"], \"\\uABEC\"], false, false),\n      peg$c417 = peg$classExpectation([[\"\\u0300\", \"\\u036F\"], [\"\\u0483\", \"\\u0487\"], [\"\\u0591\", \"\\u05BD\"], \"\\u05BF\", [\"\\u05C1\", \"\\u05C2\"], [\"\\u05C4\", \"\\u05C5\"], \"\\u05C7\", [\"\\u0610\", \"\\u061A\"], [\"\\u064B\", \"\\u065F\"], \"\\u0670\", [\"\\u06D6\", \"\\u06DC\"], [\"\\u06DF\", \"\\u06E4\"], [\"\\u06E7\", \"\\u06E8\"], [\"\\u06EA\", \"\\u06ED\"], \"\\u0711\", [\"\\u0730\", \"\\u074A\"], [\"\\u07A6\", \"\\u07B0\"], [\"\\u07EB\", \"\\u07F3\"], [\"\\u0816\", \"\\u0819\"], [\"\\u081B\", \"\\u0823\"], [\"\\u0825\", \"\\u0827\"], [\"\\u0829\", \"\\u082D\"], [\"\\u0859\", \"\\u085B\"], [\"\\u08E3\", \"\\u0902\"], \"\\u093A\", \"\\u093C\", [\"\\u0941\", \"\\u0948\"], \"\\u094D\", [\"\\u0951\", \"\\u0957\"], [\"\\u0962\", \"\\u0963\"], \"\\u0981\", \"\\u09BC\", [\"\\u09C1\", \"\\u09C4\"], \"\\u09CD\", [\"\\u09E2\", \"\\u09E3\"], [\"\\u0A01\", \"\\u0A02\"], \"\\u0A3C\", [\"\\u0A41\", \"\\u0A42\"], [\"\\u0A47\", \"\\u0A48\"], [\"\\u0A4B\", \"\\u0A4D\"], \"\\u0A51\", [\"\\u0A70\", \"\\u0A71\"], \"\\u0A75\", [\"\\u0A81\", \"\\u0A82\"], \"\\u0ABC\", [\"\\u0AC1\", \"\\u0AC5\"], [\"\\u0AC7\", \"\\u0AC8\"], \"\\u0ACD\", [\"\\u0AE2\", \"\\u0AE3\"], \"\\u0B01\", \"\\u0B3C\", \"\\u0B3F\", [\"\\u0B41\", \"\\u0B44\"], \"\\u0B4D\", \"\\u0B56\", [\"\\u0B62\", \"\\u0B63\"], \"\\u0B82\", \"\\u0BC0\", \"\\u0BCD\", \"\\u0C00\", [\"\\u0C3E\", \"\\u0C40\"], [\"\\u0C46\", \"\\u0C48\"], [\"\\u0C4A\", \"\\u0C4D\"], [\"\\u0C55\", \"\\u0C56\"], [\"\\u0C62\", \"\\u0C63\"], \"\\u0C81\", \"\\u0CBC\", \"\\u0CBF\", \"\\u0CC6\", [\"\\u0CCC\", \"\\u0CCD\"], [\"\\u0CE2\", \"\\u0CE3\"], \"\\u0D01\", [\"\\u0D41\", \"\\u0D44\"], \"\\u0D4D\", [\"\\u0D62\", \"\\u0D63\"], \"\\u0DCA\", [\"\\u0DD2\", \"\\u0DD4\"], \"\\u0DD6\", \"\\u0E31\", [\"\\u0E34\", \"\\u0E3A\"], [\"\\u0E47\", \"\\u0E4E\"], \"\\u0EB1\", [\"\\u0EB4\", \"\\u0EB9\"], [\"\\u0EBB\", \"\\u0EBC\"], [\"\\u0EC8\", \"\\u0ECD\"], [\"\\u0F18\", \"\\u0F19\"], \"\\u0F35\", \"\\u0F37\", \"\\u0F39\", [\"\\u0F71\", \"\\u0F7E\"], [\"\\u0F80\", \"\\u0F84\"], [\"\\u0F86\", \"\\u0F87\"], [\"\\u0F8D\", \"\\u0F97\"], [\"\\u0F99\", \"\\u0FBC\"], \"\\u0FC6\", [\"\\u102D\", \"\\u1030\"], [\"\\u1032\", \"\\u1037\"], [\"\\u1039\", \"\\u103A\"], [\"\\u103D\", \"\\u103E\"], [\"\\u1058\", \"\\u1059\"], [\"\\u105E\", \"\\u1060\"], [\"\\u1071\", \"\\u1074\"], \"\\u1082\", [\"\\u1085\", \"\\u1086\"], \"\\u108D\", \"\\u109D\", [\"\\u135D\", \"\\u135F\"], [\"\\u1712\", \"\\u1714\"], [\"\\u1732\", \"\\u1734\"], [\"\\u1752\", \"\\u1753\"], [\"\\u1772\", \"\\u1773\"], [\"\\u17B4\", \"\\u17B5\"], [\"\\u17B7\", \"\\u17BD\"], \"\\u17C6\", [\"\\u17C9\", \"\\u17D3\"], \"\\u17DD\", [\"\\u180B\", \"\\u180D\"], \"\\u18A9\", [\"\\u1920\", \"\\u1922\"], [\"\\u1927\", \"\\u1928\"], \"\\u1932\", [\"\\u1939\", \"\\u193B\"], [\"\\u1A17\", \"\\u1A18\"], \"\\u1A1B\", \"\\u1A56\", [\"\\u1A58\", \"\\u1A5E\"], \"\\u1A60\", \"\\u1A62\", [\"\\u1A65\", \"\\u1A6C\"], [\"\\u1A73\", \"\\u1A7C\"], \"\\u1A7F\", [\"\\u1AB0\", \"\\u1ABD\"], [\"\\u1B00\", \"\\u1B03\"], \"\\u1B34\", [\"\\u1B36\", \"\\u1B3A\"], \"\\u1B3C\", \"\\u1B42\", [\"\\u1B6B\", \"\\u1B73\"], [\"\\u1B80\", \"\\u1B81\"], [\"\\u1BA2\", \"\\u1BA5\"], [\"\\u1BA8\", \"\\u1BA9\"], [\"\\u1BAB\", \"\\u1BAD\"], \"\\u1BE6\", [\"\\u1BE8\", \"\\u1BE9\"], \"\\u1BED\", [\"\\u1BEF\", \"\\u1BF1\"], [\"\\u1C2C\", \"\\u1C33\"], [\"\\u1C36\", \"\\u1C37\"], [\"\\u1CD0\", \"\\u1CD2\"], [\"\\u1CD4\", \"\\u1CE0\"], [\"\\u1CE2\", \"\\u1CE8\"], \"\\u1CED\", \"\\u1CF4\", [\"\\u1CF8\", \"\\u1CF9\"], [\"\\u1DC0\", \"\\u1DF5\"], [\"\\u1DFC\", \"\\u1DFF\"], [\"\\u20D0\", \"\\u20DC\"], \"\\u20E1\", [\"\\u20E5\", \"\\u20F0\"], [\"\\u2CEF\", \"\\u2CF1\"], \"\\u2D7F\", [\"\\u2DE0\", \"\\u2DFF\"], [\"\\u302A\", \"\\u302D\"], [\"\\u3099\", \"\\u309A\"], \"\\uA66F\", [\"\\uA674\", \"\\uA67D\"], [\"\\uA69E\", \"\\uA69F\"], [\"\\uA6F0\", \"\\uA6F1\"], \"\\uA802\", \"\\uA806\", \"\\uA80B\", [\"\\uA825\", \"\\uA826\"], \"\\uA8C4\", [\"\\uA8E0\", \"\\uA8F1\"], [\"\\uA926\", \"\\uA92D\"], [\"\\uA947\", \"\\uA951\"], [\"\\uA980\", \"\\uA982\"], \"\\uA9B3\", [\"\\uA9B6\", \"\\uA9B9\"], \"\\uA9BC\", \"\\uA9E5\", [\"\\uAA29\", \"\\uAA2E\"], [\"\\uAA31\", \"\\uAA32\"], [\"\\uAA35\", \"\\uAA36\"], \"\\uAA43\", \"\\uAA4C\", \"\\uAA7C\", \"\\uAAB0\", [\"\\uAAB2\", \"\\uAAB4\"], [\"\\uAAB7\", \"\\uAAB8\"], [\"\\uAABE\", \"\\uAABF\"], \"\\uAAC1\", [\"\\uAAEC\", \"\\uAAED\"], \"\\uAAF6\", \"\\uABE5\", \"\\uABE8\", \"\\uABED\", \"\\uFB1E\", [\"\\uFE00\", \"\\uFE0F\"], [\"\\uFE20\", \"\\uFE2F\"]], false, false),\n      peg$c419 = peg$classExpectation([[\"0\", \"9\"], [\"\\u0660\", \"\\u0669\"], [\"\\u06F0\", \"\\u06F9\"], [\"\\u07C0\", \"\\u07C9\"], [\"\\u0966\", \"\\u096F\"], [\"\\u09E6\", \"\\u09EF\"], [\"\\u0A66\", \"\\u0A6F\"], [\"\\u0AE6\", \"\\u0AEF\"], [\"\\u0B66\", \"\\u0B6F\"], [\"\\u0BE6\", \"\\u0BEF\"], [\"\\u0C66\", \"\\u0C6F\"], [\"\\u0CE6\", \"\\u0CEF\"], [\"\\u0D66\", \"\\u0D6F\"], [\"\\u0DE6\", \"\\u0DEF\"], [\"\\u0E50\", \"\\u0E59\"], [\"\\u0ED0\", \"\\u0ED9\"], [\"\\u0F20\", \"\\u0F29\"], [\"\\u1040\", \"\\u1049\"], [\"\\u1090\", \"\\u1099\"], [\"\\u17E0\", \"\\u17E9\"], [\"\\u1810\", \"\\u1819\"], [\"\\u1946\", \"\\u194F\"], [\"\\u19D0\", \"\\u19D9\"], [\"\\u1A80\", \"\\u1A89\"], [\"\\u1A90\", \"\\u1A99\"], [\"\\u1B50\", \"\\u1B59\"], [\"\\u1BB0\", \"\\u1BB9\"], [\"\\u1C40\", \"\\u1C49\"], [\"\\u1C50\", \"\\u1C59\"], [\"\\uA620\", \"\\uA629\"], [\"\\uA8D0\", \"\\uA8D9\"], [\"\\uA900\", \"\\uA909\"], [\"\\uA9D0\", \"\\uA9D9\"], [\"\\uA9F0\", \"\\uA9F9\"], [\"\\uAA50\", \"\\uAA59\"], [\"\\uABF0\", \"\\uABF9\"], [\"\\uFF10\", \"\\uFF19\"]], false, false),\n      peg$c421 = peg$classExpectation([[\"\\u16EE\", \"\\u16F0\"], [\"\\u2160\", \"\\u2182\"], [\"\\u2185\", \"\\u2188\"], \"\\u3007\", [\"\\u3021\", \"\\u3029\"], [\"\\u3038\", \"\\u303A\"], [\"\\uA6E6\", \"\\uA6EF\"]], false, false),\n      peg$c423 = peg$classExpectation([\"_\", [\"\\u203F\", \"\\u2040\"], \"\\u2054\", [\"\\uFE33\", \"\\uFE34\"], [\"\\uFE4D\", \"\\uFE4F\"], \"\\uFF3F\"], false, false),\n      peg$c425 = peg$classExpectation([\" \", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false),\n      peg$currPos = 0,\n      peg$savedPos = 0,\n      peg$posDetailsCache = [{\n    line: 1,\n    column: 1\n  }],\n      peg$maxFailPos = 0,\n      peg$maxFailExpected = [],\n      peg$silentFails = 0,\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location);\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return {\n      type: \"literal\",\n      text: text,\n      ignoreCase: ignoreCase\n    };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return {\n      type: \"class\",\n      parts: parts,\n      inverted: inverted,\n      ignoreCase: ignoreCase\n    };\n  }\n\n  function peg$endExpectation() {\n    return {\n      type: \"end\"\n    };\n  }\n\n  function peg$otherExpectation(description) {\n    return {\n      type: \"other\",\n      description: description\n    };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos],\n        p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails = peg$computePosDetails(endPos);\n    return {\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTermCases();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c0(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTermCases() {\n    var s0, s1, s2, s3, s4, s5;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseFunctionSymbol();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseTerms();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c4;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c6(s1, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseConstantSymbol();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c7(s1);\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseVariableSymbol();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c8(s1);\n        }\n\n        s0 = s1;\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c1);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTerms() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$parseTerm();\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s4 = peg$c9;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c10);\n        }\n      }\n\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTerm();\n\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c11(s1, s5);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s4 = peg$c9;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTerm();\n\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c11(s1, s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePredicateAtom() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$parsePredicateSymbol();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseTerms();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c4;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c13(s1, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseQuasiAtom() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parseTerm();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEqNeqSymbol();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseTerm();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c14(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsePredicateAtom();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c15(s1);\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsePredicateSymbol();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c16(s1);\n        }\n\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEqNeqSymbol() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parseEqualitySymbol();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17();\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseNonEqualitySymbol();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c18();\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFormulaStrict() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseFormulaStrictCases();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c19);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFormulaStrictCases() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c3);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseFormulaStrict();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseBinaryConnective();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseFormulaStrict();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c4;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c21(s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseExistsSymbol();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseVariableSymbol();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseFormulaStrict();\n\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c22(s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseForallSymbol();\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseWS();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseVariableSymbol();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseFormulaStrict();\n\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c23(s3, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseNegationSymbol();\n\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseFormulaStrict();\n\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseQuasiAtom();\n\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c20(s1);\n            }\n\n            s0 = s1;\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s1 = peg$c2;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c3);\n                }\n              }\n\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseFormulaStrict();\n\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s3 = peg$c4;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c5);\n                    }\n                  }\n\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c20(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseBinaryConnective() {\n    var s0, s1;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseConjunctionSymbol();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c26();\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseDisjunctionSymbol();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c27();\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseImplicationSymbol();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c28();\n        }\n\n        s0 = s1;\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseEquivalenceSymbol();\n\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c29();\n          }\n\n          s0 = s1;\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c25);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFormulaWithPrecedence() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseImplicativeFormula();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseImplicativeFormula() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parseDisjunctiveFormula();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseImplicativeCases();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c30(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseImplicativeCases() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parseImplicationSymbol();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseImplicativeFormula();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c31(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseEquivalencesRight();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$c32;\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c33();\n        }\n\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEquivalencesRight() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseEquivalenceSymbol();\n\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parseWS();\n\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseDisjunctiveFormula();\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s2;\n            s3 = peg$c34(s5);\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parseEquivalenceSymbol();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDisjunctiveFormula();\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWS();\n\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s2;\n                s3 = peg$c34(s5);\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c35(s1);\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parseDisjunctiveFormula() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    s1 = peg$parseConjunctiveFormula();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        s5 = peg$parseDisjunctionSymbol();\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseConjunctiveFormula();\n\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseWS();\n\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c36(s1, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n          s5 = peg$parseDisjunctionSymbol();\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseConjunctiveFormula();\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseWS();\n\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c36(s1, s7);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c37(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseConjunctiveFormula() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    s1 = peg$parseUnaryFormula();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        s5 = peg$parseConjunctionSymbol();\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseUnaryFormula();\n\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseWS();\n\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c36(s1, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n          s5 = peg$parseConjunctionSymbol();\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseUnaryFormula();\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseWS();\n\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c36(s1, s7);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c38(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryFormula() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$parseNegationSymbol();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseUnaryFormula();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c24(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseExistsSymbol();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseVariableSymbol();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseWS();\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseUnaryFormula();\n\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseForallSymbol();\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseWS();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseVariableSymbol();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseWS();\n\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseUnaryFormula();\n\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c23(s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsePrimaryFormula();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrimaryFormula() {\n    var s0, s1, s2, s3;\n    s0 = peg$parseQuasiAtom();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseFormulaWithPrecedence();\n\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c4;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c5);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c20(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLiteral() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parseNegationSymbol();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePredicateAtom();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsePredicateAtom();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClause() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseClauseCases();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c41(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClauseCases() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseEmptyClause();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c42();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseClauseLiterals();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c43(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseClauseLiterals() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    s1 = peg$parsePrimaryClause();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        s5 = peg$parseDisjunctionSymbol();\n\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsePrimaryClause();\n\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseWS();\n\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c36(s1, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n          s5 = peg$parseDisjunctionSymbol();\n\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c9;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c10);\n              }\n            }\n          }\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsePrimaryClause();\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseWS();\n\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c36(s1, s7);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrimaryClause() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$parseLiteral();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c45(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseClauseLiterals();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseWS();\n\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c4;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c5);\n                }\n              }\n\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c46(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariableSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseIdentifier();\n\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s3 = peg$c48(s2);\n\n      if (s3) {\n        s3 = void 0;\n      } else {\n        s3 = peg$FAILED;\n      }\n\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c47);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstantSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseConstantIdentifier();\n\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s3 = peg$c50(s2);\n\n      if (s3) {\n        s3 = void 0;\n      } else {\n        s3 = peg$FAILED;\n      }\n\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c49);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctionSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseIdentifier();\n\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s3 = peg$c52(s2);\n\n      if (s3) {\n        s3 = void 0;\n      } else {\n        s3 = peg$FAILED;\n      }\n\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c51);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePredicateSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseIdentifier();\n\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s3 = peg$c54(s2);\n\n      if (s3) {\n        s3 = void 0;\n      } else {\n        s3 = peg$FAILED;\n      }\n\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c53);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEqualitySymbol() {\n    var s0;\n    peg$silentFails++;\n\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c56;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c57);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 8784) {\n        s0 = \"\\u2250\";\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c59);\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c55);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseConjunctionSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n\n    if (input.charCodeAt(peg$currPos) === 8743) {\n      s0 = \"\\u2227\";\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c62);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c63) {\n        s0 = peg$c63;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c64);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 38) {\n          s0 = peg$c65;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c66);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c67) {\n            s0 = peg$c67;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c68);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n\n            if (input.substr(peg$currPos, 5) === peg$c69) {\n              s1 = peg$c69;\n              peg$currPos += 5;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c70);\n              }\n            }\n\n            if (s1 !== peg$FAILED) {\n              s2 = peg$currPos;\n              peg$silentFails++;\n              s3 = peg$parseIdentifierPart();\n              peg$silentFails--;\n\n              if (s3 === peg$FAILED) {\n                s2 = void 0;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n\n              if (s2 !== peg$FAILED) {\n                s1 = [s1, s2];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n\n              if (input.substr(peg$currPos, 6) === peg$c71) {\n                s1 = peg$c71;\n                peg$currPos += 6;\n              } else {\n                s1 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c72);\n                }\n              }\n\n              if (s1 !== peg$FAILED) {\n                s2 = peg$currPos;\n                peg$silentFails++;\n                s3 = peg$parseIdentifierPart();\n                peg$silentFails--;\n\n                if (s3 === peg$FAILED) {\n                  s2 = void 0;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n\n                if (s2 !== peg$FAILED) {\n                  s1 = [s1, s2];\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c60);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDisjunctionSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n\n    if (input.charCodeAt(peg$currPos) === 8744) {\n      s0 = \"\\u2228\";\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c75);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c76) {\n        s0 = peg$c76;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c77);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 124) {\n          s0 = peg$c78;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c79);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c80) {\n            s0 = peg$c80;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c81);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n\n            if (input.substr(peg$currPos, 4) === peg$c82) {\n              s1 = peg$c82;\n              peg$currPos += 4;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n              }\n            }\n\n            if (s1 !== peg$FAILED) {\n              s2 = peg$currPos;\n              peg$silentFails++;\n              s3 = peg$parseIdentifierPart();\n              peg$silentFails--;\n\n              if (s3 === peg$FAILED) {\n                s2 = void 0;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n\n              if (s2 !== peg$FAILED) {\n                s1 = [s1, s2];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n\n              if (input.substr(peg$currPos, 4) === peg$c84) {\n                s1 = peg$c84;\n                peg$currPos += 4;\n              } else {\n                s1 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c85);\n                }\n              }\n\n              if (s1 !== peg$FAILED) {\n                s2 = peg$currPos;\n                peg$silentFails++;\n                s3 = peg$parseIdentifierPart();\n                peg$silentFails--;\n\n                if (s3 === peg$FAILED) {\n                  s2 = void 0;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n\n                if (s2 !== peg$FAILED) {\n                  s1 = [s1, s2];\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c73);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseImplicationSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n\n    if (input.charCodeAt(peg$currPos) === 8594) {\n      s0 = \"\\u2192\";\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c88);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 8658) {\n        s0 = \"\\u21D2\";\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c90);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10230) {\n          s0 = \"\\u27F6\";\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c92);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 10233) {\n            s0 = \"\\u27F9\";\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c94);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8835) {\n              s0 = \"\\u2283\";\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c96);\n              }\n            }\n\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c97) {\n                s0 = peg$c97;\n                peg$currPos += 2;\n              } else {\n                s0 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c98);\n                }\n              }\n\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 2) === peg$c99) {\n                  s0 = peg$c99;\n                  peg$currPos += 2;\n                } else {\n                  s0 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c100);\n                  }\n                }\n\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 3) === peg$c101) {\n                    s0 = peg$c101;\n                    peg$currPos += 3;\n                  } else {\n                    s0 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c102);\n                    }\n                  }\n\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 3) === peg$c103) {\n                      s0 = peg$c103;\n                      peg$currPos += 3;\n                    } else {\n                      s0 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c104);\n                      }\n                    }\n\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n\n                      if (input.substr(peg$currPos, 6) === peg$c105) {\n                        s1 = peg$c105;\n                        peg$currPos += 6;\n                      } else {\n                        s1 = peg$FAILED;\n\n                        if (peg$silentFails === 0) {\n                          peg$fail(peg$c106);\n                        }\n                      }\n\n                      if (s1 !== peg$FAILED) {\n                        s2 = peg$currPos;\n                        peg$silentFails++;\n                        s3 = peg$parseIdentifierPart();\n                        peg$silentFails--;\n\n                        if (s3 === peg$FAILED) {\n                          s2 = void 0;\n                        } else {\n                          peg$currPos = s2;\n                          s2 = peg$FAILED;\n                        }\n\n                        if (s2 !== peg$FAILED) {\n                          s1 = [s1, s2];\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n\n                        if (input.substr(peg$currPos, 8) === peg$c107) {\n                          s1 = peg$c107;\n                          peg$currPos += 8;\n                        } else {\n                          s1 = peg$FAILED;\n\n                          if (peg$silentFails === 0) {\n                            peg$fail(peg$c108);\n                          }\n                        }\n\n                        if (s1 !== peg$FAILED) {\n                          s2 = peg$currPos;\n                          peg$silentFails++;\n                          s3 = peg$parseIdentifierPart();\n                          peg$silentFails--;\n\n                          if (s3 === peg$FAILED) {\n                            s2 = void 0;\n                          } else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                          }\n\n                          if (s2 !== peg$FAILED) {\n                            s1 = [s1, s2];\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n\n                          if (input.substr(peg$currPos, 11) === peg$c109) {\n                            s1 = peg$c109;\n                            peg$currPos += 11;\n                          } else {\n                            s1 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c110);\n                            }\n                          }\n\n                          if (s1 !== peg$FAILED) {\n                            s2 = peg$currPos;\n                            peg$silentFails++;\n                            s3 = peg$parseIdentifierPart();\n                            peg$silentFails--;\n\n                            if (s3 === peg$FAILED) {\n                              s2 = void 0;\n                            } else {\n                              peg$currPos = s2;\n                              s2 = peg$FAILED;\n                            }\n\n                            if (s2 !== peg$FAILED) {\n                              s1 = [s1, s2];\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n\n                            if (input.substr(peg$currPos, 3) === peg$c111) {\n                              s1 = peg$c111;\n                              peg$currPos += 3;\n                            } else {\n                              s1 = peg$FAILED;\n\n                              if (peg$silentFails === 0) {\n                                peg$fail(peg$c112);\n                              }\n                            }\n\n                            if (s1 !== peg$FAILED) {\n                              s2 = peg$currPos;\n                              peg$silentFails++;\n                              s3 = peg$parseIdentifierPart();\n                              peg$silentFails--;\n\n                              if (s3 === peg$FAILED) {\n                                s2 = void 0;\n                              } else {\n                                peg$currPos = s2;\n                                s2 = peg$FAILED;\n                              }\n\n                              if (s2 !== peg$FAILED) {\n                                s1 = [s1, s2];\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c86);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEquivalenceSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n\n    if (input.substr(peg$currPos, 2) === peg$c114) {\n      s0 = peg$c114;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c115);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 10231) {\n        s0 = \"\\u27F7\";\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c117);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 8660) {\n          s0 = \"\\u21D4\";\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c119);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 10234) {\n            s0 = \"\\u27FA\";\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c121);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8801) {\n              s0 = \"\\u2261\";\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c123);\n              }\n            }\n\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 3) === peg$c124) {\n                s0 = peg$c124;\n                peg$currPos += 3;\n              } else {\n                s0 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c125);\n                }\n              }\n\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c126) {\n                  s0 = peg$c126;\n                  peg$currPos += 4;\n                } else {\n                  s0 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c127);\n                  }\n                }\n\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 3) === peg$c128) {\n                    s0 = peg$c128;\n                    peg$currPos += 3;\n                  } else {\n                    s0 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c129);\n                    }\n                  }\n\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 4) === peg$c130) {\n                      s0 = peg$c130;\n                      peg$currPos += 4;\n                    } else {\n                      s0 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c131);\n                      }\n                    }\n\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 3) === peg$c132) {\n                        s0 = peg$c132;\n                        peg$currPos += 3;\n                      } else {\n                        s0 = peg$FAILED;\n\n                        if (peg$silentFails === 0) {\n                          peg$fail(peg$c133);\n                        }\n                      }\n\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n\n                        if (input.substr(peg$currPos, 7) === peg$c134) {\n                          s1 = peg$c134;\n                          peg$currPos += 7;\n                        } else {\n                          s1 = peg$FAILED;\n\n                          if (peg$silentFails === 0) {\n                            peg$fail(peg$c135);\n                          }\n                        }\n\n                        if (s1 !== peg$FAILED) {\n                          s2 = peg$currPos;\n                          peg$silentFails++;\n                          s3 = peg$parseIdentifierPart();\n                          peg$silentFails--;\n\n                          if (s3 === peg$FAILED) {\n                            s2 = void 0;\n                          } else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                          }\n\n                          if (s2 !== peg$FAILED) {\n                            s1 = [s1, s2];\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n\n                          if (input.substr(peg$currPos, 15) === peg$c136) {\n                            s1 = peg$c136;\n                            peg$currPos += 15;\n                          } else {\n                            s1 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c137);\n                            }\n                          }\n\n                          if (s1 !== peg$FAILED) {\n                            s2 = peg$currPos;\n                            peg$silentFails++;\n                            s3 = peg$parseIdentifierPart();\n                            peg$silentFails--;\n\n                            if (s3 === peg$FAILED) {\n                              s2 = void 0;\n                            } else {\n                              peg$currPos = s2;\n                              s2 = peg$FAILED;\n                            }\n\n                            if (s2 !== peg$FAILED) {\n                              s1 = [s1, s2];\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n\n                            if (input.substr(peg$currPos, 11) === peg$c138) {\n                              s1 = peg$c138;\n                              peg$currPos += 11;\n                            } else {\n                              s1 = peg$FAILED;\n\n                              if (peg$silentFails === 0) {\n                                peg$fail(peg$c139);\n                              }\n                            }\n\n                            if (s1 !== peg$FAILED) {\n                              s2 = peg$currPos;\n                              peg$silentFails++;\n                              s3 = peg$parseIdentifierPart();\n                              peg$silentFails--;\n\n                              if (s3 === peg$FAILED) {\n                                s2 = void 0;\n                              } else {\n                                peg$currPos = s2;\n                                s2 = peg$FAILED;\n                              }\n\n                              if (s2 !== peg$FAILED) {\n                                s1 = [s1, s2];\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$currPos;\n\n                              if (input.substr(peg$currPos, 6) === peg$c140) {\n                                s1 = peg$c140;\n                                peg$currPos += 6;\n                              } else {\n                                s1 = peg$FAILED;\n\n                                if (peg$silentFails === 0) {\n                                  peg$fail(peg$c141);\n                                }\n                              }\n\n                              if (s1 !== peg$FAILED) {\n                                s2 = peg$currPos;\n                                peg$silentFails++;\n                                s3 = peg$parseIdentifierPart();\n                                peg$silentFails--;\n\n                                if (s3 === peg$FAILED) {\n                                  s2 = void 0;\n                                } else {\n                                  peg$currPos = s2;\n                                  s2 = peg$FAILED;\n                                }\n\n                                if (s2 !== peg$FAILED) {\n                                  s1 = [s1, s2];\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c113);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseExistsSymbol() {\n    var s0, s1, s2, s3, s4;\n    peg$silentFails++;\n\n    if (input.charCodeAt(peg$currPos) === 8707) {\n      s0 = \"\\u2203\";\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c144);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 2) === peg$c145) {\n        s1 = peg$c145;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c146);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 120) {\n          s3 = \"x\";\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c148);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c149) {\n            s4 = peg$c149;\n            peg$currPos += 4;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c150);\n            }\n          }\n\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parseIdentifierPart();\n          peg$silentFails--;\n\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 2) === peg$c151) {\n          s1 = peg$c151;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c152);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseIdentifierPart();\n          peg$silentFails--;\n\n          if (s3 === peg$FAILED) {\n            s2 = void 0;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c142);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseForallSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n\n    if (input.charCodeAt(peg$currPos) === 8704) {\n      s0 = \"\\u2200\";\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c155);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 7) === peg$c156) {\n        s1 = peg$c156;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c157);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parseIdentifierPart();\n        peg$silentFails--;\n\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 4) === peg$c158) {\n          s1 = peg$c158;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c159);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseIdentifierPart();\n          peg$silentFails--;\n\n          if (s3 === peg$FAILED) {\n            s2 = void 0;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n\n          if (input.substr(peg$currPos, 2) === peg$c160) {\n            s1 = peg$c160;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c161);\n            }\n          }\n\n          if (s1 !== peg$FAILED) {\n            s2 = peg$currPos;\n            peg$silentFails++;\n            s3 = peg$parseIdentifierPart();\n            peg$silentFails--;\n\n            if (s3 === peg$FAILED) {\n              s2 = void 0;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n\n            if (s2 !== peg$FAILED) {\n              s1 = [s1, s2];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n\n            if (input.substr(peg$currPos, 2) === peg$c162) {\n              s1 = peg$c162;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c163);\n              }\n            }\n\n            if (s1 !== peg$FAILED) {\n              s2 = peg$currPos;\n              peg$silentFails++;\n              s3 = peg$parseIdentifierPart();\n              peg$silentFails--;\n\n              if (s3 === peg$FAILED) {\n                s2 = void 0;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n\n              if (s2 !== peg$FAILED) {\n                s1 = [s1, s2];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c153);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNegationSymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n\n    if (input.charCodeAt(peg$currPos) === 172) {\n      s0 = \"\\xAC\";\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c166);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = \"-\";\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c168);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s0 = peg$c169;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c170);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 126) {\n            s0 = peg$c171;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c172);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n\n            if (input.substr(peg$currPos, 4) === peg$c173) {\n              s1 = peg$c173;\n              peg$currPos += 4;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c174);\n              }\n            }\n\n            if (s1 !== peg$FAILED) {\n              s2 = peg$currPos;\n              peg$silentFails++;\n              s3 = peg$parseIdentifierPart();\n              peg$silentFails--;\n\n              if (s3 === peg$FAILED) {\n                s2 = void 0;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n\n              if (s2 !== peg$FAILED) {\n                s1 = [s1, s2];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n\n              if (input.substr(peg$currPos, 5) === peg$c175) {\n                s1 = peg$c175;\n                peg$currPos += 5;\n              } else {\n                s1 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c176);\n                }\n              }\n\n              if (s1 !== peg$FAILED) {\n                s2 = peg$currPos;\n                peg$silentFails++;\n                s3 = peg$parseIdentifierPart();\n                peg$silentFails--;\n\n                if (s3 === peg$FAILED) {\n                  s2 = void 0;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n\n                if (s2 !== peg$FAILED) {\n                  s1 = [s1, s2];\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c164);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNonEqualitySymbol() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n\n    if (input.charCodeAt(peg$currPos) === 8800) {\n      s0 = \"\\u2260\";\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c179);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c180) {\n        s0 = peg$c180;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c181);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c182) {\n          s0 = peg$c182;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c183);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c184) {\n            s0 = peg$c184;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c185);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n\n            if (input.substr(peg$currPos, 4) === peg$c186) {\n              s1 = peg$c186;\n              peg$currPos += 4;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c187);\n              }\n            }\n\n            if (s1 !== peg$FAILED) {\n              s2 = peg$currPos;\n              peg$silentFails++;\n              s3 = peg$parseIdentifierPart();\n              peg$silentFails--;\n\n              if (s3 === peg$FAILED) {\n                s2 = void 0;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n\n              if (s2 !== peg$FAILED) {\n                s1 = [s1, s2];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c177);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEmptyClause() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n\n    if (input.charCodeAt(peg$currPos) === 9633) {\n      s0 = \"\\u25A1\";\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c190);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c191) {\n        s0 = peg$c191;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c192);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c193) {\n          s0 = peg$c193;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c194);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c195) {\n            s0 = peg$c195;\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c196);\n            }\n          }\n\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c197) {\n              s0 = peg$c197;\n              peg$currPos += 2;\n            } else {\n              s0 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c198);\n              }\n            }\n\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 9634) {\n                s0 = \"\\u25A2\";\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c200);\n                }\n              }\n\n              if (s0 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 8869) {\n                  s0 = \"\\u22A5\";\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c202);\n                  }\n                }\n\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 2) === peg$c203) {\n                    s0 = peg$c203;\n                    peg$currPos += 2;\n                  } else {\n                    s0 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c204);\n                    }\n                  }\n\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 3) === peg$c205) {\n                      s0 = peg$c205;\n                      peg$currPos += 3;\n                    } else {\n                      s0 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c206);\n                      }\n                    }\n\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n\n                      if (input.substr(peg$currPos, 7) === peg$c207) {\n                        s1 = peg$c207;\n                        peg$currPos += 7;\n                      } else {\n                        s1 = peg$FAILED;\n\n                        if (peg$silentFails === 0) {\n                          peg$fail(peg$c208);\n                        }\n                      }\n\n                      if (s1 !== peg$FAILED) {\n                        s2 = peg$currPos;\n                        peg$silentFails++;\n                        s3 = peg$parseIdentifierPart();\n                        peg$silentFails--;\n\n                        if (s3 === peg$FAILED) {\n                          s2 = void 0;\n                        } else {\n                          peg$currPos = s2;\n                          s2 = peg$FAILED;\n                        }\n\n                        if (s2 !== peg$FAILED) {\n                          s1 = [s1, s2];\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n\n                        if (input.substr(peg$currPos, 4) === peg$c209) {\n                          s1 = peg$c209;\n                          peg$currPos += 4;\n                        } else {\n                          s1 = peg$FAILED;\n\n                          if (peg$silentFails === 0) {\n                            peg$fail(peg$c210);\n                          }\n                        }\n\n                        if (s1 !== peg$FAILED) {\n                          s2 = peg$currPos;\n                          peg$silentFails++;\n                          s3 = peg$parseIdentifierPart();\n                          peg$silentFails--;\n\n                          if (s3 === peg$FAILED) {\n                            s2 = void 0;\n                          } else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                          }\n\n                          if (s2 !== peg$FAILED) {\n                            s1 = [s1, s2];\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n\n                          if (input.substr(peg$currPos, 4) === peg$c211) {\n                            s1 = peg$c211;\n                            peg$currPos += 4;\n                          } else {\n                            s1 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c212);\n                            }\n                          }\n\n                          if (s1 !== peg$FAILED) {\n                            s2 = peg$currPos;\n                            peg$silentFails++;\n                            s3 = peg$parseIdentifierPart();\n                            peg$silentFails--;\n\n                            if (s3 === peg$FAILED) {\n                              s2 = void 0;\n                            } else {\n                              peg$currPos = s2;\n                              s2 = peg$FAILED;\n                            }\n\n                            if (s2 !== peg$FAILED) {\n                              s1 = [s1, s2];\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c188);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstants() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseConstantsNE();\n\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseEmptyList();\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c213(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstantsNE() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    s0 = peg$currPos;\n    s1 = peg$parseConstantIdentifier();\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseWS();\n\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseConstantIdentifier();\n\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c214(s1, s7);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseWS();\n\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseConstantIdentifier();\n\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c214(s1, s7);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c215(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePredicates() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsePredicatesNE();\n\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseEmptyList();\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c216(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePredicatesNE() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    s0 = peg$currPos;\n    s1 = peg$parseLanguagePredicate();\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseWS();\n\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseLanguagePredicate();\n\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c217(s1, s7);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseWS();\n\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseLanguagePredicate();\n\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c217(s1, s7);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c218(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctions() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseFunctionsNE();\n\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseEmptyList();\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c219(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctionsNE() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    s0 = peg$currPos;\n    s1 = peg$parseLanguageFunction();\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseWS();\n\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseLanguageFunction();\n\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c220(s1, s7);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseWS();\n\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseLanguageFunction();\n\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c220(s1, s7);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c221(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePredicateArity() {\n    var s0;\n    peg$silentFails++;\n    s0 = peg$parseNat();\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c222);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctionArity() {\n    var s0, s1, s2;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNat();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c224(s1);\n\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c225(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c223);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNat() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = [];\n\n    if (peg$c226.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c227);\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n\n        if (peg$c226.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c227);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c228(s1);\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parseLanguagePredicate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentifier();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s4 = peg$c230;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c231);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseWS();\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsePredicateArity();\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseWS();\n\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c232(s2, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c229);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLanguageFunction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentifier();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s4 = peg$c230;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c231);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseWS();\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseFunctionArity();\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseWS();\n\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c232(s2, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c233);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDomain() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDomainNE();\n\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseEmptyList();\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c234(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDomainNE() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    s1 = peg$parseDomainElement();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseDomainElement();\n\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseWS();\n\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c235(s1, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseDomainElement();\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseWS();\n\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c235(s1, s7);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c236(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDomainElement() {\n    var s0, s1, s2;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n\n    if (peg$c238.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c239);\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n\n        if (peg$c238.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c239);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c237);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTuples() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTuplesNE();\n\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseEmptyList();\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c240(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTuplesNE() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    s1 = peg$parseTuple();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseTuple();\n\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseWS();\n\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c241(s1, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTuple();\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseWS();\n\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c241(s1, s7);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c12(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTuple() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n    peg$silentFails++;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c3);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDomainElement();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$currPos;\n\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s7 = peg$c9;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c10);\n              }\n            }\n\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseWS();\n\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parseDomainElement();\n\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parseWS();\n\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s6;\n                    s7 = peg$c235(s3, s9);\n                    s6 = s7;\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n\n            if (s6 !== peg$FAILED) {\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$currPos;\n\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c9;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c10);\n                  }\n                }\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseWS();\n\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseDomainElement();\n\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseWS();\n\n                      if (s10 !== peg$FAILED) {\n                        peg$savedPos = s6;\n                        s7 = peg$c235(s3, s9);\n                        s6 = s7;\n                      } else {\n                        peg$currPos = s6;\n                        s6 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s6;\n                      s6 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              }\n            } else {\n              s5 = peg$FAILED;\n            }\n\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c4;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c5);\n                }\n              }\n\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c236(s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseDomainElement();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c243(s1);\n      }\n\n      s0 = s1;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c242);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseValuation() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseValuationNE();\n\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseEmptyList();\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c216(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseValuationNE() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    s1 = peg$parseValuationPair();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseValuationPair();\n\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseWS();\n\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c217(s1, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseValuationPair();\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseWS();\n\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c217(s1, s7);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c218(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseValuationPair() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c3);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseVariableSymbol();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c9;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c10);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWS();\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseDomainElement();\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseWS();\n\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                      s9 = peg$c4;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c5);\n                      }\n                    }\n\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c244(s3, s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseVariableSymbol();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseMapsTo();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseWS();\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseDomainElement();\n\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c244(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSubstitution() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSubstitutionNE();\n\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseEmptyList();\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c216(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSubstitutionNE() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    s1 = peg$parseSubstitutionPair();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseWS();\n\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseSubstitutionPair();\n\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseWS();\n\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c217(s1, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c10);\n            }\n          }\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseWS();\n\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseSubstitutionPair();\n\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseWS();\n\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c217(s1, s7);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c245(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSubstitutionPair() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c3);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseVariableSymbol();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c9;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c10);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWS();\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseTerm();\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseWS();\n\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                      s9 = peg$c4;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c5);\n                      }\n                    }\n\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c246(s3, s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseVariableSymbol();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseMapsTo();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseWS();\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseTerm();\n\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c246(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMapsTo() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n\n    if (input.substr(peg$currPos, 2) === peg$c97) {\n      s0 = peg$c97;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c98);\n      }\n    }\n\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c248) {\n        s0 = peg$c248;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c249);\n        }\n      }\n\n      if (s0 === peg$FAILED) {\n        if (/^[\\u21A6\\u27FC]/.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c251);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n\n          if (input.substr(peg$currPos, 7) === peg$c252) {\n            s1 = peg$c252;\n            peg$currPos += 7;\n          } else {\n            s1 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c253);\n            }\n          }\n\n          if (s1 !== peg$FAILED) {\n            s2 = peg$currPos;\n            peg$silentFails++;\n            s3 = peg$parseIdentifierPart();\n            peg$silentFails--;\n\n            if (s3 === peg$FAILED) {\n              s2 = void 0;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n\n            if (s2 !== peg$FAILED) {\n              s1 = [s1, s2];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c247);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetff() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 4) === peg$c254) {\n        s2 = peg$c254;\n        peg$currPos += 4;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c255);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsename();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c9;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c10);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWS();\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseformulaRole();\n\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s8 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c10);\n                    }\n                  }\n\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseWS();\n\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsetffFormula();\n\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseWS();\n\n                        if (s11 !== peg$FAILED) {\n                          if (input.substr(peg$currPos, 2) === peg$c256) {\n                            s12 = peg$c256;\n                            peg$currPos += 2;\n                          } else {\n                            s12 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c257);\n                            }\n                          }\n\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseWS();\n\n                            if (s13 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s1 = peg$c258(s4, s7, s10);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsename() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifier();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c259(s1);\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parseformulaRole() {\n    var s0, s1;\n    s0 = peg$currPos;\n\n    if (input.substr(peg$currPos, 5) === peg$c260) {\n      s1 = peg$c260;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c261);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c262();\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 4) === peg$c263) {\n        s1 = peg$c263;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c264);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c265();\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffWS() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 37) {\n      s3 = peg$c266;\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c267);\n      }\n    }\n\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parseWS();\n\n      if (s4 !== peg$FAILED) {\n        s5 = [];\n\n        if (peg$c268.test(input.charAt(peg$currPos))) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c269);\n          }\n        }\n\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n\n          if (peg$c268.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c269);\n            }\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n\n          if (peg$c270.test(input.charAt(peg$currPos))) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c271);\n            }\n          }\n\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n\n              if (peg$c270.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c271);\n                }\n              }\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n\n          if (s6 !== peg$FAILED) {\n            s3 = [s3, s4, s5, s6];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 37) {\n          s3 = peg$c266;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c267);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n\n            if (peg$c268.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c269);\n              }\n            }\n\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n\n              if (peg$c268.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c269);\n                }\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n\n              if (peg$c270.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c271);\n                }\n              }\n\n              if (s7 !== peg$FAILED) {\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n\n                  if (peg$c270.test(input.charAt(peg$currPos))) {\n                    s7 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c271);\n                    }\n                  }\n                }\n              } else {\n                s6 = peg$FAILED;\n              }\n\n              if (s6 !== peg$FAILED) {\n                s3 = [s3, s4, s5, s6];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c272();\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseWS();\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffFormula() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parsetffAtomTyping();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetffWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c273(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffLogicFormula();\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsetffWS();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c274(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetffWS();\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsetffSubtype();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsetffWS();\n\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c275(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsetffWS();\n\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsetfxSequent();\n\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsetffWS();\n\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c276(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsetffWS();\n\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c277(s1);\n            }\n\n            s0 = s1;\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffLogicFormula() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffBinaryFormula();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c278(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffUnaryFormula();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c279(s1);\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetffDefinedInfix();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c280(s1);\n        }\n\n        s0 = s1;\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsetffUnitaryFormula();\n\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c281(s1);\n          }\n\n          s0 = s1;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffUnitaryFormula() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$parsetffQuantifiedFormula();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c282(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetffLogicFormula();\n\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c4;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWS();\n\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c283(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetffAtomicFormula();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c225(s1);\n        }\n\n        s0 = s1;\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsetfxUnitaryFormula();\n\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c284(s1);\n          }\n\n          s0 = s1;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxUnitaryFormula() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parsevariable();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c285(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffQuantifiedFormula() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n    s0 = peg$currPos;\n    s1 = peg$parsefofQuantifier();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s2 = peg$c286;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c287);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetffVariableList();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c288;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c289);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWS();\n\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 58) {\n                  s7 = peg$c290;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c291);\n                  }\n                }\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseWS();\n\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsetffUnitFormula();\n\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c292(s1, s4, s9);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefofQuantifier() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s1 = \"?\";\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c294);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c295();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c169;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c170);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c296();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffVariableList() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = peg$parsetffVariable();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c9;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c10);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetffVariableList();\n\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c297(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffVariable();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c285(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffVariable() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffTypedVariable();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c277(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsevariable();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c285(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariable() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n\n    if (peg$c298.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c299);\n      }\n    }\n\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n\n      if (peg$c298.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c299);\n        }\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c300(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffTypedVariable() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = peg$parsevariable();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s2 = peg$c290;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c291);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetffAtomicType();\n\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c301(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffUnitFormula() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffDefinedInfix();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c302(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffUnaryFormula();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c277(s1);\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetffUnitaryFormula();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c303(s1);\n        }\n\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffUnaryFormula() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffPrefixUnary();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c304(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffInfixUnary();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c305(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffPrefixUnary() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parseunaryConnective();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetffPreunitFormula();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c306(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffInfixUnary() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parsetffUnitaryTerm();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseinfixInequality();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetffUnitaryTerm();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c307(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseunaryConnective() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c171;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c172);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c308();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffUnitaryTerm() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c3);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetffLogicFormula();\n\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s4 = peg$c4;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c5);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseWS();\n\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c309(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffAtomicFormula();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c310(s1);\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsedefinedTerm();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c302(s1);\n        }\n\n        s0 = s1;\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsetfxTuple();\n\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c277(s1);\n          }\n\n          s0 = s1;\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsevariable();\n\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c285(s1);\n            }\n\n            s0 = s1;\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseinfixInequality() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n\n    if (input.substr(peg$currPos, 2) === peg$c180) {\n      s1 = peg$c180;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c181);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c311();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffPreunitFormula() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffUnitaryFormula();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c303(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffPrefixUnary();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c304(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxTuple() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c286;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c287);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c288;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c289);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c312();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c286;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c287);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetffArguments();\n\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s4 = peg$c288;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c289);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWS();\n\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c310(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffArguments() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = peg$parsetffTerm();\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s4 = peg$c9;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c10);\n        }\n      }\n\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseWS();\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsetffTerm();\n\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c11(s1, s6);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s4 = peg$c9;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseWS();\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsetffTerm();\n\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c11(s1, s6);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffTerm() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsedefinedTerm();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c302(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffLogicFormula();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c309(s1);\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetfxTuple();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c277(s1);\n        }\n\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefinedTerm() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n\n    if (peg$c313.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c314);\n      }\n    }\n\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n\n      if (peg$c313.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c314);\n        }\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c315(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsedistinctObject();\n    }\n\n    return s0;\n  }\n\n  function peg$parsedistinctObject() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = peg$parsedoubleQuote();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsedoChar();\n\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s3 = peg$c316;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c317);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsedoubleQuote();\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWS();\n\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c318(s1, s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedoChar() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c3);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        if (/^[ -! #-[ \\]-~]/.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c320);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 124) {\n            s4 = peg$c78;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c79);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            if (/^[\\\\]/.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c322);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              if (/^[\"\\\\]/.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c324);\n                }\n              }\n\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c4;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c5);\n                  }\n                }\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseWS();\n\n                  if (s8 !== peg$FAILED) {\n                    s1 = [s1, s2, s3, s4, s5, s6, s7, s8];\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedoubleQuote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = \"\\\"\";\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c326);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffBinaryFormula() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffBinaryAssoc();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c310(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffBinaryNonassoc();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c327(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffBinaryNonassoc() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parsetffUnitFormula();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenonassocConnective();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetffUnitFormula();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c328(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenonassocConnective() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n\n    if (input.substr(peg$currPos, 3) === peg$c128) {\n      s1 = peg$c128;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c129);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c329();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.substr(peg$currPos, 2) === peg$c99) {\n        s1 = peg$c99;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c100);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c330();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 2) === peg$c331) {\n          s1 = peg$c331;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c332);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseWS();\n\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c333();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n\n          if (input.substr(peg$currPos, 3) === peg$c334) {\n            s1 = peg$c334;\n            peg$currPos += 3;\n          } else {\n            s1 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c335);\n            }\n          }\n\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseWS();\n\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c336();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n\n            if (input.substr(peg$currPos, 2) === peg$c337) {\n              s1 = peg$c337;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c338);\n              }\n            }\n\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseWS();\n\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c339();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n\n              if (input.substr(peg$currPos, 2) === peg$c340) {\n                s1 = peg$c340;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c341);\n                }\n              }\n\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseWS();\n\n                if (s2 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c342();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffBinaryAssoc() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffAndFormula();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c343(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffOrFormula();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c344(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffDefinedInfix() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n    s0 = peg$currPos;\n    s1 = peg$parsefunctor();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c2;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetffArguments();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c4;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWS();\n\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 61) {\n                  s7 = peg$c56;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c57);\n                  }\n                }\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseWS();\n\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseconstant();\n\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c345(s1, s4, s9);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffUnitaryTerm();\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s2 = peg$c56;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c57);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseWS();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetffUnitaryTerm();\n\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c346(s1, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffAndFormula() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = peg$parsetffUnitFormula();\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 38) {\n        s4 = peg$c65;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c66);\n        }\n      }\n\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseWS();\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsetffUnitFormula();\n\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c36(s1, s6);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 38) {\n            s4 = peg$c65;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c66);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseWS();\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsetffUnitFormula();\n\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c36(s1, s6);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c347(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffOrFormula() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = peg$parsetffUnitFormula();\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s4 = peg$c78;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c79);\n        }\n      }\n\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseWS();\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsetffUnitFormula();\n\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c36(s1, s6);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 124) {\n            s4 = peg$c78;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c79);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseWS();\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsetffUnitFormula();\n\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c36(s1, s6);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c348(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffAtomTyping() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$parseuntypedAtom();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s2 = peg$c290;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c291);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parsetffTopLevelType();\n\n          if (s5 !== peg$FAILED) {\n            s4 = input.substring(s4, peg$currPos);\n          } else {\n            s4 = s5;\n          }\n\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c349(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetffAtomTyping();\n\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c4;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWS();\n\n              if (s5 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffAtomicType() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = peg$parsetypeFunctor();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c2;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetffTypeArguments();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c4;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWS();\n\n              if (s6 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5, s6];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetffAtomicType();\n\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c4;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWS();\n\n              if (s5 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsedefinedType();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c302(s1);\n        }\n\n        s0 = s1;\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetypeConstant();\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsevariable();\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsetfxTupleType();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffNonAtomicType() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    s0 = peg$currPos;\n    s1 = peg$parseWS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetffMappingType();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseWS();\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c2;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseWS();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetffNonAtomicType();\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWS();\n\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c4;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c5);\n                  }\n                }\n\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseWS();\n\n                  if (s7 !== peg$FAILED) {\n                    s1 = [s1, s2, s3, s4, s5, s6, s7];\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseWS();\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsetf1QuantifiedType();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseWS();\n\n            if (s3 !== peg$FAILED) {\n              s1 = [s1, s2, s3];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffMappingType() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = peg$parsetffUnitaryType();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s2 = \">\";\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c351);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetffAtomicType();\n\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxTupleType() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c286;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c287);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetffTypeList();\n\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c288;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c289);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseWS();\n\n            if (s5 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4, s5];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffTypeList() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = peg$parsetffTopLevelType();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c9;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c10);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetffTypeList();\n\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetffTopLevelType();\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffTypeArguments() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = peg$parsetffAtomicType();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c9;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c10);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetffTypeArguments();\n\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetffAtomicType();\n    }\n\n    return s0;\n  }\n\n  function peg$parsetypeFunctor() {\n    var s0 = peg$parseatomicWord();\n    return s0;\n  }\n\n  function peg$parseatomicWord() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parselowerWord();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c283(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsedistinctObject();\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefinedType() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c352;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c353);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parselowerWord();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c309(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetypeConstant() {\n    var s0 = peg$parsetypeFunctor();\n    return s0;\n  }\n\n  function peg$parsetf1QuantifiedType() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n    s0 = peg$currPos;\n\n    if (input.substr(peg$currPos, 2) === peg$c354) {\n      s1 = peg$c354;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c355);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s3 = peg$c286;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c287);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsetffVariableList();\n\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s6 = peg$c288;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c289);\n                }\n              }\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseWS();\n\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 58) {\n                    s8 = peg$c290;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c291);\n                    }\n                  }\n\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseWS();\n\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsetffMonotype();\n\n                      if (s10 !== peg$FAILED) {\n                        s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffMonotype() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$parsetffAtomicType();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetffMappingType();\n\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c4;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWS();\n\n              if (s5 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsetf1QuantifiedType();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffUnitaryType() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c3);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetffXprodType();\n\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s4 = peg$c4;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c5);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseWS();\n\n            if (s5 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4, s5];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetffXprodType();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsetffAtomicType();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffXprodType() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c3);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetffXprodType();\n\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s4 = peg$c4;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c5);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseWS();\n\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 42) {\n                s6 = peg$c316;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c317);\n                }\n              }\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseWS();\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsetffAtomicType();\n\n                  if (s8 !== peg$FAILED) {\n                    s1 = [s1, s2, s3, s4, s5, s6, s7, s8];\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffAtomicType();\n\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s4 = peg$c316;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c317);\n          }\n        }\n\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseWS();\n\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsetffXprodType();\n\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s4 = peg$c316;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c317);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseWS();\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsetffXprodType();\n\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetffAtomicType();\n\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s2 = peg$c316;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c317);\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseWS();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsetffAtomicType();\n\n              if (s4 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffAtomicFormula() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffPlainAtomic();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c304(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffDefinedAtomic();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c302(s1);\n      }\n\n      s0 = s1;\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetffSystemAtomic();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c356(s1);\n        }\n\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffPlainAtomic() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = peg$parsefunctor();\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c2;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetffArguments();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c4;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWS();\n\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c357(s1, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseconstant();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c358(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefunctor() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parseatomicWord();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c359(s1);\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parsetffDefinedAtomic() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffDefinedPlain();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c302(s1);\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parsetffDefinedPlain() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = peg$parsedefinedConstant();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c302(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedefinedFunctor();\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c2;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseWS();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetffArguments();\n\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c4;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c5);\n                }\n              }\n\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseWS();\n\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c360(s1, s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetfxConditional();\n\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c358(s1);\n        }\n\n        s0 = s1;\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsetfxLet();\n\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309(s1);\n          }\n\n          s0 = s1;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffSystemAtomic() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = peg$parsesystemConstant();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c358(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsesystemFunctor();\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c2;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseWS();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetffArguments();\n\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c4;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c5);\n                }\n              }\n\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseWS();\n\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c360(s1, s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxConditional() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n    s0 = peg$currPos;\n\n    if (input.substr(peg$currPos, 4) === peg$c361) {\n      s1 = peg$c361;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c362);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsetffLogicFormula();\n\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c9;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c10);\n                }\n              }\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseWS();\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsetffTerm();\n\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s9 = peg$c9;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c10);\n                      }\n                    }\n\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseWS();\n\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parsetffTerm();\n\n                        if (s11 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s12 = peg$c4;\n                            peg$currPos++;\n                          } else {\n                            s12 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c5);\n                            }\n                          }\n\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseWS();\n\n                            if (s13 !== peg$FAILED) {\n                              s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13];\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxLet() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n    s0 = peg$currPos;\n\n    if (input.substr(peg$currPos, 4) === peg$c363) {\n      s1 = peg$c363;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c364);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsetfxLetTypes();\n\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c9;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c10);\n                }\n              }\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseWS();\n\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsetfxLetDefns();\n\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s9 = peg$c9;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c10);\n                      }\n                    }\n\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseWS();\n\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parsetffTerm();\n\n                        if (s11 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s12 = peg$c4;\n                            peg$currPos++;\n                          } else {\n                            s12 = peg$FAILED;\n\n                            if (peg$silentFails === 0) {\n                              peg$fail(peg$c5);\n                            }\n                          }\n\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseWS();\n\n                            if (s13 !== peg$FAILED) {\n                              s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13];\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxLetTypes() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$parsetffAtomTyping();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c286;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c287);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetffAtomTypingList();\n\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s4 = peg$c288;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c289);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWS();\n\n              if (s5 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffAtomTypingList() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$parsetffAtomTyping();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffAtomTyping();\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseWS();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetffAtomTypingList();\n\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxLetDefns() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$parsetfxLetDefn();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c302(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c286;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c287);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetfxLetDefnList();\n\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s4 = peg$c288;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c289);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWS();\n\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c309(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxLetDefn() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parsetfxLetLHS();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseassignment();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetffTerm();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c365(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxLetDefnList() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = peg$parsetfxLetDefn();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c366(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetfxLetDefn();\n\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseWS();\n\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetfxLetDefnList();\n\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c367(s1, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxLetLHS() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffPlainAtomic();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c310(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetfxTuple();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c277(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseassignment() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n\n    if (input.substr(peg$currPos, 2) === peg$c368) {\n      s1 = peg$c368;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c369);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c370();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffTopLevelType() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsetffNonAtomicType();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c371(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetffAtomicType();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c372(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetffSubtype() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parseuntypedAtom();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesubtypeSign();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseatom();\n\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseuntypedAtom() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parseconstant();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c358(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsesystemConstant();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c356(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesubtypeSign() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n\n    if (input.substr(peg$currPos, 2) === peg$c373) {\n      s1 = peg$c373;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c374);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesystemFunctor() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parseatomicSystemWord();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c310(s1);\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parseatomicSystemWord() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c352;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c353);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s2 = peg$c352;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c353);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parselowerWord();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseWS();\n\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c375(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselowerWord() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n\n    if (peg$c313.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c314);\n      }\n    }\n\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n\n      if (peg$c313.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c314);\n        }\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWS();\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c310(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefinedFunctor() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c352;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c353);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parselowerWord();\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c376(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedefinedConstant() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsedefinedFunctor();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c377(s1);\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parseconstant() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parseatomicWord();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c315(s1);\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parsesystemConstant() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsesystemFunctor();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c377(s1);\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parseatom() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parseuntypedAtom();\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c303(s1);\n    }\n\n    s0 = s1;\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedefinedConstant();\n\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c302(s1);\n      }\n\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetfxSequent() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$parsetfxTuple();\n\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c101) {\n        s2 = peg$c101;\n        peg$currPos += 3;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c102);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWS();\n\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetfxTuple();\n\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c378(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWS();\n\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetfxSequent();\n\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c4;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWS();\n\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c379(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWS() {\n    var s0, s1;\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parseZs();\n\n    if (s1 === peg$FAILED) {\n      if (peg$c270.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c271);\n        }\n      }\n    }\n\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseZs();\n\n      if (s1 === peg$FAILED) {\n        if (peg$c270.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c271);\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c380);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEmptyList() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$c32;\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c382();\n    }\n\n    s0 = s1;\n    return s0;\n  }\n\n  function peg$parseIdentifier() {\n    var s0, s1, s2, s3, s4;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseIdentifierStart();\n\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      s4 = peg$parseIdentifierPart();\n\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parseIdentifierPart();\n      }\n\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c383);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstantIdentifier() {\n    var s0, s1, s2, s3, s4;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseIdentifierStart();\n\n    if (s2 === peg$FAILED) {\n      s2 = peg$parseUnicodeDigit();\n    }\n\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      s4 = peg$parseIdentifierPart();\n\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parseIdentifierPart();\n      }\n\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c384);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifierStart() {\n    var s0 = peg$parseUnicodeLetter();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseUnicodeMathematicalAlphanumeric();\n\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 36) {\n          s0 = peg$c352;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c353);\n          }\n        }\n\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 95) {\n            s0 = \"_\";\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c386);\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifierPart() {\n    var s0 = peg$parseIdentifierStart();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseUnicodeCombiningMark();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnicodeDigit();\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseUnicodeSubscriptDigit();\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseUnicodeSuperscriptDigit();\n\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 8204) {\n                s0 = \"\\u200C\";\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c388);\n                }\n              }\n\n              if (s0 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 8205) {\n                  s0 = \"\\u200D\";\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c390);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeMathematicalAlphanumeric() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n\n    if (/^[\\uD835]/.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c392);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      if (/^[\\uDC00-\\uDFFF]/.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c394);\n        }\n      }\n\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      if (/^[\\u2012\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2128\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u213C-\\u2140\\u2145-\\u2149]/.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c396);\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeSubscriptDigit() {\n    var s0;\n\n    if (/^[\\u2080-\\u2089]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c398);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeSuperscriptDigit() {\n    var s0;\n\n    if (/^[\\u2070\\xB9\\xB2\\xB3\\u2074-\\u2079]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c400);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeLetter() {\n    var s0;\n    peg$silentFails++;\n    s0 = peg$parseLu();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseLl();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseLt();\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseLm();\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseLo();\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseNl();\n            }\n          }\n        }\n      }\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c401);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeCombiningMark() {\n    var s0;\n    peg$silentFails++;\n    s0 = peg$parseMn();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseMc();\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c402);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeDigit() {\n    var s0;\n    peg$silentFails++;\n    s0 = peg$parseNd();\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c403);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLl() {\n    var s0;\n\n    if (/^[a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C-\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA-\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9-\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC-\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF-\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F-\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0-\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB-\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE-\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6-\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FC7\\u1FD0-\\u1FD3\\u1FD6-\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6-\\u1FF7\\u210A\\u210E-\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C-\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65-\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73-\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3-\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c405);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLm() {\n    var s0;\n\n    if (/^[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5-\\u06E6\\u07F4-\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C-\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D-\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C-\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8-\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3-\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E-\\uFF9F]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c407);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLo() {\n    var s0;\n\n    if (/^[\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0CF1-\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5-\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A-\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c409);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLt() {\n    var s0;\n\n    if (/^[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c411);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLu() {\n    var s0;\n\n    if (/^[A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017B\\u017D\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019C-\\u019D\\u019F-\\u01A0\\u01A2\\u01A4\\u01A6-\\u01A7\\u01A9\\u01AC\\u01AE-\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7-\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A-\\u023B\\u023D-\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9-\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0-\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E-\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D-\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c413);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMc() {\n    var s0;\n\n    if (/^[\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E-\\u094F\\u0982-\\u0983\\u09BE-\\u09C0\\u09C7-\\u09C8\\u09CB-\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB-\\u0ACC\\u0B02-\\u0B03\\u0B3E\\u0B40\\u0B47-\\u0B48\\u0B4B-\\u0B4C\\u0B57\\u0BBE-\\u0BBF\\u0BC1-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82-\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7-\\u0CC8\\u0CCA-\\u0CCB\\u0CD5-\\u0CD6\\u0D02-\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82-\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2-\\u0DF3\\u0F3E-\\u0F3F\\u0F7F\\u102B-\\u102C\\u1031\\u1038\\u103B-\\u103C\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083-\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7-\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930-\\u1931\\u1933-\\u1938\\u1A19-\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63-\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B44\\u1B82\\u1BA1\\u1BA6-\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2-\\u1BF3\\u1C24-\\u1C2B\\u1C34-\\u1C35\\u1CE1\\u1CF2-\\u1CF3\\u302E-\\u302F\\uA823-\\uA824\\uA827\\uA880-\\uA881\\uA8B4-\\uA8C3\\uA952-\\uA953\\uA983\\uA9B4-\\uA9B5\\uA9BA-\\uA9BB\\uA9BD-\\uA9C0\\uAA2F-\\uAA30\\uAA33-\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE-\\uAAEF\\uAAF5\\uABE3-\\uABE4\\uABE6-\\uABE7\\uABE9-\\uABEA\\uABEC]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c415);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMn() {\n    var s0;\n\n    if (/^[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4-\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7-\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2-\\u09E3\\u0A01-\\u0A02\\u0A3C\\u0A41-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70-\\u0A71\\u0A75\\u0A81-\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7-\\u0AC8\\u0ACD\\u0AE2-\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62-\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55-\\u0C56\\u0C62-\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC-\\u0CCD\\u0CE2-\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62-\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB-\\u0EBC\\u0EC8-\\u0ECD\\u0F18-\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86-\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039-\\u103A\\u103D-\\u103E\\u1058-\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17B4-\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193B\\u1A17-\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80-\\u1B81\\u1BA2-\\u1BA5\\u1BA8-\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8-\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8-\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099-\\u309A\\uA66F\\uA674-\\uA67D\\uA69E-\\uA69F\\uA6F0-\\uA6F1\\uA802\\uA806\\uA80B\\uA825-\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31-\\uAA32\\uAA35-\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7-\\uAAB8\\uAABE-\\uAABF\\uAAC1\\uAAEC-\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c417);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNd() {\n    var s0;\n\n    if (/^[0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c419);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNl() {\n    var s0;\n\n    if (/^[\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c421);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseZs() {\n    var s0;\n\n    if (/^[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c425);\n      }\n    }\n\n    return s0;\n  }\n  /* eslint-disable */\n\n\n  const {\n    startRule,\n    language,\n    factories\n  } = options;\n  const ee = {\n    expected,\n    error\n  };\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};","\"use strict\";\n\nconst Term = 'Term';\nconst FormulaStrict = 'FormulaStrict';\nconst FormulaWithPrecedence = 'FormulaWithPrecedence';\nconst Clause = 'Clause';\nconst Constants = 'Constants';\nconst Predicates = 'Predicates';\nconst Functions = 'Functions';\nconst Domain = 'Domain';\nconst Tuples = 'Tuples';\nconst Valuation = 'Valuation';\nconst Substitution = 'Substitution';\nconst Tff = 'tff';\nmodule.exports = {\n  Term,\n  FormulaStrict,\n  FormulaWithPrecedence,\n  Clause,\n  Constants,\n  Predicates,\n  Functions,\n  Domain,\n  Tuples,\n  Valuation,\n  Substitution,\n  Tff,\n  'default': [Term, FormulaStrict, FormulaWithPrecedence, Clause, Constants, Predicates, Functions, Domain, Tuples, Valuation, Substitution, Tff]\n};","export class BinaryFormula {\n  constructor(lhs, rhs) {\n    this.lhs = lhs;\n    this.rhs = rhs;\n  }\n\n  getFreeVariables() {\n    let a = addAll(new Set(), this.lhs.getFreeVariables());\n    return addAll(a, this.rhs.getFreeVariables())\n  }\n}\n\nexport class QuantifiedFormula {\n  constructor(originalSymbol, subf) {\n    this.originalSymbol = originalSymbol;\n    this.subf = subf;\n  }\n  getFreeVariables() {\n    const res = this.subf.getFreeVariables()\n    res.delete(this.originalSymbol);\n    return res;\n  }\n}\n\nexport class Variable {\n  constructor(originalSymbol) {\n    this.originalSymbol = originalSymbol;\n  }\n\n  getFreeVariables(){\n    return new Set([this.originalSymbol]);\n\n  }\n}\n\nexport class Constant {\n  constructor(originalSymbol) {\n    this.originalSymbol = originalSymbol;\n  }\n\n  getFreeVariables(){\n    return new Set();\n  }\n}\n\nexport class FunctionApplication {\n  constructor(originalSymbol, args) {\n    this.originalSymbol = originalSymbol;\n    this.args = args;\n  }\n  getFreeVariables(){\n    return this.args.reduce(\n        (fvs, arg) => addAll(fvs, arg.getFreeVariables()),\n        new Set()\n    );\n  }\n}\n\nexport class PredicateAtom {\n  constructor(originalSymbol, args) {\n    this.originalSymbol = originalSymbol;\n    this.args = args;\n  }\n  getFreeVariables() {\n    return this.args.reduce(\n        (fvs, arg) => addAll(fvs, arg.getFreeVariables()),\n        new Set()\n    );\n  }\n}\n\nexport class EqualityAtom extends BinaryFormula{\n}\n\nexport class Negation {\n  constructor(subf) {\n    this.subf = subf;\n  }\n\n  getFreeVariables(){\n    return this.subf.getFreeVariables();\n  }\n}\n\nexport class Conjunction extends BinaryFormula{\n}\n\nexport class Disjunction extends BinaryFormula{\n}\n\nexport class Implication extends BinaryFormula{\n}\n\nexport class Equivalence extends BinaryFormula{\n}\n\nexport class ExistentialQuant extends QuantifiedFormula{\n}\n\nexport class UniversalQuant extends QuantifiedFormula{\n}\n\nfunction addAll(a, b) {\n  b.forEach((elem) => a.add(elem));\n  return a;\n}\n","import {\n  Conjunction, Constant,\n  Disjunction, EqualityAtom,\n  Equivalence,\n  ExistentialQuant,\n  FunctionApplication,\n  Implication, Negation, PredicateAtom, UniversalQuant,\n  Variable\n} from \"./formula_classes\";\n\nexport const arrayToArityMap = (symbols) => {\n  let arityMap = new Map();\n  for (let x of symbols) {\n    if (!arityMap.has(x.name)) {\n      arityMap.set(x.name, x.arity);\n    }\n  }\n  return arityMap;\n}\n\nexport const parseLanguageSubset = (input, parser) => {\n  try {\n    let result = parser(input);\n    return {\n      array: result,\n      error: null\n    };\n  } catch (error) {\n    return {\n      array: [],\n      error: error\n    };\n  }\n}\n\nconst checkArity = (symbol, args, arityMap, {expected}) => {\n  const a = arityMap.get(symbol);\n  if (args.length !== a) {\n    expected(`${a} argument${(a === 1 ? '' : 's')} to ${symbol}`);\n  }\n}\n\nexport const parseFormalization = (input, constants, predicates, functions, parser) => {\n  const nonLogicalSymbols = new Set([\n    ...constants,\n    ...predicates.keys(),\n    ...functions.keys()\n  ]);\n\n  const language = {\n    isConstant: (x) => constants.has(x),\n    isPredicate: (x) => predicates.has(x),\n    isFunction: (x) => functions.has(x),\n    isVariable: (x) => !nonLogicalSymbols.has(x)\n  };\n\n  const factories = {\n    functionApplication: (symbol, args, ee) => {\n      checkArity(symbol, args, functions, ee);\n      return new FunctionApplication(symbol, args);\n    },\n    predicateAtom: (symbol, args, ee) => {\n      checkArity(symbol, args, predicates, ee);\n      return new PredicateAtom(symbol, args);\n    },\n    variable: (v, _) =>  new Variable(v , v),\n    constant: (c, _) => new Constant(c, c),\n    equalityAtom: (lhs, rhs, _) => new EqualityAtom(lhs, rhs),\n    negation: (f, _) => new Negation(f),\n    conjunction: (lhs, rhs, _) => new Conjunction(lhs, rhs),\n    disjunction: (lhs, rhs, _) => new Disjunction(lhs, rhs),\n    implication: (lhs, rhs, _) => new Implication(lhs, rhs),\n    equivalence: (lhs, rhs, _) => new Equivalence(lhs, rhs),\n    existentialQuant: (v, f, _) => new ExistentialQuant(v, f),\n    universalQuant: (v, f, _) => new UniversalQuant(v, f),\n  };\n\n  try {\n    let a = parser(input, language, factories);\n    a = a.getFreeVariables();\n    if(a.size !== 0){\n      let res = \"\";\n      for(let element of a){\n        res += element + \" \";\n      }\n      throw {\"location\" : {\"start\" : { \"column\": 0,\n                                      \"line\": 0,\n                                      \"offset\": 0\n                                      },\n                          \"end\" : { \"column\": 0,\n                                    \"line\": 0,\n                                    \"offset\": 0\n                                  }\n                           }  ,\n              \"message\" : \"Expected  existential quantifier or universal quantifier but following free \" + (a.size === 1? \"variable \" :  \"variables \") + res +  \"found.\"};\n    }\n    return null;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport function getStringDomainAndPredicates(symbols, constants, language){\n  let d = \"𝒟 = {\";\n  let i = \"\";\n  let poc = 0;\n  if(symbols === ''){\n    return ['',''];\n  }\n  for (let [key, value] of Object.entries(constants)){\n    if(language.includes(key)) {\n      i += \"𝑖(\" + key + \") = \" + value + \"\\n\";\n    }\n    if( value <= poc){\n      continue;\n    }\n    d += value + \", \";\n    poc++;\n  }\n  i += \"\\n\";\n  d = d.slice(0, d.length -2 );\n  d += \"}\\n\";\n\n  i += stringForPredicateAndFunctions(symbols);\n  return [d, i];\n}\n\nfunction stringForPredicateAndFunctions(name){\n  let p = \"\";\n  for (let [key, value] of Object.entries(name)) {\n    // eslint-disable-next-line no-useless-concat\n    p += \"𝑖(\" + key + \") = \" + \"{\";\n    if (value[value.length - 1] === undefined) {\n      p += \"}\\n\";\n      continue;\n    }\n    for (let j = 0; j < value.length - 1; j++) {\n      if (value[j] === undefined) {\n        continue;\n      }\n      if(value[j].length === 1){\n        p += value[j] + \", \";\n      }\n      else{\n        p += \"(\" + value[j] + \"), \";\n      }\n\n    }\n    if(value[value.length - 1].length === 1){\n      p += value[value.length - 1] + \"}\\n\";\n    }\n    else{\n      p += \"(\" +  value[value.length - 1] + \")}\\n\";\n    }\n\n  }\n\n  return p;\n}","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {\n  parseConstants,\n  parsePredicates,\n  parseFunctions,\n  parseFormulaWithPrecedence\n} from '@fmfi-uk-1-ain-412/js-fol-parser';\nimport { fetchData } from './fetchData';\nimport {\n  arrayToArityMap,\n  parseLanguageSubset,\n  parseFormalization\n} from './helpers';\n\n\n/* async actions */\n\nexport const addNewExercise = createAsyncThunk(\n  'addExercise/addNewExercise',\n  async (_, { getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await fetchData(\n        '/api/exercises', 'POST', exercise\n      );\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const addExerciseSlice = createSlice({\n  name: 'addExercise',\n  initialState: {\n    title: '',\n    description: '',\n    constants: '',\n    predicates: '',\n    functions: '',\n    constraint: '',\n    propositions: [{\n      proposition: '',\n      formalizations: [''],\n      constraints: ['']\n    }],\n\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    updateExerciseTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    updateDescription: (state, action) => {\n      state.description = action.payload;\n    },\n    updateConstants: (state, action) => {\n      state.constants = action.payload;\n    },\n    updatePredicates: (state, action) => {\n      state.predicates = action.payload;\n    },\n    updateFunctions: (state, action) => {\n      state.functions = action.payload;\n    },\n    updateConstraint: (state, action) => {\n      state.constraint = action.payload;\n    },\n    updateInformalValue: {\n      reducer: (state, action) => {\n        const { value, i } = action.payload;\n        state.propositions[i].proposition = value;\n      },\n      prepare: (value, i) => {\n        return { payload: { value, i } };\n      }\n    },\n    updateFormalization: {\n      reducer: (state, action) => {\n        const { value, i, j } = action.payload;\n        state.propositions[i].formalizations[j] = value;\n      },\n      prepare: (value, i, j) => {\n        return { payload: { value, i, j } };\n      }\n    },\n    addNewProposition: (state) => {\n      state.propositions.push({\n        proposition: '',\n        formalizations: [''],\n        constraints: ['']\n      });\n    },\n    addNewFormalization: (state, action) => {\n      const i = action.payload;\n      state.propositions[i].formalizations.push('');\n      state.propositions[i].constraints.push('');\n    },\n    removeProposition: (state, action) => {\n      const i = action.payload;\n      state.propositions.splice(i, 1);\n    },\n    removeFormalization: {\n      reducer: (state, action) => {\n        const { i, j } = action.payload;\n        state.propositions[i].formalizations.splice(j, 1);\n        state.propositions[i].constraints.splice(j, 1);\n      },\n      prepare: (i, j) => {\n        return { payload: { i, j } };\n      }\n    },\n    updateConstraints: {\n      reducer: (state, action) => {\n        const { value, i, j } = action.payload;\n        state.propositions[i].constraints[j] = value;\n      },\n      prepare: (value, i, j) => {\n        return { payload: { value, i, j} };\n      }\n    },\n  },\n  extraReducers: {\n    [addNewExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [addNewExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n    },\n    [addNewExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\n\n\n/* export actions */\nexport const {\n  updateExerciseTitle,\n  updateDescription,\n  updateConstants,\n  updatePredicates,\n  updateFunctions,\n  updateInformalValue,\n  updateFormalization,\n  addNewProposition,\n  addNewFormalization,\n  removeProposition,\n  removeFormalization,\n  updateConstraints,\n  updateConstraint\n} = addExerciseSlice.actions;\n\n\n/* definition of helper functions used in selectors */\n\nfunction checkForDuplicates(values, name) {\n  let found = new Set();\n  for (let x of values) {\n    if (found.has(x)) {\n      return `Found duplicate symbol: '${x}' in ${name}`;\n    } else {\n      found.add(x);\n    }\n  }\n\n  return null;\n}\n\nfunction checkForClashes(constants, predicates, functions) {\n  for (let x of constants) {\n    if (predicates.has(x)) {\n      return `Found clash in language definition: '${x}' in constants and predicates`;\n    }\n    if (functions.has(x)) {\n      return `Found clash in language definition: '${x}' in constants and functions`;\n    }\n  }\n\n  for (let x of predicates.keys()) {\n    if (functions.has(x)) {\n      return `Found clash in language definition: '${x}' in predicates and functions`;\n    }\n  }\n\n  return null;\n}\n\n\n/* selectors */\n\nexport const selectExerciseTitle = (state) => {\n  return {\n    value: state.addExercise.title\n  };\n};\n\nexport const selectDescription = (state) => {\n  return {\n    value: state.addExercise.description\n  };\n};\n\nexport const selectConstantsParsed = createSelector(\n  [ state => state.addExercise.constants ],\n  (value) => {\n    let result = parseLanguageSubset(value, parseConstants);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectPredicatesParsed = createSelector(\n  [ state => state.addExercise.predicates ],\n  (value) => {\n    let result = parseLanguageSubset(value, parsePredicates);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectFunctionsParsed = createSelector(\n  [ state => state.addExercise.functions ],\n  (value) => {\n    let result = parseLanguageSubset(value, parseFunctions);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectLanguage = createSelector(\n  [\n    selectConstantsParsed,\n    selectPredicatesParsed,\n    selectFunctionsParsed\n  ],\n  (constantsParsed, predicatesParsed, functionsParsed) => {\n    let constants = new Set(constantsParsed.array);\n    let predicates = arrayToArityMap(predicatesParsed.array);\n    let functions = arrayToArityMap(functionsParsed.array);\n\n    let containsErrors = constantsParsed.error\n      || predicatesParsed.error\n      || functionsParsed.error;\n    let containsDuplicates = checkForDuplicates(constantsParsed.array, \"constants\")\n      || checkForDuplicates(predicatesParsed.array.map(x => x.name), \"predicates\")\n      || checkForDuplicates(functionsParsed.array.map(x => x.name), \"functions\");\n    \n    let errorMessage = null;\n    if (containsErrors) {\n      errorMessage = \"Language definition contains errors\";\n    } else if (containsDuplicates) {\n      errorMessage = containsDuplicates;\n    } else {\n      errorMessage = checkForClashes(constants, predicates, functions);\n    }\n\n    return { constants, predicates, functions, errorMessage };\n  }\n);\n\nexport const selectPropositions = (state) => {\n  return state.addExercise.propositions;\n};\n\nexport const selectFormalizations = (state, i) => {\n  return state.addExercise.propositions[i].formalizations;\n};\n\nexport const selectInformalValue = (state, i) => {\n  return state.addExercise.propositions[i].proposition;\n};\n\nexport const selectFormalization = createSelector(\n  [\n    (state, i, j) => state.addExercise.propositions[i].formalizations[j],\n    (state, i, j) => selectLanguage(state)\n  ],\n  (value, language) => {\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\nexport const selectConstraints = createSelector(\n  [\n    (state, i, j) => state.addExercise.propositions[i].constraints[j],\n    (state, i, j) => selectLanguage(state)\n  ],\n  (value, language) => {\n    if(value === ''){\n      return { value, error: \"\"};\n    }\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\nexport const selectConstraint = createSelector(\n  [\n    (state) => state.addExercise.constraint,\n    (state) => selectLanguage(state)\n  ],\n  (value, language) => {\n    if(value === ''){\n      return { value, error: \"\"};\n    }\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\n\nconst selectExercise = (state) => {\n  let language = selectLanguage(state);\n  if (language.errorMessage || selectExerciseTitle(state).value === \"\") {\n    return null;\n  }\n\n  let propositions = selectPropositions(state);\n  for (let i = 0; i < propositions.length; i++) {\n    if (propositions[i].proposition === \"\") {\n      return null;\n    }\n    let formalizations = propositions[i].formalizations;\n    for (let j = 0; j < formalizations.length; j++) {\n      let formalization = selectFormalization(state, i, j);\n      if (formalization.error) {\n        return null;\n      }\n      let constraint = selectConstraints(state, i, j);\n      if (constraint.error) {\n        return null;\n      }\n    }\n  }\n  \n  return {\n    title: state.addExercise.title,\n    description: state.addExercise.description,\n    constants: state.addExercise.constants,\n    predicates: state.addExercise.predicates,\n    functions: state.addExercise.functions,\n    constraint: state.addExercise.constraint,\n    propositions: state.addExercise.propositions,\n  };\n};\n\nexport const checkExercise = (state) => {\n  let exercise = selectExercise(state);\n  return !exercise;\n};\n\n\nexport default addExerciseSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport { fetchData } from './fetchData';\n\n\n/* async actions */\n\nexport const fetchAllExercises = createAsyncThunk(\n  'exercises/fetchAllExercises',\n  async (_, { rejectWithValue }) => {\n    try {\n      let response = await fetchData('/api/exercises', 'GET');\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const exercisesSlice = createSlice({\n  name: 'exercises',\n  initialState: {\n    exercises: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllExercises.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllExercises.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.exercises = action.payload;\n    },\n    [fetchAllExercises.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\n\n\n/* selectors */\n\nexport const selectExercises = (state) => {\n  return state.exercises.exercises;\n};\n\nexport const selectPropositions = (state) => {\n  return state.exercises;\n};\n\nexport const selectStatus = (state) => {\n  return state.exercises.status;\n};\n\nexport const selectError = (state) => {\n  return state.exercises.error;\n};\n\n\nexport default exercisesSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport { fetchData } from './fetchData';\n\n\n/* async actions */\n\nexport const fetchAllUsersToExercise = createAsyncThunk(\n    'exercises/fetchAllUsersToExercise',\n    async (exercise_id, { rejectWithValue }) => {\n      try {\n        let response = await fetchData(`/api/exercises/progress/${exercise_id}`, 'GET');\n        return response;\n      } catch (err) {\n        return rejectWithValue(err.message);\n      }\n    }\n);\nexport const fetchUsersSolutions = createAsyncThunk(\n    'exercises/fetchUsersSolutions',\n    async ({exercise_id, user_name}, { rejectWithValue }) => {\n      try {\n        let response = await fetchData(`/api/exercises/progress/user/${user_name}/${exercise_id}`, 'GET');\n        return response;\n      } catch (err) {\n        return rejectWithValue(err.message);\n      }\n    }\n);\n\n\n/* slice */\nexport const progressPropositionsSlice = createSlice({\n  name: 'users',\n  initialState: {\n    users: [],\n    status: 'idle',\n    error: null,\n    solutions: [],\n    exercise_id: null,\n    user: '',\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllUsersToExercise.pending]: (state, action) => {\n      state.status = 'loading';\n      state.exercise_id = action.meta.arg\n    },\n    [fetchAllUsersToExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = action.payload;\n    },\n    [fetchAllUsersToExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchUsersSolutions.pending]: (state, action) => {\n      state.status = 'loading';\n      state.user = action.meta.arg.user_name;\n    },\n    [fetchUsersSolutions.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.solutions = action.payload;\n    },\n    [fetchUsersSolutions.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\n\n\n/* selectors */\n\nexport const selectUsers = (state) => {\n  return state.propositions.users;\n};\n\nexport const selectProposition = (state) => {\n  if(state.propositions.users[0] !== undefined){\n    return state.propositions.users[0].proposition_id;\n  }\n  return null;\n};\n\nexport const selectExerciseId = (state) => {\n  return state.propositions.exercise_id;\n};\n\nexport const selectExerciseTitle = (state) => {\n  for(let i = 0; i < state.exercises.exercises.length; i++){\n    if(state.exercises.exercises[i].exercise_id === state.propositions.exercise_id){\n      return state.exercises.exercises[i].title\n    }\n  }\n  return null;\n};\n\n\nexport const selectUsersSolution = (state) => {\n  return state.propositions.solutions;\n};\nexport const selectUserName = (state) => {\n  return state.propositions.user;\n};\n\nexport const selectStatus = (state) => {\n  return state.propositions.status;\n};\n\nexport const selectError = (state) => {\n  return state.propositions.status;\n};\n\n\nexport default progressPropositionsSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {\n  parseConstants,\n  parsePredicates,\n  parseFunctions,\n  parseFormulaWithPrecedence\n} from '@fmfi-uk-1-ain-412/js-fol-parser';\nimport { fetchData } from './fetchData';\nimport {\n  arrayToArityMap,\n  parseFormalization\n} from './helpers';\n\n\n/* async actions */\n\nexport const fetchExercise = createAsyncThunk(\n  'solveExercise/fetchExercise',\n  async (exercise_id, { rejectWithValue }) => {\n    try {\n      let response = await fetchData(\n        `/api/exercises/${exercise_id}`, 'GET'\n      );\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const evaluate = createAsyncThunk(\n  'solveExercise/evaluate',\n  async ({ exercise_id, proposition_id, solution, user }, { rejectWithValue }) => {\n    try {\n      let response = await fetchData(\n        `/api/exercises/${exercise_id}/${proposition_id}`, 'POST',\n        { solution, user}\n      );\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const solveExerciseSlice = createSlice({\n  name: 'solveExercise',\n  initialState: {\n    exercise: null,\n    status: 'idle',\n    error: null,\n\n    constants: [],\n    predicates: [],\n    functions: [],\n\n    solutions: {}\n  },\n  reducers: {\n    update: {\n      reducer: (state, action) => {\n        const { value, id } = action.payload;\n        state.solutions[id].solution = value;\n      },\n      prepare: (value, id) => {\n        return { payload: { value, id } };\n      }\n    }\n  },\n  extraReducers: {\n    [fetchExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.exercise = action.payload;\n      state.constants = parseConstants(state.exercise.constants);\n      state.predicates = parsePredicates(state.exercise.predicates);\n      state.functions = parseFunctions(state.exercise.functions);\n      for (let p of state.exercise.propositions) {\n        state.solutions[p.proposition_id] = {\n          solution: '',\n          evaluation: null,\n\n          status: 'idle',\n          error: null,\n        };\n      }\n    },\n    [fetchExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n\n    [evaluate.pending]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'loading';\n    },\n    [evaluate.fulfilled]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let evaluation = action.payload;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'succeeded';\n      solution.evaluation = evaluation;\n    },\n    [evaluate.rejected]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let { error } = action.payload;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'failed';\n      solution.error = error;\n    }\n  }\n});\n\n\n/* export actions */\nexport const {\n  update\n} = solveExerciseSlice.actions;\n\n\n/* selectors */\n\nexport const selectExercise = (state) => {\n  return state.solveExercise.exercise;\n};\n\nexport const selectSolution = (state, id) => {\n  const value = state.solveExercise.solutions[id].solution;\n  let error = parseFormalization(\n    value, new Set(state.solveExercise.constants),\n    arrayToArityMap(state.solveExercise.predicates),\n    arrayToArityMap(state.solveExercise.functions),\n    parseFormulaWithPrecedence\n  );\n  return { value, error};\n};\n\nexport const selectStatus = (state) => {\n  return state.solveExercise.status;\n};\n\nexport const selectError = (state) => {\n  return state.solveExercise.error;\n};\n\nexport const selectEvaluation = (state, id) => {\n  return state.solveExercise.solutions[id].evaluation;\n};\n\nexport const selectEvalStatus = (state, id) => {\n  return state.solveExercise.solutions[id].status;\n};\n\nexport const selectEvalError = (state, id) => {\n  return state.solveExercise.solutions[id].error;\n};\n\n\nexport default solveExerciseSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {fetchData} from \"./fetchData\";\n\n/* async actions */\n\nexport const fetchAllUsers = createAsyncThunk(\n  'users',\n  async (_, { rejectWithValue }) => {\n    try {\n      let response = await fetchData(\n          `/api/exercises/allUsers`, 'GET'\n      );\n    return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const saveAdmins = createAsyncThunk(\n  'admins',\n  async (admins, { rejectWithValue }) => {\n    try {\n      let response = await fetchData(\n          `/api/exercises/allUsers`, 'POST', admins\n      );\n\n     return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n/* slice */\nexport const adminsSlice = createSlice({\n  name: 'admins',\n  initialState: {\n    users: [''],\n    \n    status: 'idle',\n    error: null,\n\n    changed: {}\n  },\n  reducers: {\n    addChanged: (state, action) => {\n      state.changed[action.payload] = !state.changed[action.payload] ;\n    },\n    },\n  extraReducers: {\n    [fetchAllUsers.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllUsers.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = action.payload\n      for(let i = 0; i < state.users.length; i++){\n        state.changed[state.users[i].user_name] = state.users[i].is_admin;\n      }\n    },\n    [fetchAllUsers.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'There are no users';\n    } ,\n    [saveAdmins.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [saveAdmins.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = [];\n      for(let [key, value] of Object.entries(action.payload)){\n        state.users.push({\"user_name\": key, \"is_admin\": value});\n      }\n    },\n    [saveAdmins.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'Unsuccessful saving admins';\n    } ,\n  }\n});\n\nexport const selectAllUsers = (state) => {\n  return state.allUsers.users;\n};\n\nexport const selectStatus = (state) => {\n  return state.allUsers.status;\n};\n\nexport const selectError = (state) => {\n  return state.allUsers.error;\n};\n\nexport const selectChangedAdmins = (state) => {\n  return state.allUsers.changed;\n};\n\n/* export actions */\nexport const {\n  addChanged\n} = adminsSlice.actions;\n\nexport default adminsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport addExerciseReducer from './addExerciseSlice';\nimport exercisesReducer from './exercisesSlice';\nimport progressPropositionsReducer from './progressPropositionsSlice';\nimport solveExerciseReducer from './solveExerciseSlice';\nimport userReducer from './userSlice';\nimport adminsReducer from './adminsSlice';\n\nexport default configureStore({\n  reducer: {\n    addExercise: addExerciseReducer,\n    exercises: exercisesReducer,\n    propositions: progressPropositionsReducer,\n    allUsers: adminsReducer,\n    solveExercise: solveExerciseReducer,\n    user: userReducer\n  }\n});\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nfunction ProtectedRoute({ isLoggedIn, component: Component, location, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isLoggedIn) {\n          return <Component />;\n        } else {\n          return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React from 'react';\nimport { Form, Button, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  updateUsername, updatePassword, logIn, logInByGithub\n} from '../../redux/userSlice';\nimport {CLIENT_ID, REDIRECT} from \"../../config\";\n\n\nfunction LoginForm({\n  usernameValue, passwordValue, updateUsername, updatePassword,\n  location, isLoggedIn, status, error, logIn, logInByGithub\n}) {\n\n  if (status === 'loading') {\n    return <Spinner animation=\"border\" variant=\"primary\" />;\n  }\n  if(window.location.href.match(\"code\")){\n      let code = window.location.href.split(\"code=\")[1];\n      logInByGithub({code: code});\n      return <Redirect to=\"/\" />\n  }\n\n  if (isLoggedIn) {\n    if (location.state && location.state.from && location.state.from.pathname) {\n      return <Redirect to={location.state.from.pathname} />\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  } else {\n\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Label>\n            Username\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            value={usernameValue}\n            onChange={(e) => updateUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            Password\n          </Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={passwordValue}\n            onChange={(e) => updatePassword(e.target.value)}\n          />\n          <Form.Text className=\"text-danger\">\n            { error }\n          </Form.Text>\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            logIn({ username: usernameValue, password: passwordValue });\n          }}\n        >\n          Log in\n        </Button>\n        <Button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n              let url = \"https://github.com/login/oauth/authorize?client_id=\" + CLIENT_ID + \"&redirect_uri=\" + REDIRECT +\"&scope=read:user\"\n              window.location.replace(url);\n          }}\n        >\n          Log in with Github\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    usernameValue: state.user.usernameValue,\n    passwordValue: state.user.passwordValue,\n    isLoggedIn: state.user.isLoggedIn,\n    status: state.user.status,\n    error: state.user.error\n  };\n};\n\nconst mapDispatchToProps = { updateUsername, updatePassword, logIn, logInByGithub };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import React, { useEffect } from 'react';\nimport { ListGroup, Spinner, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchAllExercises,\n  selectExercises,\n  selectStatus,\n  selectError\n} from '../../redux/exercisesSlice';\nimport {\n  fetchExercise\n} from '../../redux/solveExerciseSlice';\n\n\nfunction ExerciseList({ exercises, status, error, fetchAllExercises, fetchExercise }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllExercises();\n    }\n  }, [status, fetchAllExercises]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let exercises_list = exercises.map((x) => (\n      <ListGroup.Item\n        as={Link} to={`/solve/${x.exercise_id}`} key={x.exercise_id}\n        variant=\"primary\" action\n        onClick={() => fetchExercise(x.exercise_id)}\n      >\n        { x.title }\n      </ListGroup.Item>\n    ));\n    content = <ListGroup>{ exercises_list }</ListGroup>;\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Exercises:</h2>\n      { content }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercises: selectExercises(state),\n    status: selectStatus(state),\n    error: selectError(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllExercises, fetchExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseList);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n\nfunction SyntaxError({ value, error }) {\n  if (!error) {\n    return null;\n  }\n\n  const start = error.location.start.offset;\n  const end = error.location.end.offset;\n\n  const str_1 = value.substring(0, start);\n  const str_2 = value.substring(start, end);\n  const str_3 = value.substring(end);\n\n  const str = value === \"\" ?\n    null : (\n      <div>\n        {str_1}\n        <u className=\"bg-warning\">\n          {str_2}\n        </u>\n        {str_3}\n      </div>\n    );\n\n  return (\n    <Form.Text className=\"mb-3\">\n      {str}\n      <div className=\"text-danger\">\n        {error.message}\n      </div>\n    </Form.Text>\n  );\n}\n\nexport default SyntaxError;\n","import React from 'react';\nimport { Spinner, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectEvaluation,\n  selectEvalStatus,\n  selectEvalError\n} from '../../redux/solveExerciseSlice';\nimport {\n    getStringDomainAndPredicates,\n} from '../../redux/helpers';\n\n\nfunction Evaluation({ evaluation, status, error }) {\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    content = getMessage(evaluation);\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    evaluation: selectEvaluation(state, ownProps.proposition_id),\n    status: selectEvalStatus(state, ownProps.proposition_id),\n    error: selectEvalError(state, ownProps.proposition_id)\n  };\n};\n\nexport default connect(mapStateToProps)(Evaluation);\n\n\nconst getMessage = (evaluation) => {\n  if (evaluation.solutionToFormalization === 'OK'\n      && evaluation.formalizationToSolution === 'OK') {\n        return (\n          <Alert variant=\"success\">\n            <b>Riešenie je správne.</b>\n          </Alert>\n        );\n  } else if (evaluation.solutionToFormalization === 'TE'\n      || evaluation.formalizationToSolution === 'TE' || evaluation.solutionToFormalization === 'ME'\n      || evaluation.formalizationToSolution === 'ME') {\n        return (\n          <Alert variant=\"warning\">\n           <p> Dokazovaču sa nepodarilo zistiť,\n            či je vaše riešenie správne alebo nesprávne.\n               Na správnosť vášho riešenia sa spýtajte.</p>\n          </Alert>\n        );\n  } else {\n      let pom = getStringDomainAndPredicates(evaluation.symbolsFormalizationToSolution, evaluation.domainFormalizationToSolution,\n           evaluation.languageContants);\n      let domainFormToSol = pom[0];\n      let symbolsFormToSol = pom[1];\n\n      pom = getStringDomainAndPredicates(evaluation.symbolsSolutionToFormalization, evaluation.domainSolutionToFormalization,\n           evaluation.languageContants);\n      let domainSolToForm = pom[0];\n      let symbolsSolToForm = pom[1];\n\n      if (evaluation.solutionToFormalization === 'OK'\n          && evaluation.formalizationToSolution === 'WA') {\n          if (evaluation.iFormalizationSolution !== 'null') {\n              return (\n                  <Alert variant=\"danger\">\n                      <b>Riešenie je nesprávne.</b>\n                      <p>Vieme nájsť konkrétnu štruktúru,\n                          v ktorej je hľadaná správna formalizácia pravdivá,\n                          ale vaša formalizácia je nepravdivá.</p>\n\n                      <p>{evaluation.m1}</p>\n                      <p>{domainFormToSol}</p>\n                      {symbolsFormToSol.split(\"\\n\").map((i,key) => {\n                          return <div className=\"p\" key={key}>{i}</div>;\n                      })}\n\n\n                      <br/>\n\n\n                  </Alert>\n              );\n          } else {\n              return (\n                  <Alert variant=\"danger\">\n                      <b>Riešenie je nesprávne.</b>\n                      <p>Nepodarilo sa nájsť štruktúru, na vaše riešenie sa radšej opýtajte.</p>\n\n                  </Alert>\n              );\n          }\n      } else if (evaluation.solutionToFormalization === 'WA'\n          && evaluation.formalizationToSolution === 'OK') {\n          if (evaluation.iSolutionToFormalization !== 'null') {\n              return (\n                  <Alert variant=\"danger\">\n                      <b>Riešenie je nesprávne.</b>\n                      <p>Vieme nájsť konkrétnu štruktúru,\n                          v ktorej je vaša formalizácia pravdivá,\n                          ale hľadaná správna formalizácia je nepravdivá.</p>\n                      <p>{evaluation.m2}</p>\n                      <p>{domainSolToForm}</p>\n                      {symbolsSolToForm.split(\"\\n\").map((i,key) => {\n                          return <div className=\"p\" key={key}>{i}</div>;\n                      })}\n\n                  </Alert>\n              );\n          } else {\n              return (\n                  <Alert variant=\"danger\">\n                      <b>Riešenie je nesprávne.</b>\n                      <p>Nepodarilo sa nájsť štruktúru, na vaše riešenie sa radšej opýtajte.</p>\n                  </Alert>\n              );\n          }\n      } else {\n          return (\n              <Alert variant=\"danger\">\n                  <b>Riešenie je nesprávne.</b>\n                  <p>Vieme nájsť konkrétne štruktúry,\n                      v ktorých je vaša formalizácia pravdivá,\n                      ale hľadaná správna formalizácia je nepravdivá, a naopak.</p>\n\n                  <p>{evaluation.m2}</p>\n                  <p>{domainSolToForm}</p>\n                  {symbolsSolToForm.split(\"\\n\").map((i,key) => {\n                      return <div className=\"p\" key={key}>{i}</div>;\n                  })}\n\n\n                  <p>{evaluation.m1}</p>\n                  <p>{domainFormToSol}</p>\n                  {symbolsFormToSol.split(\"\\n\").map((i,key) => {\n                      return <div className=\"p\" key={key}>{i}</div>;\n                  })}\n\n\n              </Alert>\n          );\n      }\n\n  }\n};\n\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from '../addExercise/SyntaxError';\nimport Evaluation from './Evaluation';\nimport {\n  update,\n  evaluate,\n  selectSolution\n} from '../../redux/solveExerciseSlice';\n\n\nfunction Solution({ exercise_id, proposition_id, proposition,\n                    value, error, update ,  evaluate, user}) {\n  return (\n    <div className=\"clearfix mt-4\">\n      <Form.Group className=\"clearfix\">\n        <Form.Label>\n          { proposition }\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter formalization\"\n          value={value}\n          onChange={(e) => update(e.target.value, proposition_id)}\n        />\n        <Button\n          className=\"mt-1 float-right\"\n          variant=\"primary\"\n          disabled={error}\n          onClick={() => evaluate({\n            exercise_id,\n            proposition_id,\n            solution: value,\n            user: user\n          })}\n        >\n          Check\n        </Button>\n        <SyntaxError value={value} error={error} />\n      </Form.Group>\n      <Evaluation proposition_id={proposition_id} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return selectSolution(state, ownProps.proposition_id);\n};\n\nconst mapDispatchToProps = { update, evaluate };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Solution);\n","import React, { useEffect } from 'react';\nimport { Spinner, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Solution from './Solution';\nimport {\n  selectExercise,\n  selectStatus,\n  selectError,\n  fetchExercise\n} from '../../redux/solveExerciseSlice';\nimport { useParams } from 'react-router';\n\n\nfunction SolveExercise({ match, exercise, status, error, fetchExercise, user })  {\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchExercise(id);\n    }\n  }, [status, id, exercise, fetchExercise]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    const propositions_list = exercise.propositions.map((x) => (\n      <Solution\n        key={x.proposition_id}\n        exercise_id={id}\n        proposition_id={x.proposition_id}\n        proposition={x.proposition}\n        user={user}\n      />\n    ));\n    content = (\n      <div>\n        <h2>{ exercise.title }</h2>\n        <h5 className=\"mt-4\">Constants</h5>\n        <p>{ exercise.constants }</p>\n        <h5 className=\"mt-4\">Predicates</h5>\n        <p>{ exercise.predicates }</p>\n        <h5 className=\"mt-4\">Functions</h5>\n        <p>{ exercise.functions }</p>\n        <h5 className=\"mt-4\">Description</h5>\n        <p>{ exercise.description }</p>\n        { propositions_list }\n      </div>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercise: selectExercise(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    user: state.user.user.username,\n  };\n};\n\nconst mapDispatchToProps = { fetchExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolveExercise);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  updateConstants,\n  selectConstantsParsed\n} from '../../redux/addExerciseSlice';\n\n\nfunction Constants({ value, error, update }) {  \n  return (\n    <Form.Group>\n      <Form.Label>\n        Constants:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter constants\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectConstantsParsed;\n\nconst mapDispatchToProps = { update: updateConstants };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Constants);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  updatePredicates,\n  selectPredicatesParsed\n} from '../../redux/addExerciseSlice';\n\n\nfunction Predicates({ value, error, update }) {\n  return (\n    <Form.Group>\n      <Form.Label>\n        Predicates:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter predicates\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectPredicatesParsed;\n\nconst mapDispatchToProps = { update: updatePredicates };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Predicates);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  updateFunctions,\n  selectFunctionsParsed\n} from '../../redux/addExerciseSlice';\n\n\nfunction Functions({ value, error, update }) {\n  return (\n    <Form.Group>\n      <Form.Label>\n        Functions:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter functions\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectFunctionsParsed;\n\nconst mapDispatchToProps = { update: updateFunctions };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Functions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  selectLanguage\n} from '../../redux/addExerciseSlice';\n\n\nfunction Clashes({ errorMessage }) {\n  return errorMessage ? (\n    <p className=\"text-danger\">\n      {errorMessage}\n    </p>\n  )\n  : null;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    errorMessage: selectLanguage(state).errorMessage\n  };\n};\n\nexport default connect(mapStateToProps)(Clashes);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n    selectConstraint, updateConstraint\n} from '../../redux/addExerciseSlice';\n\n\nfunction Constraint({ value, error, update }) {\n  return (\n    <Form.Group>\n      <Form.Label>\n        Preferred model constraints(optional):\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter constraints\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectConstraint;\n\nconst mapDispatchToProps = { update: updateConstraint };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Constraint);\n","import React from 'react';\nimport Constants from './Constants';\nimport Predicates from './Predicates';\nimport Functions from './Functions';\nimport Clashes from './Clashes';\nimport Constraint from './Constraint';\n\n\nfunction LanguageSection() {\n  return (\n    <div className=\"mt-4 mb-4\">\n      <h4>Language</h4>\n      <Constants />\n      <Predicates />\n      <Functions />\n      <Clashes />\n      <Constraint/>\n    </div>\n  );\n}\n\nexport default LanguageSection;\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  removeFormalization,\n  updateFormalization,\n  selectFormalization,\n  updateConstraints,  selectConstraints\n} from '../../redux/addExerciseSlice';\n\n\nfunction Formalization({ i, j, value, value2, error, error2, remove, update, updateConstraints }) {\n  return (\n    <div className=\"clearfix pl-5\">\n      <Form.Group className=\"mb-0\">\n        <Form.Label>\n          {\"Formalization \" + (i + 1) + \".\" + (j + 1)}\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter formalization\"\n          value={value}\n          onChange={(e) => update(e.target.value, i, j)}\n        />\n        <SyntaxError value={value} error={error} />\n\n        <Form.Label>\n          {\"Preferred model constraints \" + (i + 1) + \".\" + (j + 1) + \"(optional)\"}\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter constraints\"\n          value={value2}\n          onChange={(e) => updateConstraints(e.target.value, i, j)}\n        />\n        <SyntaxError value={value2} error={error2} />\n        <Button\n          className=\"mt-1 float-right\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={() => remove(i, j)}\n        >\n          Remove\n        </Button>\n      </Form.Group>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = selectFormalization(state, ownProps.i, ownProps.j);\n  const data2 = selectConstraints(state, ownProps.i, ownProps.j);\n  return {\n    value: data.value,\n    error: data.error,\n    value2: data2.value,\n    error2: data2.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  remove: removeFormalization,\n  update: updateFormalization,\n  updateConstraints\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Formalization);\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Formalization from './Formalization';\nimport {\n  addNewFormalization,\n  removeProposition,\n  updateInformalValue,\n  selectInformalValue,\n  selectFormalizations\n} from '../../redux/addExerciseSlice';\n\n\nfunction Proposition({ i, value, formalizations, add, remove, update }) {\n  const formalizations_list = formalizations.map((x, j) => (\n    <Formalization key={j} i={i} j={j} />\n  ));\n\n  return (\n    <div className=\"clearfix mb-2 border-bottom border-dark\">\n      <Form.Group className=\"clearfix mb-0\">\n        <Form.Label>\n          {\"Proposition \" + (i + 1)}\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter proposition\"\n          value={value}\n          onChange={(e) => update(e.target.value, i)}\n        />\n        <Button\n          className=\"mt-1 mb-1 float-right\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={() => remove(i)}\n        >\n          Remove proposition\n        </Button>\n        { value === \"\" ?\n          <Form.Text className=\"mb-3 text-danger\">\n            This field cannot be empty\n          </Form.Text>\n          : null\n        }\n      </Form.Group>\n      { formalizations_list }\n      <Button\n        className=\"mt-1 mb-3 float-right\"\n        variant=\"primary\"\n        size=\"sm\"\n        onClick={() => add(i)}\n      >\n        Add formalization\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    value: selectInformalValue(state, ownProps.i),\n    formalizations: selectFormalizations(state, ownProps.i)\n  };\n};\n\nconst mapDispatchToProps = {\n  add: addNewFormalization,\n  remove: removeProposition,\n  update: updateInformalValue\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Proposition);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Proposition from './Proposition';\nimport {\n  addNewProposition,\n  selectPropositions\n} from '../../redux/addExerciseSlice';\n\n\nfunction PropositionsSection({ propositions, add }) {\n  const propositions_list = propositions.map((x, i) => (\n    <Proposition key={i} i={i} />\n  ));\n\n  return (\n    <div className=\"mt-4 mb-4 clearfix\">\n      <h4>Propositions</h4>\n      { propositions_list }\n      <Button\n        className=\"mt-2 float-right\"\n        variant=\"primary\"\n        size=\"sm\"\n        onClick={() => add()}\n      >\n        Add proposition\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    propositions: selectPropositions(state)\n  };\n};\n\nconst mapDispatchToProps = { add: addNewProposition };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PropositionsSection);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  updateExerciseTitle,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\n\n\nfunction ExerciseTitle({ value, update }) {  \n  return (\n    <Form.Group>\n      <Form.Label>\n        Exercise title:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter exercise title\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n      { value === \"\" ?\n        <Form.Text className=\"mb-3 text-danger\">\n          This field cannot be empty\n        </Form.Text>\n        : null\n      }\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectExerciseTitle;\n\nconst mapDispatchToProps = { update: updateExerciseTitle };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseTitle);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  updateDescription,\n  selectDescription\n} from '../../redux/addExerciseSlice';\n\n\nfunction Description({ value, update }) {  \n  return (\n    <Form.Group>\n      <Form.Label>\n        Description:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter description\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectDescription;\n\nconst mapDispatchToProps = { update: updateDescription };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Description);\n","import React from 'react';\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  addNewExercise,\n  checkExercise,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\nimport LanguageSection from './LanguageSection';\nimport PropositionsSection from './PropositionsSection';\nimport ExerciseTitle from './ExerciseTitle';\nimport Description from './Description';\n\n\nfunction AddExercise({ status, error, containsErrors, title, addExercise }) {\n  let content = null;\n  if (status === 'idle') {\n    content = (\n      <Form>\n        <h2>Add exercise</h2>\n        <ExerciseTitle />\n        <Description />\n        <LanguageSection />\n        <PropositionsSection />\n        <Button\n          className=\"mt-4 mb-5 float-right clearfix\"\n          variant=\"primary\"\n          size=\"lg\"\n          disabled={containsErrors}\n          onClick={addExercise}\n        >\n          Save exercise\n        </Button>\n      </Form>\n    );\n  } else if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    content = (\n      <Alert variant=\"success\">\n        Exercise <b>{ title }</b> was succefully added to the database.\n      </Alert>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.addExercise.status,\n    error: state.addExercise.error,\n    containsErrors: checkExercise(state),\n    title: selectExerciseTitle(state).value\n  };\n};\n\nconst mapDispatchToProps = { addExercise: addNewExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExercise);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nfunction AdminRoute({ isLoggedIn, isAdmin, component: Component, location, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isLoggedIn) {\n            if(!isAdmin){\n                return <Redirect to={{ pathname: \"/\", state: { from: location } }} />;\n            }\n          return <Component />;\n        } else {\n          return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    isAdmin: state.user.isAdmin,\n  };\n};\n\nexport default connect(mapStateToProps)(AdminRoute);\n","import React, { useEffect } from 'react';\nimport { Spinner, Alert, Table} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchAllExercises,\n  selectExercises,\n  selectStatus,\n  selectError\n} from '../../redux/exercisesSlice';\nimport {fetchAllUsersToExercise} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction Exercises({ exercises, status, error, fetchAllExercises, fetchAllUsersToExercise }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllExercises();\n    }\n  }, [status, fetchAllExercises]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let exercises_list = exercises.map((x) => (\n      <tr key={x.exercise_id}>\n        <td>\n          <Link to={`/progress/exercise/users`} key={x.exercise_id} onClick={() => fetchAllUsersToExercise(x.exercise_id)}>\n            { x.title }\n          </Link>\n        </td>\n        <td>{x.attempted}</td>\n    </tr>\n    ));\n  content =\n   <Table striped bordered hover>\n      <thead>\n      <tr>\n        <th>Exercise</th>\n        <th>Students attempted</th>\n      </tr>\n      </thead>\n     <tbody>\n      { exercises_list }\n     </tbody>\n  </Table>\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Student progress</h2>\n\n            {content}\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercises: selectExercises(state),\n    status: selectStatus(state),\n    error: selectError(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllExercises, fetchAllUsersToExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercises);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectStatus,\n  selectError, fetchUsersSolutions, selectUsersSolution, selectExerciseTitle, selectUserName\n} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction UsersSolutionList({ solutions, users, status, error, name, id, title })  {\n\n\n  useEffect( () => {\n    if (status === 'idle') {\n      fetchUsersSolutions({exercise_id: id, user_name: name});\n    }\n  }, [status, id, users, fetchUsersSolutions]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n\n    let s = [];\n    let table = [];\n    let proposition = null;\n    let first= false\n    for(let i = 0; i < solutions.length; i++){\n      if(proposition !== solutions[i].proposition && first){\n        proposition = solutions[i].proposition;\n        s.push(<h5   key={proposition}> {proposition}</h5>)\n        s.push(<Table striped bordered hover>\n          <thead>\n          <tr>\n            <th>Date</th>\n            <th>Solution</th>\n            <th>Correct</th>\n          </tr>\n          </thead>\n          <tbody>\n          {table}\n          </tbody>\n        </Table>\n          );\n        table = [];\n      }\n      else if(proposition === null){\n        proposition = solutions[i].proposition;\n        first = true;\n      }\n      if(solutions[i].is_correct){\n        table.push(\n            <tr key={solutions[i].date}>\n              <td>\n                {solutions[i].date.split(\".\")[0].replace(\"T\", \" \") + \" \"}\n              </td>\n              <td>{solutions[i].solution}</td>\n              <td>  &#x2713;</td>\n            </tr>)\n      }\n      else{\n        table.push(<tr key={solutions[i].date}>\n              <td>\n                {solutions[i].date.split(\".\")[0].replace(\"T\", \" \") + \" \"}\n              </td>\n              <td>{solutions[i].solution}</td>\n              <td>  &#x2715;</td>\n            </tr>)\n      }\n    }\n    content = (\n        <div key={s}>{ s }</div>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n      <div>\n          <h2 className=\"mb-4\">{title} by {name} </h2>\n          { content }\n      </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    solutions: selectUsersSolution(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    name: selectUserName(state),\n    title: selectExerciseTitle(state),\n  };\n};\n\nconst mapDispatchToProps = {  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersSolutionList);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {Link} from \"react-router-dom\";\nimport {\n    selectUsers,\n    selectStatus,\n    selectError, fetchUsersSolutions, selectProposition, fetchAllUsersToExercise, selectExerciseTitle\n} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction UsersToExercise({ users, status, error, fetchAllUsersToExercise, fetchUsersSolutions, id, title })  {\n\n\n\n  useEffect( () => {\n    if (status === 'idle') {\n        fetchAllUsersToExercise(id);\n    }\n  }, [status, id, users, fetchAllUsersToExercise]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let user_list = users.map((x) => (\n        <tr key={x.user_name}>\n          <td>\n            <Link to={`/progress/exercise/users/solutions`} key={x.user_name} onClick={() => fetchUsersSolutions( {exercise_id: x.exercise_id, user_name: x.user_name})}>\n              { x.user_name }\n            </Link>\n          </td>\n          <td>{x.solved}</td>\n          <td>{x.attempts}</td>\n        </tr>\n    ));\n    content =<Table striped bordered hover>\n        <thead>\n        <tr>\n            <th>Student</th>\n            <th>Solved</th>\n            <th># Attempts</th>\n        </tr>\n        </thead>\n        <tbody>\n        { user_list }\n        </tbody>\n    </Table>\n\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n      <div>\n          <h2 className=\"mb-4\"> {title} </h2>\n          { content }\n      </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: selectUsers(state),\n    proposition_id: selectProposition(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    title: selectExerciseTitle(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchUsersSolutions, fetchAllUsersToExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersToExercise);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectStatus, selectError, addChanged, fetchAllUsers, saveAdmins,\n  selectAllUsers, selectChangedAdmins\n} from \"../../redux/adminsSlice\";\n\n\nfunction UserList({ users, status, error, fetchAllUsers, addChanged, changedAdmins, saveAdmins }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllUsers();\n    }\n  }, [status, fetchAllUsers]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let user = users.map((x) => (\n        <tr key={x.user_name}>\n          <td>\n              { x.user_name }\n          </td>\n        <td> <input type=\"checkbox\" defaultChecked={x.is_admin} id={x.user_name} onChange={(e) => {addChanged(e.target.id)}}/> </td>\n\n        </tr>\n    ));\n    content =\n        <Form>\n        <Table striped bordered hover>\n          <thead>\n          <tr>\n            <th>Username</th>\n            <th>Is admin</th>\n          </tr>\n          </thead>\n          <tbody>\n          { user }\n          </tbody>\n        </Table>\n        </Form>\n\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Users</h2>\n      { content }\n        <Button  onClick={(e) => {saveAdmins(changedAdmins)}}>Save admins</Button>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: selectAllUsers(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    changedAdmins: selectChangedAdmins(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllUsers, addChanged, saveAdmins };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  Container, Alert, Button, Navbar, Nav\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport ProtectedRoute from './components/login/ProtectedRoute';\nimport LoginForm from './components/login/LoginForm';\nimport ExerciseList from './components/solveExercise/ExerciseList';\nimport SolveExercise from './components/solveExercise/SolveExercise';\nimport AddExercise from './components/addExercise/AddExercise';\nimport { logOut } from './redux/userSlice';\nimport AdminRoute from \"./components/login/AdminRoute\";\nimport Exercises from \"./components/studentProgress/Exercises\";\nimport UserSolutionsList from \"./components/studentProgress/UserSolutionsList\";\nimport UsersToExercise from \"./components/studentProgress/UsersToExercise\";\nimport UserList from \"./components/addAdmins/UserList\";\n\n\nfunction App({ isLoggedIn, user, logOut }) {\n  let loginInfo = null;\n  if (isLoggedIn) {\n    loginInfo = (\n      <React.Fragment>\n        <span className=\"px-4 my-auto text-info\">\n          You are logged in as <b>{ user.username }</b>\n        </span>\n        <Button as={Link} to=\"/\" onClick={() => logOut()}>\n          Log out\n        </Button>\n      </React.Fragment>\n    );\n  } else {\n    loginInfo = (\n      <Button as={Link} to=\"/login\">\n        Log in\n      </Button>\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link className=\"px-4\" as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link className=\"px-4\" as={Link} to=\"/add\">\n              Add\n            </Nav.Link>\n            <Nav.Link className=\"px-4\" as={Link} to=\"/progress\">\n              Student progress\n            </Nav.Link>\n            <Nav.Link className=\"px-4\" as={Link} to=\"/admins\">\n              Admin\n            </Nav.Link>\n          </Nav>\n          <Nav>\n            { loginInfo }\n          </Nav>\n          </Navbar>\n        <Container className=\"my-3\">\n          <Switch>\n            <ProtectedRoute exact path=\"/\" component={ExerciseList} />\n            <AdminRoute exact path=\"/admins\" component={UserList} />\n            <AdminRoute exact path=\"/progress\" component={Exercises} />\n            <AdminRoute exact path=\"/progress/exercise/users\" component={UsersToExercise} />\n            <AdminRoute exact path=\"/progress/exercise/users/solutions\" component={UserSolutionsList} />\n            <Route exact path=\"/login\" component={LoginForm} />\n            <ProtectedRoute path=\"/solve/:id\" component={SolveExercise} />\n\n            <AdminRoute exact path=\"/add\" component={AddExercise}  />\n\n            <Route path=\"*\" component={() => {\n              return <Alert variant=\"danger\">404 Not Found</Alert>\n            }} />\n          </Switch>\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    isAdmin: state.user.isAdmin,\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = { logOut };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}